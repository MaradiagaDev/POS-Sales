<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnAddClientes.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAABzZJREFUWEelV3tQ1lUaNkGZ9TY6mKbmlCzEtUAURAVE8K7gZVjlJqSoQOttoggS
        tLhM4GVpRiADURAZy9pMCgIvpZZNGcK6uiXNGDtLaCTZqLtaH/g9vc/5vh/7sRzbP3hnnjnne895n/c5
        7/nx+70MAPBQaOwRwUhBuCBXUGwF5/RxjXv6mI6f0DoN/I8NEmxxc3P7af78+b/GxsaaBbDCTB/XBg4c
        +JLsG6wibEzHT2idBmzMzsHBYZ8kMa1YsQJz5szBzJkzMW3aNAXO6ePawoULTUOGDDkiMRTcYzp+Qus0
        YGOhAQEBv4oA+Pr6wtvbWwuuzZ07F8HBQSaJWS3ouQ4dP6F1GrCa/ahRo5oXL16sEvj4+MDT0xNS7l6g
        jyK4vmDBAkyYMOF7if2DhaJ/Ah51c33ql1mzZiEoKAgBAdPU6OHhgUmTJilwHhwcrNYCAwMVfHy8WQUP
        C0X/BLh7eXqYQ0JC4Ow0CVOedoGbq4tK6O/vr8C5iMRUb1e4OP9RCfT1nWyW2DkWin4I8HR6NMjD3VUS
        +SE6IhCNdUU4dbQQoUH+UnZ3eAnmhQbii4ZKfH32EKIiQuTB9MczT3vhMcdhSxSJmI6f0DoN0Lxdxrq6
        P+WEZzzdcLQ4FU11e/HNuUP458XjaP3bR2j7xyfoaDmDtuYPlL+mfAe8PFzh7uoMT6cx/opETMdPaJ0G
        rOYwd6bn3Y3xi3G6ejsuHP8LrpwuQ8vnR1TS9ssiQkb+pv/8sd1YF70QQX5ufAaGWij6J+CRtISgd6t2
        J+OTqu04/04eLta+LslK1YlbPjusRv6m//xfX8OR17cidXXgKYkdaKHon4AB2UmzFxS9HInTVZn4WEAR
        rMRFuY7m+mI18jf9597OQdmrcXhlQ0i8NVyZjp/QOg0YJgLscpJD8WFZGhoOvIjTFRk4e2Q7zh3NsSSV
        kb8/rtyGExXbkJsSBonp9TrW8RNapwFbE8KNezMicfJgOj4q3Yr6/ak4eSANpw68pMaG8hdwsiIdb+6I
        YfJt1rAe0/ETWufDIMQlVQXrpQppqNu3BbVvbFLgnL63Cp9j8nZd7MPw38nvm4PgCdcnRsdIAhzITZBS
        Z0g15PSCEwczcDBvDXKTZiHj2cBvudca87vWR4Axt/E9LogVlI0cObJJ3vkdFJD/5zDwmSh8YakC53tf
        /hPKdkRha2ywSb4dTYyxxpJDayqHTTLbuaNgtb29fb2Xl9fPcXFxXZmZmebCwkKWGJUFiag/nI/3SzNl
        LEDLV/VoPHEQVfmJ2JMRh+zsbHNiYmLX5MmTfx40aFA9uaycvUwrQGysIMfJyenHNWvWPEhNTUVKSgrW
        rVuHtWvXompvFkqyovBhZR6+bDiEv5+vwYWT1XinJB17ng9HTsZGbNq0CYzLyspCcnLyAxcXlx/JaeXu
        sT4CxOwFyc7Ozp2bN282y8mxbNkyrFy5EpyLIJS9WYyGd/fhreJM7H8tBeX5z+HtN7Jw6r0y7C/ercSu
        X79e7WVMUlIS0tPTze7u7p3ktuZQphPw+ODBg89ERUWZrd0NIiIiEBkZiejoaMTHxyMtLQ03btzAvXv3
        YDKZ0N3drcbOzk7INWHDhg2Q8qu9MTExSjznCQkJZumqzjCHJZVewPKJEyd2styzZ88GOyA2IkYVSChE
        aGxsxN27d5WI+/fvq/HSpUsqOa+JCdkrrlq1CsuXL1cNCtfIzRyWVHoB2fLgmHhqNiDs8xgcHh6u+j0S
        UkRNTQ1u3bqF27dv486dO2qsq6tTZbdNTp558+apwyxduhRTpkzhByrbkqqvADaRh6WZ6GJidjUMZI9n
        XAVFsBKlpaXo6OjAzZs3Vek5lpeXqzuX61P7WDkmDw0NVQ2LpVcM7rKzsztszdVHwChZPCsbzexyZ8yY
        oTobEpCIIlgJXkdBQQHa2trQ3t6O69evq3HXrl2q3EuWLFF7GRMWFqYqST5ykXvo0KGfMpdOgIs8JF/L
        vZtt222qNyrB61i0aBHy8vJw7do1tLa29iA3N1et8bnhXgpnclZy+vTp0i8GcM0sL7RvmEsnIEDU/Yvl
        l7uCn5+fEsFKkIRkJOWpWIGrV6+ipaWlBzt37lSJuU7BFM4DMDn7RvKRe/To0W3MpRMQNmLEiB8YzPab
        mDp1qgqmekMIiYuKinD58mWFK1euqLGkpARsXLnOfdzPOMaTh3zkHjNmTAdz6QQEDB8+/DsSMIBVMEQY
        1eBpSFxRUYGmpiY0Nzf3oLKyUp2Y69zH/YwzuDiS29HRsZW5dALGyv91FePHj/+P/Ck+oHrCeB6MOUlq
        a2vVu8AW9PGamNy4c1uQk9zyoFcwl04AzUewRzZdGDZs2A9yX/8eN27cL/ICMcm3oUu+ht1C1l1dXW0+
        duxYL9DHNe7hXsYwlhzkIie5rTmU6QTQ+B1/UrBIsEWQL9gnqBa8Jzj+f8A93MsYxpKDXOTs1SMAGPAb
        exaxvd7R41QAAAAASUVORK5CYII=
</value>
  </data>
</root>
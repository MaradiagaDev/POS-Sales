<?xml version="1.0"?>
<doc>
    <assembly>
        <name>C1.ScheduleCore</name>
    </assembly>
    <members>
        <member name="T:C1.Schedule.C1BindingSource">
            <summary>
            The <see cref="T:C1.Schedule.C1BindingSource"/> encapsulates the data source. 
            </summary>
        </member>
        <member name="M:C1.Schedule.C1BindingSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.C1BindingSource"/> class. 
            </summary>
        </member>
        <member name="M:C1.Schedule.C1BindingSource.#ctor(System.Object,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.C1BindingSource"/> class
            with the specified data source and data member values.
            </summary>
            <param name="dataSource">The <see cref="T:System.Object"/> object to use as data source.</param>
            <param name="dataMember">The data member name.</param>
        </member>
        <member name="P:C1.Schedule.C1BindingSource.AllowEdit">
            <summary>
            Gets a value indicating whether items in the underlying list can be edited.
            </summary>
        </member>
        <member name="P:C1.Schedule.C1BindingSource.AllowNew">
            <summary>
            Gets or sets a value indicating whether the <see cref="M:C1.Schedule.C1BindingSource.AddNew"/> method 
            can be used to add items to the list. 
            </summary>
        </member>
        <member name="P:C1.Schedule.C1BindingSource.AllowRemove">
            <summary>
            Gets a value indicating whether items can be removed from the underlying list. 
            </summary>
        </member>
        <member name="P:C1.Schedule.C1BindingSource.Count">
            <summary>
            Gets the total number of items in the underlying list.
            </summary>
        </member>
        <member name="P:C1.Schedule.C1BindingSource.DataMember">
            <summary>
            Gets or sets the specific list in the data source to which 
            the connector currently binds to.
            </summary>
        </member>
        <member name="P:C1.Schedule.C1BindingSource.DataSource">
            <summary>
            Gets or sets the data source that the connector binds to. 
            </summary>
        </member>
        <member name="P:C1.Schedule.C1BindingSource.Filter">
            <summary>
            Gets or sets the expression used to filter which rows are viewed. 
            </summary>
        </member>
        <member name="P:C1.Schedule.C1BindingSource.IsFixedSize">
            <summary>
            Gets a value indicating whether the underlying list has a fixed size. 
            </summary>
        </member>
        <member name="P:C1.Schedule.C1BindingSource.IsReadOnly">
            <summary>
            Gets a value indicating whether the underlying list is read-only.
            </summary>
        </member>
        <member name="P:C1.Schedule.C1BindingSource.System#ComponentModel#IBindingList#IsSorted">
            <summary>
            Gets a value indicating whether the items in the underlying list are sorted.
            </summary>
        </member>
        <member name="P:C1.Schedule.C1BindingSource.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread safe). 
            </summary>
        </member>
        <member name="P:C1.Schedule.C1BindingSource.Item(System.Int32)">
            <summary>
            Gets or sets the list element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
        </member>
        <member name="P:C1.Schedule.C1BindingSource.List">
            <summary>
            Gets the list that the connector is bound to. 
            </summary>
        </member>
        <member name="P:C1.Schedule.C1BindingSource.RaiseListChangedEvents">
            <summary>
            Gets or sets a value indicating whether <see cref="E:C1.Schedule.C1BindingSource.ListChanged"/> events should be raised. 
            </summary>
        </member>
        <member name="P:C1.Schedule.C1BindingSource.Sort">
            <summary>
            Gets or sets the column names used for sorting, and the sort order 
            for viewing the rows in the data source.
            </summary>
        </member>
        <member name="P:C1.Schedule.C1BindingSource.System#ComponentModel#IBindingListView#SortDescriptions">
            <summary>
            Gets the collection of sort descriptions applied to the data source. 
            </summary>
        </member>
        <member name="P:C1.Schedule.C1BindingSource.System#ComponentModel#IBindingList#SortDirection">
            <summary>
            Gets the direction the items in the list are sorted.
            </summary>
        </member>
        <member name="P:C1.Schedule.C1BindingSource.System#ComponentModel#IBindingList#SortProperty">
            <summary>
            Gets the <see cref="T:System.ComponentModel.PropertyDescriptor"/> that is being used for sorting the list. 
            </summary>
        </member>
        <member name="P:C1.Schedule.C1BindingSource.SupportsAdvancedSorting">
            <summary>
            Gets a value indicating whether the data source supports multi-column sorting. 
            </summary>
        </member>
        <member name="P:C1.Schedule.C1BindingSource.SupportsChangeNotification">
            <summary>
            Gets a value indicating whether the data source supports change notification.
            </summary>
        </member>
        <member name="P:C1.Schedule.C1BindingSource.SupportsFiltering">
            <summary>
            Gets a value indicating whether the data source supports filtering.
            </summary>
        </member>
        <member name="P:C1.Schedule.C1BindingSource.SupportsSearching">
            <summary>
            Gets a value indicating whether the data source supports searching with 
            the Find method. 
            </summary>
        </member>
        <member name="P:C1.Schedule.C1BindingSource.SupportsSorting">
            <summary>
            Gets a value indicating whether the data source supports sorting.
            </summary>
        </member>
        <member name="P:C1.Schedule.C1BindingSource.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the underlying list. 
            </summary>
        </member>
        <member name="P:C1.Schedule.C1BindingSource.DataKeyNamesInternal">
            <summary>
            
            </summary>
        </member>
        <member name="E:C1.Schedule.C1BindingSource.AddingNew">
            <summary>
            Occurs before an item is added to the underlying list. 
            </summary>
        </member>
        <member name="E:C1.Schedule.C1BindingSource.DataMemberChanged">
            <summary>
            Occurs when the <see cref="P:C1.Schedule.C1BindingSource.DataMember"/> property value has changed.
            </summary>
        </member>
        <member name="E:C1.Schedule.C1BindingSource.DataSourceChanged">
            <summary>
            Occurs when the <see cref="P:C1.Schedule.C1BindingSource.DataSource"/> property value has changed. 
            </summary>
        </member>
        <member name="E:C1.Schedule.C1BindingSource.ListChanged">
            <summary>
            Occurs when the underlying list changes or an item in the list changes.
            </summary>
        </member>
        <member name="M:C1.Schedule.C1BindingSource.Add(System.Object)">
            <summary>
            Adds an existing item to the internal list.
            </summary>
            <param name="value">The <see cref="T:System.Object"/> to add.</param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:C1.Schedule.C1BindingSource.AddNew">
            <summary>
            Adds a new item to the underlying list. 
            </summary>
            <returns>The item added to the list.</returns>
        </member>
        <member name="M:C1.Schedule.C1BindingSource.FinishAddNew">
            <summary>
            Commits a pending new item to the collection. 
            </summary>
        </member>
        <member name="M:C1.Schedule.C1BindingSource.BeginEdit(System.Object)">
            <summary>
            Starts an edit operation on the specified object.
            </summary>
            <param name="item">The object on which to start operation.</param>
        </member>
        <member name="M:C1.Schedule.C1BindingSource.EndEdit(System.Object)">
            <summary>
            Applies pending changes to the underlying data source.
            </summary>
            <param name="item">The object on which to apply pending changes.</param>
        </member>
        <member name="M:C1.Schedule.C1BindingSource.System#ComponentModel#IBindingListView#ApplySort(System.ComponentModel.ListSortDescriptionCollection)">
            <summary>
            Sorts the data source with the specified sort description or descriptions.
            </summary>
            <param name="sorts"></param>
        </member>
        <member name="M:C1.Schedule.C1BindingSource.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
            <summary>
            Sorts the data source using the specified property descriptor and sort direction.
            </summary>
            <param name="property"></param>
            <param name="direction"></param>
        </member>
        <member name="M:C1.Schedule.C1BindingSource.Clear">
            <summary>
            Removes all elements from the list. 
            </summary>
        </member>
        <member name="M:C1.Schedule.C1BindingSource.Contains(System.Object)">
            <summary>
            Determines whether an object is an item in the list. 
            </summary>
            <param name="value">The <see cref="T:System.Object"/> to locate.</param>
            <returns>True if the <see cref="T:System.Object"/> is found in the list; 
            otherwise, false.</returns>
        </member>
        <member name="M:C1.Schedule.C1BindingSource.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the contents of the <see cref="P:C1.Schedule.C1BindingSource.List"/> to the specified array, 
            starting at the specified index value. 
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the 
            destination of the elements copied from <see cref="T:System.Collections.ICollection"/>. 
            The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="index">The zero-based index in the array at which the copying begins.</param>
        </member>
        <member name="M:C1.Schedule.C1BindingSource.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the <see cref="T:C1.Schedule.C1BindingSource"/>.
            </summary>
            <param name="disposing">True if managed resources should be disposed; 
            otherwise, false.</param>
        </member>
        <member name="M:C1.Schedule.C1BindingSource.Find(System.ComponentModel.PropertyDescriptor,System.Object)">
            <summary>
            Searches for the index of the item that has the given property descriptor. 
            </summary>
            <param name="prop">The <see cref="T:System.ComponentModel.PropertyDescriptor"/> 
            to search on.</param>
            <param name="key">The value of the property parameter to search for.</param>
            <returns>The index of the item that has the given 
            <see cref="T:System.ComponentModel.PropertyDescriptor"/>.</returns>
        </member>
        <member name="M:C1.Schedule.C1BindingSource.Find(System.String,System.Object)">
            <summary>
            Returns the index of the item in the list with the specified property name and value. 
            </summary>
            <param name="propertyName">The property name to search on.</param>
            <param name="key">The value of the property parameter to search for.</param>
            <returns>
            The index of the item in the list with the specified property name and value.
            </returns>
        </member>
        <member name="M:C1.Schedule.C1BindingSource.GetEnumerator">
            <summary>
            Retrieves an enumerator for the <see cref="P:C1.Schedule.C1BindingSource.List"/>. 
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerable"/> object that can 
            be used to iterate through the collection.</returns>
        </member>
        <member name="M:C1.Schedule.C1BindingSource.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            Retrieves an array of PropertyDescriptor objects representing 
            the bindable properties of the data source list type.
            </summary>
            <param name="listAccessors">An array of 
            <see cref="T:System.ComponentModel.PropertyDescriptor"/> objects to find in 
            the collection as bindable. This can be null.</param>
            <returns>The <see cref="T:System.ComponentModel.PropertyDescriptorCollection"/> 
            that represents the properties on each item used to bind data.</returns>
        </member>
        <member name="M:C1.Schedule.C1BindingSource.GetListName(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            Gets the name of the list supplying data for the binding. 
            </summary>
            <param name="listAccessors">An array of <see cref="T:System.ComponentModel.PropertyDescriptor"/> 
            objects, the list name for which is returned. This can be null.</param>
            <returns>The name of the list.</returns>
        </member>
        <member name="M:C1.Schedule.C1BindingSource.IndexOf(System.Object)">
            <summary>
            Searches for the specified object and returns the index of the first 
            occurrence within the entire list.
            </summary>
            <param name="value">The <see cref="T:System.Object"/> to index.</param>
            <returns>The index of <i>value</i> if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:C1.Schedule.C1BindingSource.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item into the list at the specified index.
            </summary>
            <param name="index">The zero-based index at which 
            <i>value</i> should be inserted.</param>
            <param name="value">The <see cref="T:System.Object"/> to insert.</param>
        </member>
        <member name="M:C1.Schedule.C1BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Schedule.C1BindingSource.OnDataMemberChanged(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Schedule.C1BindingSource.OnDataSourceChanged(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Schedule.C1BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:C1.Schedule.C1BindingSource.Remove(System.Object)">
            <summary>
            Removes the specified item from the list. 
            </summary>
            <param name="value">The <see cref="T:System.Object"/> to remove.</param>
        </member>
        <member name="M:C1.Schedule.C1BindingSource.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified index in the list.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:C1.Schedule.C1BindingSource.System#ComponentModel#IBindingListView#RemoveFilter">
            <summary>
            Removes the filter associated with the <see cref="T:C1.Schedule.C1BindingSource"/>.
            </summary>
        </member>
        <member name="M:C1.Schedule.C1BindingSource.System#ComponentModel#IBindingList#RemoveSort">
            <summary>
            Removes the sort associated with the <see cref="T:C1.Schedule.C1BindingSource"/>. 
            </summary>
        </member>
        <member name="M:C1.Schedule.C1BindingSource.ResetAllowNew">
            <summary>
            Reinitializes the <see cref="P:C1.Schedule.C1BindingSource.AllowNew"/> property. 
            </summary>
        </member>
        <member name="M:C1.Schedule.C1BindingSource.ResetBindings(System.Boolean)">
            <summary>
            Causes a control bound to the <see cref="T:C1.Schedule.C1BindingSource"/> to reread 
            all the items in the list and refresh their displayed values. 
            </summary>
            <param name="metadataChanged">The <see cref="T:System.Boolean"/> value specifying
            whether the metadata has been changed.</param>
        </member>
        <member name="M:C1.Schedule.C1BindingSource.ResetItem(System.Int32)">
            <summary>
            Causes a control bound to the <see cref="T:C1.Schedule.C1BindingSource"/> to re-read 
            the item at the specified index, and refresh its displayed value. 
            </summary>
            <param name="itemIndex">The zero-based index of item to re-read.</param>
        </member>
        <member name="T:C1.Schedule.C1ObservableCollection`1">
            <summary>
            The <see cref="T:C1.Schedule.C1ObservableCollection`1"/> is the base class for all 
            <see cref="T:System.Collections.ObjectModel.Collection`1"/> derived collections. Supports notification.
            </summary>
            <typeparam name="T">The type of objects to keep in collection.</typeparam>
        </member>
        <member name="M:C1.Schedule.C1ObservableCollection`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.C1ObservableCollection`1"/> class.
            </summary>
        </member>
        <member name="M:C1.Schedule.C1ObservableCollection`1.#ctor(System.Collections.Generic.IList{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.C1ObservableCollection`1"/> class.
            </summary>
            <param name="list">The <see cref="T:System.Collections.Generic.IList`1"/> list that is wrapped 
            by the new collection.</param>
        </member>
        <member name="M:C1.Schedule.C1ObservableCollection`1.ClearItems">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Schedule.C1ObservableCollection`1.InsertItem(System.Int32,`0)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:C1.Schedule.C1ObservableCollection`1.RemoveItem(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:C1.Schedule.C1ObservableCollection`1.SetItem(System.Int32,`0)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:C1.Schedule.C1ObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:C1.Schedule.C1ObservableKeyedCollection`2">
            <summary>
            The <see cref="T:C1.Schedule.C1ObservableCollection`1"/> is the base class for all 
            <see cref="T:System.Collections.ObjectModel.KeyedCollection`2"/> derived collections. Supports notification.
            </summary>
            <typeparam name="TKey">The type of keys in the collection.</typeparam>
            <typeparam name="TItem">The type of objects to keep in the collection.</typeparam>
        </member>
        <member name="M:C1.Schedule.C1ObservableKeyedCollection`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.C1ObservableKeyedCollection`2"/> class.
            </summary>
        </member>
        <member name="M:C1.Schedule.C1ObservableKeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.C1ObservableKeyedCollection`2"/> class.
            </summary>
            <param name="comparer">The implementation of the <see cref="T:System.Collections.IEqualityComparer"/> generic interface 
            to use when comparing keys, or a null reference (Nothing in Visual Basic) 
            to use the default equality comparer for the type of the key, obtained 
            from EqualityComparer.Default.</param>
        </member>
        <member name="M:C1.Schedule.C1ObservableKeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
            <summary>
            
            </summary>
            <param name="comparer"></param>
            <param name="dictionaryCreationThreshold"></param>
        </member>
        <member name="M:C1.Schedule.C1ObservableKeyedCollection`2.ClearItems">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Schedule.C1ObservableKeyedCollection`2.InsertItem(System.Int32,`1)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:C1.Schedule.C1ObservableKeyedCollection`2.RemoveItem(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:C1.Schedule.C1ObservableKeyedCollection`2.SetItem(System.Int32,`1)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:C1.Schedule.C1ObservableKeyedCollection`2.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:C1.Schedule.C1BrushFactory">
            <summary>
            This factory class allows to register platform-specific type which should be used instead of the <see cref="T:C1.Schedule.C1Brush"/> type.
            </summary>
        </member>
        <member name="P:C1.Schedule.C1BrushFactory.C1BrushType">
            <summary>
            Returns runtime type for C1Brush implementation.
            </summary>
        </member>
        <member name="M:C1.Schedule.C1BrushFactory.Get">
            <summary>
            Returns new instance of the registered C1Brush type.
            </summary>
            <returns>The new instance of the registered C1Brush type</returns>
        </member>
        <member name="M:C1.Schedule.C1BrushFactory.Register``1">
            <summary>
            Registers the type which should be used instead of the <see cref="T:C1.Schedule.C1Brush"/>.
            </summary>
            <typeparam name="Ti">The <see cref="T:System.Type"/> to register.</typeparam>
            <exception cref="T:System.ArgumentException">the specified type is not assignable from the <see cref="T:C1.Schedule.C1Brush"/> type.</exception>
        </member>
        <member name="T:C1.Schedule.AppointmentMappingCollection">
            <summary>
            Represents a generic collection of mappings for properties of 
            <see cref="T:C1.Schedule.BaseObject"/> derived objects to appropriate data fields. 
            </summary>
        </member>
        <member name="M:C1.Schedule.AppointmentMappingCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.AppointmentMappingCollection"/> class.
            </summary>
        </member>
        <member name="M:C1.Schedule.AppointmentMappingCollection.ReadObject(C1.Schedule.Appointment,System.Object,System.Boolean)">
            <summary>
            Fills BaseObject object with values from specified boundObject.
            </summary>
            <param name="internalObject"></param>
            <param name="boundObject"></param>
            <param name="raiseChanged"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Schedule.AppointmentMappingCollection.WriteObject(C1.Schedule.Appointment,System.Object)">
            <summary>
            Fills boundObject with values from specified BaseObject object.
            </summary>
            <param name="internalObject">Appointment object.</param>
            <param name="boundObject">object from custom data source/</param>
        </member>
        <member name="M:C1.Schedule.AppointmentMappingCollection.NewItem">
            <summary>
            Creates new Appointment object.
            </summary>
            <returns>Return created appointment object.</returns>
        </member>
        <member name="P:C1.Schedule.AppointmentMappingCollection.Body">
            <summary>
            Returns <see cref="T:C1.Schedule.MappingInfo"/> object for the <see cref="P:C1.Schedule.Appointment.Body"/> 
            property of the <see cref="T:C1.Schedule.Appointment"/> object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of the <see cref="P:C1.Schedule.AppointmentMappingCollection.Body"/> allow 
            the <see cref="P:C1.Schedule.Appointment.Body"/> property 
            to be bound to the appropriate field in the data source. 
            </summary>
        </member>
        <member name="P:C1.Schedule.AppointmentMappingCollection.End">
            <summary>
            Returns <see cref="T:C1.Schedule.MappingInfo"/> object for the <see cref="P:C1.Schedule.Appointment.End"/> 
            property of the <see cref="T:C1.Schedule.Appointment"/> object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.Schedule.Appointment.End"/> property 
            to be bound to the appropriate field in the data source. 
            </summary>
        </member>
        <member name="P:C1.Schedule.AppointmentMappingCollection.Location">
            <summary>
            Returns <see cref="T:C1.Schedule.MappingInfo"/> object for the <see cref="P:C1.Schedule.Appointment.Location"/>
            property of the <see cref="T:C1.Schedule.Appointment"/> object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.Schedule.Appointment.Location"/> property 
            to be bound to the appropriate field in the data source. 
            </summary>
        </member>
        <member name="P:C1.Schedule.AppointmentMappingCollection.Start">
            <summary>
            Returns <see cref="T:C1.Schedule.MappingInfo"/> object for the <see cref="P:C1.Schedule.Appointment.Start"/>
            property of the <see cref="T:C1.Schedule.Appointment"/> object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.Schedule.Appointment.Start"/> property 
            to be bound to the appropriate field in the data source. 
            </summary>
        </member>
        <member name="P:C1.Schedule.AppointmentMappingCollection.Subject">
            <summary>
            Returns <see cref="T:C1.Schedule.MappingInfo"/> object for the <see cref="P:C1.Schedule.Appointment.Subject"/>
            property of the <see cref="T:C1.Schedule.Appointment"/> object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.Schedule.Appointment.Subject"/> property 
            to be bound to the appropriate field in the data source. 
            </summary>
        </member>
        <member name="P:C1.Schedule.AppointmentMappingCollection.AppointmentProperties">
            <summary>
            Returns <see cref="T:C1.Schedule.MappingInfo"/> object for the memory field 
            which is intended to store the other properties of the <see cref="T:C1.Schedule.Appointment"/> object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the other properties of 
            the <see cref="T:C1.Schedule.Appointment"/> object to be bound to 
            the appropriate field in the data source. 
            </summary>
        </member>
        <member name="P:C1.Schedule.AppointmentMappingCollection.OwnerIdMapping">
            <summary>
            Returns <see cref="T:C1.Schedule.MappingInfo"/> object for the Appointment.Owner.Id property of the <see cref="T:C1.Schedule.Appointment"/> object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.Schedule.Appointment.Owner"/> property 
            to be bound to the appropriate field in the data source. 
            </summary>
        </member>
        <member name="P:C1.Schedule.AppointmentMappingCollection.OwnerIndexMapping">
            <summary>
            Returns <see cref="T:C1.Schedule.MappingInfo"/> object for the Appointment.Owner.Index property of the <see cref="T:C1.Schedule.Appointment"/> object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.Schedule.Appointment.Owner"/> property 
            to be bound to the appropriate field in the data source. 
            </summary>
        </member>
        <member name="P:C1.Schedule.AppointmentMappingCollection.Collection">
            <summary>
            Gets or sets AppointmentCollection using for mapping.
            </summary>
        </member>
        <member name="T:C1.Schedule.BaseObjectMappingCollection`1">
            <summary>
            Represents a generic collection of mappings for properties 
            of the <see cref="T:C1.Schedule.BaseObject"/> derived objects to appropriate data fields. 
            </summary>
            <typeparam name="T">The type of the objects for mapping.
            It should be derived from the <see cref="T:C1.Schedule.BaseObject"/> class 
            and have the default parameter-less constructor.</typeparam>
        </member>
        <member name="M:C1.Schedule.BaseObjectMappingCollection`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.BaseObjectMappingCollection`1"/> class.
            </summary>
        </member>
        <member name="P:C1.Schedule.BaseObjectMappingCollection`1.TextMapping">
            <summary>
            Returns <see cref="T:C1.Schedule.MappingInfo"/> object for the <see cref="P:C1.Schedule.BaseObject.Text"/> 
            property of the object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.Schedule.BaseObject.Text"/> 
            property of the object to be bound to the appropriate field in the data source. 
            </summary>
        </member>
        <member name="P:C1.Schedule.BaseObjectMappingCollection`1.ColorMapping">
            <summary>
            Returns <see cref="T:C1.Schedule.MappingInfo"/> object for the <see cref="P:C1.Schedule.BaseObject.Color"/> 
            property of the object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.Schedule.BaseObject.Color"/> 
            property of the object to be bound to the appropriate field in the data source. 
            </summary>
        </member>
        <member name="P:C1.Schedule.BaseObjectMappingCollection`1.CaptionMapping">
            <summary>
            Returns <see cref="T:C1.Schedule.MappingInfo"/> object for <see cref="P:C1.Schedule.BaseObject.MenuCaption"/> 
            property of the object.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.Schedule.BaseObject.MenuCaption"/> 
            property of the object to be bound to the appropriate field in the data source. 
            </summary>
        </member>
        <member name="M:C1.Schedule.BaseObjectMappingCollection`1.ReadObject(`0,System.Object,System.Boolean)">
            <summary>
            Fills BaseObject object with values from specified boundObject.
            </summary>
            <param name="internalObject"></param>
            <param name="boundObject"></param>
            <param name="raiseChanged"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Schedule.BaseObjectMappingCollection`1.WriteObject(`0,System.Object)">
            <summary>
            Fills boundObject with values from specified BaseObject object.
            </summary>
            <param name="internalObject">T object.</param>
            <param name="boundObject">Object from custom data source.</param>
        </member>
        <member name="T:C1.Schedule.MappingInfo">
            <summary>
            This class provides information on the mapping of the single property 
            of the object to the appropriate data field. 
            </summary>
        </member>
        <member name="M:C1.Schedule.MappingInfo.#ctor(System.Type,System.String,System.Boolean,System.Object)">
            <summary>
            Use this ctor for simple properties that has the same types 
            in the internal object and in the bound object.
            </summary>
            <param name="type"></param>
            <param name="propName"></param>
            <param name="required"></param>
            <param name="defaultValue"></param>
        </member>
        <member name="M:C1.Schedule.MappingInfo.#ctor(System.Type,System.Type,System.String,System.Boolean,System.Object)">
            <summary>
            Use this ctor when property of bound object has to have the type other than 
            type of the internal object's property.
            </summary>
            <param name="type"></param>
            <param name="dataType"></param>
            <param name="propName"></param>
            <param name="required"></param>
            <param name="defaultValue"></param>
        </member>
        <member name="P:C1.Schedule.MappingInfo.DataType">
            <summary>
            Gets the <see cref="T:System.Type"/> value determining the type of the data field 
            or property which can be bound to this object.
            </summary>
        </member>
        <member name="P:C1.Schedule.MappingInfo.MappingName">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value determining the name of the data field 
            or property to be bound to the object.
            </summary>
        </member>
        <member name="P:C1.Schedule.MappingInfo.IsMapped">
            <summary>
            Gets the <see cref="T:System.Boolean"/> value indicating if this objects is mapped 
            to the data field or property.
            </summary>
        </member>
        <member name="P:C1.Schedule.MappingInfo.Required">
            <summary>
            Gets the <see cref="T:System.Boolean"/> value indicating if mapping for this property is required or optional.
            </summary>
        </member>
        <member name="P:C1.Schedule.MappingInfo.PropertyName">
            <summary>
            Gets the <see cref="T:System.String"/> value determining the name of the property 
            which should be mapped.
            </summary>
        </member>
        <member name="M:C1.Schedule.MappingInfo.GetPropertyValue(System.Object)">
            <summary>
            Returns the property of specified object.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Schedule.MappingInfo.SetPropertyValue(System.Object,System.Object)">
            <summary>
            Sets property of specified object to the specified value.
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:C1.Schedule.MappingCollectionBase`1">
            <summary>
            Represents a collection of mappings for properties of the 
            <see cref="T:C1.Schedule.BasePersistableObject"/> object to the appropriate data fields. 
            Names of properties are keys in this collection.
            </summary>
            <typeparam name="T">The type of the objects for mapping.
            It should be derived from the <see cref="T:C1.Schedule.BasePersistableObject"/>class 
            and have the default parameter-less constructor.</typeparam>
        </member>
        <member name="M:C1.Schedule.MappingCollectionBase`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.MappingCollectionBase`1"/> class.
            </summary>
        </member>
        <member name="P:C1.Schedule.MappingCollectionBase`1.IdMapping">
            <summary>
            Returns <see cref="T:C1.Schedule.MappingInfo"/> object for the <see cref="P:C1.Schedule.BasePersistableObject.Id"/> property.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.Schedule.BasePersistableObject.Id"/> property  
            to be bound to the appropriate field in the data source. 
            </summary>
             <remarks> Each object derived from <see cref="T:C1.Schedule.BasePersistableObject"/> is identified 
            by either Id or Index property. 
            To allow data to be correctly restored from your data sources you should specify mapping 
            either for the <see cref="P:C1.Schedule.MappingCollectionBase`1.IdMapping"/> or 
            for the <see cref="P:C1.Schedule.MappingCollectionBase`1.IndexMapping"/>.
            It makes sense in case if you bind to your data storages of Resources, Labels, 
            Contacts or Categories. 
            C1Schedule saves only Ids or Indexes of these objects in AppointmentSorage. 
            If there is no mapping for IdMapping or IndexMapping, C1Schedule won't be able to 
            identify Appointment's properties correctly in storages initialized by your data.
            </remarks>
        </member>
        <member name="P:C1.Schedule.MappingCollectionBase`1.IndexMapping">
            <summary>
            Returns <see cref="T:C1.Schedule.MappingInfo"/> object for the <see cref="P:C1.Schedule.BasePersistableObject.Index"/> property.
            If the storage object is bound to a data source via its DataSource property, 
            the properties of this object allow the <see cref="P:C1.Schedule.BasePersistableObject.Index"/> property 
            to be bound to the appropriate field in the data source. 
            </summary>
             <remarks> Each object derived from <see cref="T:C1.Schedule.BasePersistableObject"/> is identified 
            by either Id or Index property. 
            To allow data to be correctly restored from your data sources you should specify mapping 
            either for the <see cref="P:C1.Schedule.MappingCollectionBase`1.IdMapping"/> or 
            for the <see cref="P:C1.Schedule.MappingCollectionBase`1.IndexMapping"/>.
            It makes sense in case if you bind to your data storages of Resources, Labels, 
            Contacts or Categories. 
            C1Schedule saves only Ids or Indexes of these objects in AppointmentSorage. 
            If there is no mapping for IdMapping or IndexMapping, C1Schedule won't be able to 
            identify Appointment's properties correctly in storages initialized by your data.
            </remarks>
        </member>
        <member name="M:C1.Schedule.MappingCollectionBase`1.GetKeyForItem(C1.Schedule.MappingInfo)">
            <summary>
            Returns property name as the key for collection.
            </summary>
            <param name="item">The <see cref="T:C1.Schedule.MappingInfo"/> object.</param>
            <returns>The property name.</returns>
        </member>
        <member name="M:C1.Schedule.MappingCollectionBase`1.ReadObject(`0,System.Object,System.Boolean)">
            <summary>
            Fills internal object derived from BasePersistableObject 
            with values from specified bound object.
            </summary>
            <param name="internalObject"></param>
            <param name="boundObject"></param>
            <param name="raiseChanged">Specifies if internalObject should raise Changed 
            event during this method call</param>
            <returns>Value indicating if bound object was changed by this method.</returns>
            <remarks>Overriding method of derived class should call the base 
            class's ReadObject method or fill BasePersistableObject
            properties on it's own.</remarks>
        </member>
        <member name="M:C1.Schedule.MappingCollectionBase`1.ReadObject(`0,System.Object,System.Boolean,System.Boolean)">
            <summary>
            Fills internal object derived from BasePersistableObject 
            with values from specified bound object.
            </summary>
            <param name="internalObject"></param>
            <param name="boundObject"></param>
            <param name="raiseChanged">Specifies if internalObject should raise Changed 
            event during this method call</param>
            <param name="dirty">Specifies whether an object has been changed</param>
            <returns>Value indicating if bound object was changed by this method.</returns>
            <remarks>Overriding method of derived class should call the base 
            class's ReadObject method or fill BasePersistableObject
            properties on it's own.</remarks>
        </member>
        <member name="M:C1.Schedule.MappingCollectionBase`1.WriteObject(`0,System.Object)">
            <summary>
            When implemented in a derived class fills boundObject 
            with values from specified internalObject.
            </summary>
            <param name="internalObject">object from C1Schedule collection.</param>
            <param name="boundObject">object from custom data source.</param>
            <remarks>Overriding method of derived class should call 
            the base class's WriteObject method or fill boundObject
            properties on it's own.</remarks>
        </member>
        <member name="M:C1.Schedule.MappingCollectionBase`1.NewItem">
            <summary>
            Implementation in derived classes should return new object of type T.
            </summary>
            <returns>New object of type T.</returns>
        </member>
        <member name="P:C1.Schedule.MappingCollectionBase`1.Count">
            <summary>
            Gets the number of elements actually contained in 
            the <see cref="T:C1.Schedule.MappingCollectionBase`1"/> object.
            </summary>
        </member>
        <member name="P:C1.Schedule.MappingCollectionBase`1.Comparer">
            <summary>
            Gets the generic equality comparer that is used to determine equality 
            of keys in the collection.
            </summary>
        </member>
        <member name="M:C1.Schedule.MappingCollectionBase`1.InsertItem(System.Int32,C1.Schedule.MappingInfo)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="E:C1.Schedule.MappingCollectionBase`1.Disposed">
            <summary>
            Represents the method that handles the Disposed event of a component. 
            </summary>
        </member>
        <member name="P:C1.Schedule.MappingCollectionBase`1.Site">
            <summary>
            Gets or sets the ISite associated with the IComponent. 
            </summary>
        </member>
        <member name="M:C1.Schedule.MappingCollectionBase`1.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, 
            or resetting unmanaged resources. 
            </summary>
        </member>
        <member name="T:C1.Schedule.AppointmentStorage">
            <summary>
            The <see cref="T:C1.Schedule.AppointmentStorage"/> is the storage 
            for <see cref="T:C1.Schedule.Appointment"/> objects. It allows binding to the data source 
            and mapping data source fields to the appointment properties.
            </summary>
        </member>
        <member name="P:C1.Schedule.AppointmentStorage.Appointments">
            <summary>
            Gets an <see cref="T:C1.Schedule.AppointmentCollection"/> object that contains appointment related information. 
            </summary>
        </member>
        <member name="M:C1.Schedule.AppointmentStorage.CommitItemChanges(C1.Schedule.Appointment)">
            <summary>
            Commits all changes in the data item.
            </summary>
            <param name="item">Data item to apply changes.</param>
        </member>
        <member name="T:C1.Schedule.BaseStorage`2">
            <summary>
            The <see cref="T:C1.Schedule.BaseStorage`2"/> is the base generic component 
            for all storages in C1Schedule object model.
            Represents a storage of objects derived from <see cref="T:C1.Schedule.BasePersistableObject"/>.
            This component implements methods of operations over the collections of objects. 
            It allows the collection to be populated programmatically 
            or automatically by retrieving data from the data source which 
            is specified by the DataSource and DataMember properties. 
            It allows mapping of data source fields to the object properties.
            </summary>
            <typeparam name="T">The type of the objects which will be stored in the storage.
            It should be derived from the <see cref="T:C1.Schedule.BasePersistableObject"/> class
            and have the default parameter-less constructor.</typeparam>
            <typeparam name="TMappingCollection">The type of the collection which
            will be used for mapping. It should be derived from 
            the <see cref="T:C1.Schedule.MappingCollectionBase`1"/> class
            and have the default parameter-less constructor.</typeparam>
        </member>
        <member name="M:C1.Schedule.BaseStorage`2.#ctor(C1.Schedule.StorageComponent)">
            <summary>
            Initializes the new instance of the <see cref="T:C1.Schedule.BaseStorage`2"/> component.
            </summary>
            <param name="scheduleStorage">The owning <see cref="T:C1.Schedule.StorageComponent"/> component.</param>
        </member>
        <member name="M:C1.Schedule.BaseStorage`2.RefreshData">
            <summary>
            Call this method each time after changing your data source 
            if it doesn't implement IBindingList interface.
            Or use BaseStorage{T, TMappingCollection}.Add 
            and BaseStorage{T, TMappingCollection}.Remove 
            instead of corresponding methods of your data source class.
            </summary>
        </member>
        <member name="P:C1.Schedule.BaseStorage`2.BoundMode">
            <summary>
            Gets a value indicating if the collection is bound to data. 
            </summary>
        </member>
        <member name="P:C1.Schedule.BaseStorage`2.Mappings">
            <summary>
            Gets or sets the <see cref="T:C1.Schedule.MappingCollectionBase`1"/> derived object 
            that allows the properties of objects maintained by the current collection 
            to be bound to the appropriate fields in the data source. 
            </summary>
        </member>
        <member name="M:C1.Schedule.BaseStorage`2.ShouldSerializeMappings">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Schedule.BaseStorage`2.ScheduleStorage">
            <summary>
            Gets the reference to the owning <see cref="T:C1.Schedule.C1ScheduleStorage"/> component.
            </summary>
        </member>
        <member name="P:C1.Schedule.BaseStorage`2.Objects">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:C1.Schedule.BaseStorage`2.System#ComponentModel#ISite#Component">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Schedule.BaseStorage`2.System#ComponentModel#ISite#Container">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Schedule.BaseStorage`2.System#ComponentModel#ISite#DesignMode">
            <summary>
            
            </summary>
        </member>
        <member name="P:C1.Schedule.BaseStorage`2.System#ComponentModel#ISite#Name">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Schedule.BaseStorage`2.System#IServiceProvider#GetService(System.Type)">
            <summary>
            
            </summary>
            <param name="serviceType"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Schedule.BaseStorage`2.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Translates changes in the internal list to the Objects collection.
            </summary>
            <param name="e">A System.ComponentModel.ListChangedEventArgs object that contains the event data.</param>
        </member>
        <member name="M:C1.Schedule.BaseStorage`2.Remove(System.Object)">
            <summary>
            Removes object from the Objects collection.
            </summary>
            <param name="value">The <see cref="T:System.Object"/> to remove.</param>
        </member>
        <member name="P:C1.Schedule.BaseStorage`2.DataKeyNamesInternal">
            <summary>
            This property is for internal use only.
            </summary>
        </member>
        <member name="E:C1.Schedule.BaseStorage`2.DataSourceItemSynchronized">
            <summary>
            Occurs when changes made to the source collection has been fully reflected in the storage underlying data source.
            </summary>
        </member>
        <member name="M:C1.Schedule.BaseStorage`2.OnDataSourceItemSynchronized(C1.Schedule.ItemSynchronizedEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Schedule.BaseStorage`2.DataSourceItemSynchronized"/> event.
            </summary>
            <param name="e">The <see cref="T:C1.Schedule.ItemSynchronizedEventArgs"/> 
            that contains the event data.</param>
        </member>
        <member name="M:C1.Schedule.BaseStorage`2.SetCollectionItemBaseItem(C1.Schedule.BasePersistableObject,System.Object,C1.Schedule.ItemsMapTableRow)">
            <summary>
            Updates ItemsMap and BasePersistableObject.BaseSourceItemMap.
            <paramref name="mapRow"/> should be specified if it's known (for 
            performance purposes), if it's null then the one will be determined
            by <paramref name="sourceItem"/>
            </summary>
            <param name="collectionItem"></param>
            <param name="sourceItem"></param>
            <param name="mapRow"></param>
        </member>
        <member name="M:C1.Schedule.BaseStorage`2.IsSynchronizable(C1.Schedule.BasePersistableObject)">
            <summary>
            Indicates whether the specified collection item should be synchronized.
            </summary>
            <param name="collectionItem">The <see cref="T:C1.Schedule.BasePersistableObject"/> object.</param>
            <returns>True if item should be synchronized; false, otherwise.</returns>
        </member>
        <member name="M:C1.Schedule.BaseStorage`2.CommitItemChanges(`0)">
            <summary>
            Commits all changes in the data item.
            </summary>
            <param name="item">Data item to apply changes.</param>
        </member>
        <member name="T:C1.Schedule.SynchronizationActionEnum">
            <summary>
            Describes the version of data in a data storage. 
            </summary>
        </member>
        <member name="F:C1.Schedule.SynchronizationActionEnum.Added">
            <summary>
            A new item.
            </summary>
        </member>
        <member name="F:C1.Schedule.SynchronizationActionEnum.Deleted">
            <summary>
            A deleted item.
            </summary>
        </member>
        <member name="F:C1.Schedule.SynchronizationActionEnum.Changed">
            <summary>
            A changed item.
            </summary>
        </member>
        <member name="T:C1.Schedule.ItemSynchronizedEventArgs">
            <summary>
            Provides data for the DataSourceItemSynchronized event.
            </summary>
        </member>
        <member name="M:C1.Schedule.ItemSynchronizedEventArgs.#ctor(C1.Schedule.C1BindingSource,C1.Schedule.BasePersistableObject,System.Object,C1.Schedule.SynchronizationActionEnum)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.ItemSynchronizedEventArgs"/> class.
            </summary>
            <param name="storage">Reference to the changed <see cref="T:C1.Schedule.C1BindingSource"/> object.</param>
            <param name="collectionItem">Reference to the <see cref="T:C1.Schedule.BasePersistableObject"/> derived object.</param>
            <param name="dataSourceItem">Reference to the corresponding item in the data source.</param>
            <param name="action">The <see cref="T:C1.Schedule.SynchronizationActionEnum"/> value.</param>
        </member>
        <member name="P:C1.Schedule.ItemSynchronizedEventArgs.Storage">
            <summary>
            Gets the reference to the changed <see cref="T:C1.Schedule.C1BindingSource"/> object.
            </summary>
        </member>
        <member name="P:C1.Schedule.ItemSynchronizedEventArgs.DataSourceItem">
            <summary>
            Gets the reference to the data source item.
            </summary>
        </member>
        <member name="P:C1.Schedule.ItemSynchronizedEventArgs.CollectionItem">
            <summary>
            Gets the reference to the <see cref="T:C1.Schedule.BasePersistableObject"/> derived object.
            </summary>
        </member>
        <member name="P:C1.Schedule.ItemSynchronizedEventArgs.Action">
            <summary>
            Gets the <see cref="T:C1.Schedule.SynchronizationActionEnum"/> value.
            </summary>
        </member>
        <member name="T:C1.Schedule.DataSourceItemSynchronizedEventHandler">
            <summary>
            The delegate type for the event handlers of the DataSourceItemSynchronized event. 
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:C1.Schedule.ItemSynchronizedEventArgs"/> 
            that contains the event data.</param>
        </member>
        <member name="T:C1.Schedule.C1ScheduleStorage">
            <summary>
            The <see cref="T:C1.Schedule.C1ScheduleStorage"/> component handles all data 
            operations for the scheduler control and contains specific data storages 
            for appointments, resources, contacts, owners, labels and statuses, 
            which are used for binding different collections to the data.
            The <see cref="T:C1.Schedule.C1ScheduleStorage"/> component also handles data 
            importing and exporting to other scheduling formats such as binary, iCal, and XML.
            </summary>
        </member>
        <member name="E:C1.Schedule.C1ScheduleStorage.AppointmentsLoaded">
            <summary>
            Occurs when appointments were loaded from the file.
            </summary>
        </member>
        <member name="M:C1.Schedule.C1ScheduleStorage.#ctor">
            <summary>
            Creates the new instance of the <see cref="T:C1.Schedule.C1ScheduleStorage"/> component.
            </summary>
        </member>
        <member name="P:C1.Schedule.C1ScheduleStorage.ContactStorage">
            <summary>
            Gets the <see cref="P:C1.Schedule.C1ScheduleStorage.ContactStorage"/> object. 
            </summary>
        </member>
        <member name="P:C1.Schedule.C1ScheduleStorage.OwnerStorage">
            <summary>
            Gets the <see cref="P:C1.Schedule.C1ScheduleStorage.ContactStorage"/> object used to keep contacts which might be used as appointment owners. 
            </summary>
            <remarks><see cref="P:C1.Schedule.Appointment.Owner"/> property only accepts <see cref="T:C1.Schedule.Contact"/> objects which are present in this storage.</remarks>
        </member>
        <member name="P:C1.Schedule.C1ScheduleStorage.AppointmentStorage">
            <summary>
            Gets the <see cref="P:C1.Schedule.C1ScheduleStorage.AppointmentStorage"/> object. 
            </summary>
        </member>
        <member name="P:C1.Schedule.C1ScheduleStorage.LabelStorage">
            <summary>
            Gets the <see cref="P:C1.Schedule.C1ScheduleStorage.LabelStorage"/> object. 
            </summary>
        </member>
        <member name="P:C1.Schedule.C1ScheduleStorage.ResourceStorage">
            <summary>
            Gets the <see cref="P:C1.Schedule.C1ScheduleStorage.ResourceStorage"/> object. 
            </summary>
        </member>
        <member name="P:C1.Schedule.C1ScheduleStorage.StatusStorage">
            <summary>
            Gets the <see cref="P:C1.Schedule.C1ScheduleStorage.StatusStorage"/> object. 
            </summary>
        </member>
        <member name="P:C1.Schedule.C1ScheduleStorage.CategoryStorage">
            <summary>
            Gets the <see cref="P:C1.Schedule.C1ScheduleStorage.CategoryStorage"/> object. 
            </summary>
        </member>
        <member name="P:C1.Schedule.C1ScheduleStorage.Reminders">
            <summary>
            Gets the <see cref="T:C1.Schedule.ReminderCollection"/> object. 
            </summary>
        </member>
        <member name="P:C1.Schedule.C1ScheduleStorage.Actions">
            <summary>
            Gets the <see cref="T:C1.Schedule.ActionCollection"/> object. 
            </summary>
        </member>
        <member name="P:C1.Schedule.C1ScheduleStorage.Info">
            <summary>
            Gets the reference to the <see cref="T:C1.Schedule.CalendarInfo"/> object.
            </summary>
        </member>
        <member name="P:C1.Schedule.C1ScheduleStorage.Days">
            <summary>
            Gets the <see cref="T:C1.Schedule.DayCollection"/> which keeps all the days used for scheduling.
            </summary>
        </member>
        <member name="M:C1.Schedule.C1ScheduleStorage.Clear">
            <summary>
            Clears all unbound storages. Loads default sets if any for unbound storages. 
            </summary>
        </member>
        <member name="M:C1.Schedule.C1ScheduleStorage.Export(System.String,C1.Schedule.FileFormatEnum)">
            <summary>
            Exports the scheduler's data to a file in the specified format. 
            </summary>
            <param name="path">A <see cref="T:System.String"/> containing the full path 
            (including the file name and extension) to export the scheduler's data to. </param>
            <param name="format">The <see cref="T:C1.Schedule.FileFormatEnum"/> value.</param>
        </member>
        <member name="M:C1.Schedule.C1ScheduleStorage.Export(System.IO.Stream,C1.Schedule.FileFormatEnum)">
            <summary>
            Exports the scheduler's data to a stream in the specified format. 
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream into which the scheduler's data will be exported.</param>
            <param name="format">The <see cref="T:C1.Schedule.FileFormatEnum"/> value.</param>
        </member>
        <member name="M:C1.Schedule.C1ScheduleStorage.Export(System.String,System.Collections.Generic.IList{C1.Schedule.Appointment},C1.Schedule.FileFormatEnum)">
            <summary>
            Exports the appointments' data to a file in the specified format. 
            </summary>
            <param name="path">A <see cref="T:System.String"/> containing the full path 
            (including the file name and extension) to export. </param>
            <param name="appointments"><see cref="T:System.Collections.Generic.IList`1"/> to be exported.</param>
            <param name="format">The <see cref="T:C1.Schedule.FileFormatEnum"/> value.</param>
        </member>
        <member name="M:C1.Schedule.C1ScheduleStorage.Export(System.IO.Stream,System.Collections.Generic.IList{C1.Schedule.Appointment},C1.Schedule.FileFormatEnum)">
            <summary>
            Exports the appointments' data to a stream in the specified format. 
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream into which the appointments's data will be exported.</param>
            <param name="appointments"><see cref="T:System.Collections.Generic.IList`1"/> to be exported.</param>
            <param name="format">The <see cref="T:C1.Schedule.FileFormatEnum"/> value.</param>
        </member>
        <member name="M:C1.Schedule.C1ScheduleStorage.Import(System.String,C1.Schedule.FileFormatEnum)">
            <summary>
            Imports data into the scheduler from a file of the specified format.
            </summary>
            <param name="path">A <see cref="T:System.String"/> value containing the full path 
            (including the file name and extension) to a file which contains 
            the data to be imported into the scheduler.</param>
            <param name="format">The <see cref="T:C1.Schedule.FileFormatEnum"/> value.</param>
        </member>
        <member name="M:C1.Schedule.C1ScheduleStorage.Import(System.IO.Stream,C1.Schedule.FileFormatEnum)">
            <summary>
            Imports the scheduler's data from a stream whose data is in the specified format.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream that contains the data to import to the scheduler. </param>
            <param name="format">The <see cref="T:C1.Schedule.FileFormatEnum"/> value.</param>
        </member>
        <member name="F:C1.Schedule.C1ScheduleStorage.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Schedule.C1ScheduleStorage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Schedule.C1ScheduleStorage.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:C1.Schedule.CategoryStorage">
            <summary>
            The <see cref="T:C1.Schedule.CategoryStorage"/> is the storage for <see cref="T:C1.Schedule.Category"/> objects.
            It allows binding to the data source and mapping data source fields 
            to the category properties.
            </summary>
        </member>
        <member name="P:C1.Schedule.CategoryStorage.Categories">
            <summary>
            Gets the <see cref="T:C1.Schedule.CategoryCollection"/> object that contains 
            category related information. 
            </summary>
        </member>
        <member name="T:C1.Schedule.ContactStorage">
            <summary>
            The <see cref="T:C1.Schedule.ContactStorage"/> is the storage for <see cref="T:C1.Schedule.Contact"/> objects.
            It allows binding to the data source and mapping data source fields 
            to the contact properties.
            </summary>
        </member>
        <member name="P:C1.Schedule.ContactStorage.Contacts">
            <summary>
            Gets the <see cref="T:C1.Schedule.ContactCollection"/> object that contains 
            contact related information. 
            </summary>
        </member>
        <member name="T:C1.Schedule.LabelStorage">
            <summary>
            The <see cref="T:C1.Schedule.LabelStorage"/> is the storage for <see cref="T:C1.Schedule.Label"/> objects.
            It allows binding to the data source and mapping data source fields 
            to the label properties.
            </summary>
        </member>
        <member name="P:C1.Schedule.LabelStorage.Labels">
            <summary>
            Gets the <see cref="T:C1.Schedule.LabelCollection"/> object 
            that contains label related information. 
            </summary>
        </member>
        <member name="T:C1.Schedule.ResourceStorage">
            <summary>
            The <see cref="T:C1.Schedule.ResourceStorage"/> is the storage for <see cref="T:C1.Schedule.Resource"/> objects.
            It allows binding to the data source and mapping data source fields 
            to the resource properties.
            </summary>
        </member>
        <member name="P:C1.Schedule.ResourceStorage.Resources">
            <summary>
            Gets the <see cref="T:C1.Schedule.ResourceCollection"/> object 
            that contains resource related information. 
            </summary>
        </member>
        <member name="T:C1.Schedule.StatusStorage">
            <summary>
            The <see cref="T:C1.Schedule.StatusStorage"/> is the storage for <see cref="T:C1.Schedule.Status"/> objects.
            It allows binding to the data source and mapping data sources fields 
            to the status properties.
            </summary>
        </member>
        <member name="P:C1.Schedule.StatusStorage.Statuses">
            <summary>
            Gets the <see cref="T:C1.Schedule.StatusCollection"/> object 
            that contains status related information. 
            </summary>
        </member>
        <member name="T:C1.Schedule.StorageComponent">
            <summary>
            The <see cref="T:C1.Schedule.StorageComponent"/> is the base component for data storage.
            </summary>
        </member>
        <member name="M:C1.Schedule.StorageComponent.#ctor">
            <summary>
            Initializes the new instance of the <see cref="T:C1.Schedule.StorageComponent"/> component.
            </summary>
        </member>
        <member name="M:C1.Schedule.StorageComponent.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes the new instance of the <see cref="T:C1.Schedule.StorageComponent"/> component.
            </summary>
            <param name="container">The parent container.</param>
        </member>
        <member name="P:C1.Schedule.StorageComponent.DesignMode">
            <summary>
            Gets the <see cref="T:System.Boolean"/> value specifying whether the component is in design mode.
            </summary>
        </member>
        <member name="F:C1.Schedule.StorageComponent.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:C1.Schedule.StorageComponent.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:C1.Schedule.StorageComponent.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:C1.Schedule.SourceToCollectionItemsMap">
            <summary>
            Represents a mapping between data source and collection items and holds a cache
            of source items in order as they are represented in a source list. The latter
            necessary to get an instance of a deleted item.
            </summary>
        </member>
        <member name="F:C1.Schedule.SourceToCollectionItemsMap._mapTable">
            key - source item, value - SourceCollectionItemPair, 
            item[int].SourceItem - the same as source.item[int]
        </member>
        <member name="M:C1.Schedule.SourceToCollectionItemsMap.SetSourceItems(System.Collections.IList)">
            <summary>
            Initialize a source items cache.
            </summary>
            <param name="sourceList"></param>
        </member>
        <member name="M:C1.Schedule.SourceToCollectionItemsMap.UpdateByListChange(System.ComponentModel.ListChangedEventArgs,System.Collections.IList,System.Boolean@)">
            <summary>
            Updates the source items cache based on the specified list change action in
            the specified source list.
            Returns a map row affected by this change.
            </summary>
            <param name="e"></param>
            <param name="sourceList"></param>
            <param name="duplicateAdd"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Schedule.SourceToCollectionItemsMap.IsValidIndex(System.Int32)">
            <summary>
            Indicates whether the specified index is valid.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:C1.Schedule.SyncBatchInfo.ResetState">
            <summary>
            Finished means not Reset state.
            </summary>
        </member>
        <member name="T:C1.Schedule.BinaryExchanger">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Schedule.BinaryExchanger.ExportInternal(System.IO.Stream)">
            <summary>
            Exports the appointments's data to a stream in the XML format. 
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream into which the appointments's data will be exported.</param>
        </member>
        <member name="M:C1.Schedule.BinaryExchanger.ImportInternal(System.IO.Stream)">
            <summary>
            Imports the scheduler's data from a stream whose data is in the XML format.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream that contains the data to import to the scheduler. </param>
        </member>
        <member name="T:C1.Schedule.FileFormatEnum">
            <summary>
            Specifies the format of the exported or imported file.
            </summary>
        </member>
        <member name="F:C1.Schedule.FileFormatEnum.XML">
            <summary>
            XML format (ComponentOne's own format).
            </summary>
        </member>
        <member name="F:C1.Schedule.FileFormatEnum.iCal">
            <summary>
            iCal format according to RFC 2445.
            Format specification could be found here:
            http://tools.ietf.org/rfc/rfc2445.txt
            </summary>
        </member>
        <member name="F:C1.Schedule.FileFormatEnum.Binary">
            <summary>
            Binary format.
            </summary>
        </member>
        <member name="T:C1.Schedule.C1ScheduleExchanger">
            <summary>
            The base class for all importers/exporters in C1Schedule
            </summary>
        </member>
        <member name="M:C1.Schedule.C1ScheduleExchanger.Export(System.String)">
            <summary>
            Exports the scheduler's data to a file. 
            </summary>
            <param name="path">A <see cref="T:System.String"/> containing the full path 
            (including the file name and extension) to export the scheduler's data to. </param>
        </member>
        <member name="M:C1.Schedule.C1ScheduleExchanger.Export(System.IO.Stream)">
            <summary>
            Exports the scheduler's data to a stream. 
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream into which the scheduler's data will be exported.</param>
        </member>
        <member name="M:C1.Schedule.C1ScheduleExchanger.Export(System.String,System.Collections.Generic.IList{C1.Schedule.Appointment})">
            <summary>
            Exports the appointments's data to a file. 
            </summary>
            <param name="path">A <see cref="T:System.String"/> containing the full path 
            (including the file name and extension) to export. </param>
            <param name="appointments">A <see cref="T:System.Collections.Generic.IList`1"/> object.</param>
        </member>
        <member name="M:C1.Schedule.C1ScheduleExchanger.Export(System.IO.Stream,System.Collections.Generic.IList{C1.Schedule.Appointment})">
            <summary>
            Exports the appointments's data to a stream. 
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream into which the appointments's data will be exported.</param>
            <param name="appointments">A <see cref="T:System.Collections.Generic.IList`1"/> object.</param>
        </member>
        <member name="M:C1.Schedule.C1ScheduleExchanger.Import(System.String)">
            <summary>
            Imports data into the scheduler from a file.
            </summary>
            <param name="path">A <see cref="T:System.String"/> value containing the full path 
            (including the file name and extension) to a file which contains 
            the data to be imported into the scheduler.</param>
        </member>
        <member name="M:C1.Schedule.C1ScheduleExchanger.Import(System.IO.Stream)">
            <summary>
            Imports the scheduler's data from a stream.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream that contains the data to import to the scheduler. </param>
        </member>
        <member name="T:C1.Schedule.ICalExchanger">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Schedule.ICalExchanger.ExportInternal(System.IO.Stream)">
            <summary>
            Exports the appointments's data to a stream in the iCal format. 
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream into which the appointments's data will be exported.</param>
        </member>
        <member name="M:C1.Schedule.ICalExchanger.ImportInternal(System.IO.Stream)">
            <summary>
            Imports the scheduler's data from a stream whose data is in the ICal format.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream that contains the data to import to the scheduler. </param>
        </member>
        <member name="T:C1.Schedule.ICalPattern">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.Schedule.ICalTimeZoneInfo">
            <summary>
            The <see cref="T:C1.Schedule.ICalTimeZoneInfo"/> class determines time zone properties.
            </summary>
        </member>
        <member name="P:C1.Schedule.ICalTimeZoneInfo.LastModified">
            <summary>
            A UTC value that specifies the date and time that this 
            time zone definition was last updated.
            It's unknown (has value DateTime.MinValue) for time zones,
            registered in the local system.
            But it makes sense for time zones, imported from iCal format.
            </summary>
        </member>
        <member name="T:C1.Schedule.ICalUtils">
            <summary>
            
            </summary>
        </member>
        <member name="T:C1.Schedule.XmlExchanger">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Schedule.XmlExchanger.ExportInternal(System.IO.Stream)">
            <summary>
            Exports the appointments's data to a stream in the XML format. 
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream into which the appointments's data will be exported.</param>
        </member>
        <member name="M:C1.Schedule.XmlExchanger.ImportInternal(System.IO.Stream)">
            <summary>
            Imports the scheduler's data from a stream whose data is in the XML format.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> object which specifies 
            the stream that contains the data to import to the scheduler. </param>
        </member>
        <member name="T:C1.Schedule.Localization.C1Localizer">
            <summary>
            The <see cref="T:C1.Schedule.Localization.C1Localizer"/> class represents the set of 
            static methods and properties used for localization. 
            </summary>
        </member>
        <member name="P:C1.Schedule.Localization.C1Localizer.DefaultCulture">
            <summary>
            Gets the default <see cref="T:System.Globalization.CultureInfo"/>.
            </summary>
        </member>
        <member name="P:C1.Schedule.Localization.C1Localizer.DefaultAssembly">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value determining the name of the assembly, 
            containing resources. By default returns the name of the entry assembly.
            </summary>
            <remarks>If your resources are defined in the entry assembly or in its satellite assemblies, 
            you don't need to change this property value. Use this property if your resources are defined, 
            for example, in the custom control's assembly.
            </remarks>
        </member>
        <member name="M:C1.Schedule.Localization.C1Localizer.GetString(System.String,System.String,System.String,System.String)">
            <summary>
            Returns the localized string for the specified culture.
            </summary>
            <remarks>Search order:
            - searching in the specified resource Assembly;
            - searching in satellite Assemblies of the specified resource Assembly;
            - searching in the executing assembly;
            - repeating the search in above assemblies for the parent culture;
            - if result is not found, returning the specified default value.
            </remarks>
            <param name="resourceAssembly">The name of resource assembly.</param>
            <param name="resourceDictionary">The name of resource dictionary.</param>
            <param name="resourceKey">The resource key.</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Schedule.Localization.C1Localizer.GetString(System.String,System.String,System.String,System.String,System.Globalization.CultureInfo)">
            <summary>
            Returns the localized string for the specified culture.
            </summary>
            <remarks>Search order:
            - searching in the specified resource Assembly;
            - searching in satellite Assemblies of the specified resource Assembly;
            - searching in the executing assembly;
            - repeating the search in above assemblies for the parent culture;
            - if result is not found, returning the specified default value.
            </remarks>
            <param name="resourceAssembly">The name of resource assembly.</param>
            <param name="resourceDictionary">The name of resource dictionary.</param>
            <param name="resourceKey">The resource key.</param>
            <param name="defaultValue">The default value.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> info.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Schedule.Localization.C1Localizer.GetString(System.String,System.String,System.String)">
            <summary>
            Returns the localized string for the specified culture.
            </summary>
            <remarks>Search order:
            - searching in the executing Assembly;
            - repeating the search for the parent culture;
            - if result is not found, returning the specified default value.
            </remarks>
            <param name="resourceDictionary">The name of resource dictionary.</param>
            <param name="resourceKey">The resource key.</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Schedule.Localization.C1Localizer.GetString(System.String,System.String,System.String,System.Globalization.CultureInfo)">
            <summary>
            Returns the localized string for the specified culture.
            </summary>
            <remarks>Search order:
            - searching in the executing Assembly;
            - repeating the search for the parent culture;
            - if result is not found, returning the specified default value.
            </remarks>
            <param name="resourceDictionary">The name of resource dictionary.</param>
            <param name="resourceKey">The resource key.</param>
            <param name="defaultValue">The default value.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> object.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Schedule.Localization.C1Localizer.GetAssemblyName(System.Reflection.Assembly)">
            <summary>
            Returns the first part of assembly name (i.e. the name without version etc.).
            </summary>
            <param name="assembly"></param>
            Returns the first part of assembly name (i.e. the name without version etc.).
            <returns></returns>
        </member>
        <member name="M:C1.Schedule.Localization.C1Localizer.GetParent(System.Globalization.CultureInfo)">
            <summary>
            Returns the parent of the CultureInfo passed in. Differs from ci.Parent
            in that while ci can be equal to ci.Parent, this method it never returns
            the passed ci itself, rather it would return null.
            </summary>
            <param name="ci">The culture info to get parent for.</param>
            <returns>The parent of the culture info, or null.</returns>
        </member>
        <member name="T:C1.Schedule.Localization.C1DescriptionAttribute">
            <summary>
            C1DescriptionAttribute replaces the DescriptionAttribute
            and uses the StringsManager and Strings classes to
            return the localized Attribute string.
            </summary>
        </member>
        <member name="M:C1.Schedule.Localization.C1DescriptionAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.Localization.C1DescriptionAttribute"/> attribute.
            </summary>
            <param name="key">The key value used to keep specific string description.</param>
            <param name="description">Default non-localized description text.</param>
        </member>
        <member name="M:C1.Schedule.Localization.C1DescriptionAttribute.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.Localization.C1DescriptionAttribute"/> attribute.
            </summary>
            <param name="key">The key value used to keep specific string description.</param>
            <param name="formatDescription">Default non-localized description text.</param>
            <param name="ag0">Argument for formatDescription parameter.</param>
        </member>
        <member name="P:C1.Schedule.Localization.C1DescriptionAttribute.Description">
            <summary>
            Returns localized description text if it is available or default value 
            </summary>
        </member>
        <member name="T:C1.Schedule.Localization.C1CategoryAttribute">
            <summary>
            C1CategoryAttribute replaces the CategoryAttribute
            and uses the StringsManager and Strings classes to
            return the localized Attribute string.
            </summary>
        </member>
        <member name="M:C1.Schedule.Localization.C1CategoryAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.Localization.C1CategoryAttribute"/> attribute.
            </summary>
            <param name="categoryName">Default non-localized category name.</param>
        </member>
        <member name="M:C1.Schedule.Localization.C1CategoryAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.Localization.C1CategoryAttribute"/> attribute.
            </summary>
            <param name="key">The key value used to keep specific category.</param>
            <param name="categoryName">Default non-localized category name.</param>
        </member>
        <member name="M:C1.Schedule.Localization.C1CategoryAttribute.GetLocalizedString(System.String)">
            <summary>
            Looks up the localized name of the specified category.
            </summary>
            <param name="value">The identifer for the category to look up.</param>
            <returns>The localized name of the category, or null if a localized name does not exist.</returns>
        </member>
        <member name="T:C1.Schedule.Localization.StringsManager">
            <summary>
            The utility class which handles localization tasks for design-time strings.
            </summary>
        </member>
        <member name="M:C1.Schedule.Localization.StringsManager.GetC1BuiltinResourceStream(System.String,System.Reflection.Assembly,System.String)">
            <summary>
            Returns ResourceStream for "official" resources
            that provided only by C1, typicallly those resources contains
            design-time strings.
            Those resources can be only in main control assembly like C1.C1Preview.2.dll 
            and name of resource should have following format:
            CulturePrefix.StringsTypeName
            for example:
            ja.C1.C1Preview.Design.DesignStrings.resx
            </summary>
            <param name="resourceName"></param>
            <param name="assembly"></param>
            <param name="cultureName"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Schedule.Localization.StringsManager.GetParentCulture(System.String)">
            <summary>
            Returns the parent of the CultureInfo passed in. Differs from ci.Parent
            in that while ci can be equal to ci.Parent, this method it never returns
            the passed ci itself, rather it would return null.
            Also this function has special handling for chinese culture.
            Under NET2 it returns "zh" culture name for
            neutral "zh-Hans" and "zh-Hant" chinese cultures, under
            NET2 "zh" is not exists.
            </summary>
            <param name="cultureName">The culture name to get parent for.</param>
            <returns>The parent of the culture info, or null.</returns>
        </member>
        <member name="T:C1.Schedule.ActionTypeEnum">
            <summary>
            <see cref="T:C1.Schedule.ActionTypeEnum"/> determines the type of action. 
            </summary>
        </member>
        <member name="F:C1.Schedule.ActionTypeEnum.ExecuteApplication">
            <summary>
            Execute local application with specified parameters.
            </summary>
        </member>
        <member name="F:C1.Schedule.ActionTypeEnum.NavigateToUrl">
            <summary>
            Open specified target in default browser.
            </summary>
        </member>
        <member name="T:C1.Schedule.Action">
            <summary>
            Represents an action to take when the current system time reaches 
            the start of the associated <see cref="T:C1.Schedule.Appointment"/> object.
            </summary>
        </member>
        <member name="M:C1.Schedule.Action.#ctor(C1.Schedule.Appointment)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.Action"/> class.
            </summary>
            <param name="owner">The <see cref="T:C1.Schedule.Appointment"/> object.</param>
        </member>
        <member name="M:C1.Schedule.Action.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.Action"/> class.
            </summary>
        </member>
        <member name="P:C1.Schedule.Action.ParentAppointment">
            <summary>
            Gets or sets the owning <see cref="T:C1.Schedule.Appointment"/> object. 
            </summary>
        </member>
        <member name="P:C1.Schedule.Action.Command">
            <summary>
            Gets or sets the command string for the action.
            </summary>
        </member>
        <member name="P:C1.Schedule.Action.Parameters">
            <summary>
            Gets or sets parameters used when the action is invoked.
            </summary>
        </member>
        <member name="P:C1.Schedule.Action.Enabled">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value indicating 
            whether the action is enabled. Default value is True.
            </summary>
        </member>
        <member name="P:C1.Schedule.Action.Type">
            <summary>
            Gets or sets the <see cref="T:C1.Schedule.ActionTypeEnum"/> value determining 
            the type of action that will occur. Default value is ActionTypeEnum.ExecuteApplication.
            </summary>
        </member>
        <member name="M:C1.Schedule.Action.FromXml(System.Xml.XmlReader)">
            <summary>
            Reconstructs action properties from an <see cref="T:System.Xml.XmlReader"/>. 
            </summary>
            <param name="reader"></param>
            <returns>True if an action has been changed.</returns>
        </member>
        <member name="M:C1.Schedule.Action.ToXml(System.Xml.XmlWriter)">
            <summary>
            Creates an XML encoding of the action properties. 
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:C1.Schedule.Action.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Special constructor for deserialization.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/>.</param>
            <param name="context">The context information.</param>
        </member>
        <member name="T:C1.Schedule.ActionCollection">
            <summary>
            The <see cref="T:C1.Schedule.ActionCollection"/> is a collection of all <see cref="T:C1.Schedule.Action"/> objects 
            that represents the reminders for all pending items.
            </summary>
        </member>
        <member name="M:C1.Schedule.ActionCollection.#ctor">
            <summary>
            Initialize new <see cref="T:C1.Schedule.ReminderCollection"/> object.
            </summary>
        </member>
        <member name="M:C1.Schedule.ActionCollection.UpdateAll">
            <summary>
            Updates all actions. 
            </summary>
            <remarks>This method unregisters all wait handles and re-creates them again honoring changes in system time or parent appointment properties.</remarks>
        </member>
        <member name="M:C1.Schedule.ActionCollection.InsertItem(System.Int32,C1.Schedule.Action)">
            <summary>
            Overrides default behavior.
            </summary>
            <param name="index">The zero-based index of the item.</param>
            <param name="item">The <see cref="T:C1.Schedule.Action"/> object to insert.</param>
        </member>
        <member name="M:C1.Schedule.ActionCollection.RemoveItem(System.Int32)">
            <summary>
            Overrides default behavior.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:C1.Schedule.ActionCollection.ClearItems">
            <summary>
            Overrides default behavior.
            </summary>
        </member>
        <member name="M:C1.Schedule.ActionCollection.WaitProc(System.Object,System.Boolean)">
            <summary>
            Method to be called when it is time to execute action.
            </summary>
            <param name="state"></param>
            <param name="timedOut"></param>
        </member>
        <member name="M:C1.Schedule.ActionCollection.Dispose">
            <summary>
            Releases all unmanaged resources.
            </summary>
        </member>
        <member name="T:C1.Schedule.RecurrenceStateEnum">
            <summary>
            Determines the type of the <see cref="T:C1.Schedule.Appointment"/> object.
            </summary>
        </member>
        <member name="F:C1.Schedule.RecurrenceStateEnum.NotRecurring">
            <summary>
            Represents a standard (non-recurring) appointment. 
            </summary>
        </member>
        <member name="F:C1.Schedule.RecurrenceStateEnum.Master">
            <summary>
            Represents the appointment which serves as the pattern 
            for the other recurring appointments. 
            The pattern for recurring appointments is specified via 
            the Appointment.Recurrence property.
            </summary>
        </member>
        <member name="F:C1.Schedule.RecurrenceStateEnum.Occurrence">
            <summary>
            Represents one of recurring appointments whose pattern appointment 
            is specified via the Appointment.Recurrence property.
            </summary>
        </member>
        <member name="F:C1.Schedule.RecurrenceStateEnum.Exception">
            <summary>
            Represents a recurring appointment, which was changed 
            and now doesn't satisfy the pattern of the recurring series.  
            </summary>
        </member>
        <member name="F:C1.Schedule.RecurrenceStateEnum.Removed">
            <summary>
            Represents a recurring appointment, which was deleted
            and now doesn't satisfy the pattern of the recurring series.  
            </summary>
        </member>
        <member name="T:C1.Schedule.ImportanceEnum">
            <summary>
            Determines the importance of the <see cref="T:C1.Schedule.Appointment"/> object.
            </summary>
        </member>
        <member name="F:C1.Schedule.ImportanceEnum.Low">
            <summary>
            Low
            </summary>
        </member>
        <member name="F:C1.Schedule.ImportanceEnum.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:C1.Schedule.ImportanceEnum.High">
            <summary>
            High
            </summary>
        </member>
        <member name="T:C1.Schedule.SensitivityEnum">
            <summary>
            Determines the sensitivity of the <see cref="T:C1.Schedule.Appointment"/> object.
            </summary>
        </member>
        <member name="F:C1.Schedule.SensitivityEnum.Confidential">
            <summary>
            Confidential
            </summary>
        </member>
        <member name="F:C1.Schedule.SensitivityEnum.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:C1.Schedule.SensitivityEnum.Personal">
            <summary>
            Personal
            </summary>
        </member>
        <member name="F:C1.Schedule.SensitivityEnum.Private">
            <summary>
            Private
            </summary>
        </member>
        <member name="T:C1.Schedule.Appointment">
            <summary>
            The <see cref="T:C1.Schedule.Appointment"/> object is a meeting, a one-time appointment, 
            or a recurring appointment or meeting in the C1Schedule. 
            The <see cref="T:C1.Schedule.Appointment"/> class includes properties 
            that specify meeting details such as the location and time.
            </summary>
        </member>
        <member name="P:C1.Schedule.Appointment.LastAcceptedStart">
            <summary>
            For internal use only.
            The last saved start value (it doesn't changed between BeginEdit/EndEdit calls).
            </summary>
        </member>
        <member name="P:C1.Schedule.Appointment.DragStartValue">
            <summary>
            For internal use only.
            The <see cref="P:C1.Schedule.Appointment.DragStartValue"/>  property can be used to keep DateTime value, 
            where end-user started to drag appointment. It might be any time between app.Start and End values.
            If you set this field at the beginning of the drag and drop operation, later you can determine appointment.Start value 
            as LastAcceptedStart.Add(newStart.Subtract(DragStartValue)), where newStart is DateTime value under the pointer.
            Appointment.EndEdit and CancelEdit methods reset this field to DateTime.MinValue.
            </summary>
        </member>
        <member name="P:C1.Schedule.Appointment.LastAcceptedDuration">
            <summary>
            For internal use only.
            The last saved appointment duration (it doesn't changed between BeginEdit/EndEdit calls).
            </summary>
        </member>
        <member name="M:C1.Schedule.Appointment.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.Appointment"/> class with the specified key.
            </summary>
            <param name="key">The <see cref="T:System.Int32"/> value which should be used as appointment key.</param>
            <remarks>Use this constructor if your business logic requires setting custom key value.
            Make sure that you use the correct constructor overload (with integer or Guid key value) and that key value is unique.</remarks>
        </member>
        <member name="M:C1.Schedule.Appointment.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.Appointment"/> class with the specified key.
            </summary>
            <param name="key">The <see cref="T:System.Guid"/> value which should be used as appointment key.</param>
            <remarks>Use this constructor if your business logic requires setting custom key value.
            Make sure that you use the correct constructor overload (with integer or Guid key value) and that key value is unique.</remarks>
        </member>
        <member name="M:C1.Schedule.Appointment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.Appointment"/> class.
            </summary>
            <remarks>Creates an appointment with default properties.</remarks>
        </member>
        <member name="M:C1.Schedule.Appointment.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.Appointment"/> 
            class with the specified parameters.
            </summary>
            <param name="start">The <see cref="T:System.DateTime"/> value which specifies 
            the start date and time of the appointment.</param>
            <param name="end">The <see cref="T:System.DateTime"/> value which specifies 
            the end date and time of the appointment.</param>
        </member>
        <member name="M:C1.Schedule.Appointment.#ctor(System.DateTime,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.Appointment"/> 
            class with the specified parameters.
            </summary>
            <param name="start">The <see cref="T:System.DateTime"/> value which specifies 
            the start date and time of the appointment.</param>
            <param name="duration">The <see cref="T:System.TimeSpan"/> value which specifies 
            the duration of the appointment.</param>
        </member>
        <member name="M:C1.Schedule.Appointment.#ctor(System.DateTime,System.DateTime,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.Appointment"/> 
            class with the specified parameters.
            </summary>
            <param name="start">The <see cref="T:System.DateTime"/> value which specifies 
            the start date and time of the appointment.</param>
            <param name="end">The <see cref="T:System.DateTime"/> value which specifies 
            the end date and time of the appointment.</param>
            <param name="subject">The <see cref="T:System.String"/> value which contains 
            the subject of the appointment.</param>
        </member>
        <member name="M:C1.Schedule.Appointment.#ctor(System.DateTime,System.TimeSpan,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.Appointment"/> 
            class with the specified parameters.
            </summary>
            <param name="start">The <see cref="T:System.DateTime"/> value which specifies 
            the start date and time of the appointment.</param>
            <param name="duration">The <see cref="T:System.TimeSpan"/> value which specifies 
            the duration of the appointment.</param>
            <param name="subject">The <see cref="T:System.String"/> value which contains 
            the subject of the appointment.</param>
        </member>
        <member name="P:C1.Schedule.Appointment.ParentCollection">
            <summary>
            Gets or sets the reference to the parent <see cref="T:C1.Schedule.AppointmentCollection"/> object.
            </summary>
            <remarks>This property is set automatically when appointment is added to the parent collection. 
            You should manually set this property if you need to edit new appointment before adding it to collection. 
            It will allow appointment to have references to Contacts, Resources, Categories, Labels and Statuses collections.</remarks>
        </member>
        <member name="P:C1.Schedule.Appointment.InCollection">
            <summary>
            Returns the <see cref="T:System.Boolean"/> values specifying whether the current appointment has been added to the parent <see cref="T:C1.Schedule.AppointmentCollection"/>.
            </summary>
        </member>
        <member name="P:C1.Schedule.Appointment.Action">
            <summary>
            Gets an <see cref="P:C1.Schedule.Appointment.Action"/> object for the <see cref="T:C1.Schedule.Appointment"/> object.
            Once this property is first requested, a new <see cref="P:C1.Schedule.Appointment.Action"/> object 
            is created and assigned to the <see cref="P:C1.Schedule.Appointment.Action"/> property.
            </summary>
            <remarks>The <see cref="P:C1.Schedule.Appointment.Action"/> object contains information regarding 
            the type of action to perform as well as the command 
            and parameters to pass to the action.
            If the action object is enabled, the action will be invoked 
            when the start date and time of the owning <see cref="T:C1.Schedule.Appointment"/> object has occurred.
            </remarks>
        </member>
        <member name="P:C1.Schedule.Appointment.Importance">
            <summary>
            Gets or sets the <see cref="T:C1.Schedule.ImportanceEnum"/> value indicating 
            the relative importance level for the appointment.
            Default value is <see cref="F:C1.Schedule.ImportanceEnum.Normal"/>.
            </summary>
        </member>
        <member name="P:C1.Schedule.Appointment.AllDayEvent">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value indicating 
            if the current appointment is an All-day appointment.
            </summary>
        </member>
        <member name="P:C1.Schedule.Appointment.Tag">
            <summary>
            Gets or sets custom information associated with this object.
            </summary>
            <remarks>This property is valid only for the lifetime of the object.</remarks>
        </member>
        <member name="P:C1.Schedule.Appointment.CustomData">
            <summary>
            Gets or sets custom text associated with this object.
            </summary>
            <remarks>This property is serialized with other appointment properties.
            It isn't used by the scheduler, use it to keep your data associated with appointment.
            This property is serialized into different formats and it is saved into underlying 
            data source if mapping for Appointment Properties is set.</remarks>
        </member>
        <member name="P:C1.Schedule.Appointment.AppointmentType">
            <summary>
            Gets or sets custom text value associated with this object.
            </summary>
            <remarks>
            <para>This property is serialized with other appointment properties.
            You can use this property to show customized content or perform different actions depending on the property value.
            This property is serialized into different formats and it is saved into underlying 
            data source if mapping for Appointment Properties is set.</para></remarks>
        </member>
        <member name="P:C1.Schedule.Appointment.Saved">
            <summary>
            Gets the <see cref="T:System.Boolean"/> value indicating if the appointment 
            has not been modified since the last save.
            </summary>
        </member>
        <member name="P:C1.Schedule.Appointment.Sensitivity">
            <summary>
            Gets or sets the <see cref="T:C1.Schedule.SensitivityEnum"/> value indicating 
            the sensitivity level of the appointment. 
            </summary>
        </member>
        <member name="P:C1.Schedule.Appointment.Private">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value determining 
            whether the calendar owner intends to keep the <see cref="T:C1.Schedule.Appointment"/>
            object private.
            </summary>
        </member>
        <member name="P:C1.Schedule.Appointment.Subject">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value 
            representing the subject of the <see cref="T:C1.Schedule.Appointment"/> object. 
            </summary>
        </member>
        <member name="P:C1.Schedule.Appointment.Body">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value representing 
            the body of the <see cref="T:C1.Schedule.Appointment"/> object.
            </summary>
        </member>
        <member name="P:C1.Schedule.Appointment.Conflicts">
            <summary>
            Gets the <see cref="T:C1.Schedule.AppointmentList"/> object representing 
            the list of <see cref="T:C1.Schedule.Appointment"/> objects which are in conflict 
            with this particular appointment.
            </summary>
        </member>
        <member name="P:C1.Schedule.Appointment.AutoResolvedWinner">
            <summary>
            Gets the <see cref="T:System.Boolean"/> value determining if the item is 
            a winner of an automatic conflict resolution.
            </summary>
            <remarks>A value of false does not necessarily indicate that the item is 
            a loser of an automatic conflict resolution. 
            The item should be in conflict with another item.
            If an item has its Conflicts.Count property greater than zero 
            and if its <see cref="P:C1.Schedule.Appointment.AutoResolvedWinner"/> property is true, 
            it is a winner of an automatic conflict resolution. 
            On the other hand, if the item is in conflict and has its 
            <see cref="P:C1.Schedule.Appointment.AutoResolvedWinner"/> property as false, 
            it is a loser in an automatic conflict resolution.</remarks>
        </member>
        <member name="P:C1.Schedule.Appointment.Start">
            <summary>
            Gets or sets the <see cref="T:System.DateTime"/> value determining the 
            start date and time of the appointment. 
            </summary>
            <remarks>
            <para>If the <see cref="P:C1.Schedule.Appointment.AllDayEvent"/> property is set to true, 
            then the start date of the appointment is the <see cref="P:System.DateTime.Date"/> of 
            the <see cref="P:C1.Schedule.Appointment.Start"/>, and the start time of the appointment is 0:00.</para>
            <para>At setting this property, if it's time is not equal 0:00, 
            the <see cref="P:C1.Schedule.Appointment.AllDayEvent"/> property will be set to false.</para></remarks>
        </member>
        <member name="P:C1.Schedule.Appointment.End">
            <summary>
            Gets or sets the <see cref="T:System.DateTime"/> value determining 
            the end date and time of the appointment. 
            </summary>
            <remarks> <para>The <see cref="P:C1.Schedule.Appointment.End"/> property is usually specified 
            by the <see cref="P:C1.Schedule.Appointment.Start"/> and <see cref="P:C1.Schedule.Appointment.Duration"/> properties, 
            and is always calculated as <see cref="P:C1.Schedule.Appointment.End"/> = <see cref="P:C1.Schedule.Appointment.Start"/> + <see cref="P:C1.Schedule.Appointment.Duration"/>. 
            When setting the <see cref="P:C1.Schedule.Appointment.End"/> property, the <see cref="P:C1.Schedule.Appointment.Start"/> property 
            retains its value, and the <see cref="P:C1.Schedule.Appointment.Duration"/> is changed according 
            to the new value of the <see cref="P:C1.Schedule.Appointment.End"/> property. 
            If the new <see cref="P:C1.Schedule.Appointment.End"/> property's value is less than 
            the <see cref="P:C1.Schedule.Appointment.Start"/> property's value, then an exception will be raised.</para>
            <para>At setting this property, if it's time is not equal 0:00, 
            or value is equal to the value of <see cref="P:C1.Schedule.Appointment.Start"/> property, 
            the <see cref="P:C1.Schedule.Appointment.AllDayEvent"/> property will be set to false.</para></remarks>
        </member>
        <member name="P:C1.Schedule.Appointment.IsOneDay">
            <summary>
            Gets a <see cref="T:System.Boolean"/> value indicating either it is 
            a one day appointment or shares some days.
            </summary>
        </member>
        <member name="P:C1.Schedule.Appointment.IsAllDayOrMultiDay">
            <summary>
            Returns the <see cref="T:System.Boolean"/> value indicating whether the duration of the appointment is greater than or equal to one day.
            </summary>
        </member>
        <member name="P:C1.Schedule.Appointment.EndDate">
            <summary>
            Returns the appointment end date.
            </summary>
        </member>
        <member name="P:C1.Schedule.Appointment.Duration">
            <summary>
            Gets or sets the <see cref="T:System.TimeSpan"/> value indicating the 
            duration of the appointment.
            </summary>
            <remarks>At setting this property, if it's value is not equal to the whole 
            number of days, the <see cref="P:C1.Schedule.Appointment.AllDayEvent"/> property will be set to false.</remarks>
        </member>
        <member name="P:C1.Schedule.Appointment.Location">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value specifying 
            where the appointment is going to be.
            </summary>
        </member>
        <member name="P:C1.Schedule.Appointment.Reminder">
            <summary>
            Gets the <see cref="P:C1.Schedule.Appointment.Reminder"/> object which is associated with the appointment.
            To associate an appointment with the reminder, set its 
            <see cref="P:C1.Schedule.Appointment.ReminderSet"/> property to true. 
            Once this property is set to true, a new <see cref="P:C1.Schedule.Appointment.Reminder"/> object 
            is created and assigned to the <see cref="P:C1.Schedule.Appointment.Reminder"/> property.
            </summary>
        </member>
        <member name="P:C1.Schedule.Appointment.ReminderSet">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value indicating whether 
            a reminder is associated with the appointment. 
            Once this property is set to true, a new <see cref="P:C1.Schedule.Appointment.Reminder"/> object 
            is created and assigned to the <see cref="P:C1.Schedule.Appointment.Reminder"/> property.
            </summary>
        </member>
        <member name="P:C1.Schedule.Appointment.ReminderTimeBeforeStart">
            <summary>
            Gets or sets the <see cref="T:System.TimeSpan"/> value indicating the 
            interval of time the reminder should occur 
            prior to the start of the appointment. 
            </summary>
        </member>
        <member name="P:C1.Schedule.Appointment.ReminderOverrideDefault">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value indicating if the associated
            <see cref="P:C1.Schedule.Appointment.Reminder"/> object has non-default settings.
            True if the reminder overrides the default reminder behavior for the appointment.
            You must set the <see cref="P:C1.Schedule.Appointment.ReminderOverrideDefault"/> property to validate 
            the <see cref="P:C1.Schedule.Appointment.ReminderPlaySound"/> and 
            the <see cref="P:C1.Schedule.Appointment.ReminderSoundFile"/> properties.
            </summary>
        </member>
        <member name="P:C1.Schedule.Appointment.ReminderPlaySound">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value indicating if the reminder 
            should play a sound when it occurs for this appointment or task. 
            The <see cref="P:C1.Schedule.Appointment.ReminderPlaySound"/> property must be set in order to validate 
            the <see cref="P:C1.Schedule.Appointment.ReminderSoundFile"/> property. 
            This property is only valid if the <see cref="P:C1.Schedule.Appointment.ReminderOverrideDefault"/> property 
            is set to true.
            </summary>
        </member>
        <member name="P:C1.Schedule.Appointment.ReminderSoundFile">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value indicating the path and file name 
            of the sound file to play when the reminder occurs for the appointment. 
            This property is only valid if the <see cref="P:C1.Schedule.Appointment.ReminderOverrideDefault"/> and 
            <see cref="P:C1.Schedule.Appointment.ReminderPlaySound"/> properties are set to true.
            </summary>
            <remarks>The default sound is the system Exclamation sound.</remarks>
        </member>
        <member name="P:C1.Schedule.Appointment.IsRecurring">
            <summary>
            Gets the <see cref="T:System.Boolean"/> value indicating if the appointment is recurring.
            </summary>
        </member>
        <member name="P:C1.Schedule.Appointment.ParentRecurrence">
            <summary>
            Gets the <see cref="T:C1.Schedule.Appointment"/> object that defines the recurrence 
            criteria for this <see cref="T:C1.Schedule.Appointment"/> object. 
            If this appointment is a not member of a recurrence, 
            or is itself a root appointment, null is returned. 
            </summary>
            <remarks>If an appointment is recurring (see the <see cref="P:C1.Schedule.Appointment.IsRecurring"/> property) 
            it represents an occurrence in the series that is started and defined 
            by a specific pattern appointment. 
            Use the <see cref="P:C1.Schedule.Appointment.ParentRecurrence"/> property to obtain the pattern 
            of the current appointment. A pattern appointment can be recognized by its 
            <see cref="P:C1.Schedule.Appointment.RecurrenceState"/> property set 
            to the <see cref="F:C1.Schedule.RecurrenceStateEnum.Master"/> value. 
            The recurrence information defined by the pattern appointment can be accessed 
            via the <see cref="T:C1.Schedule.RecurrencePattern"/> property of the appointment. 
            </remarks>
        </member>
        <member name="P:C1.Schedule.Appointment.RecurrenceState">
            <summary>
            Gets the <see cref="T:C1.Schedule.RecurrenceStateEnum"/> value indicating 
            the recurrence state of the appointment. 
            </summary>
        </member>
        <member name="P:C1.Schedule.Appointment.Label">
            <summary>
            Gets or sets the <see cref="P:C1.Schedule.Appointment.Label"/> object associated with this appointment.
            </summary>
            <remarks>Labels may be associated with an appointment 
            to effectively group appointments. </remarks>
            <remarks>This property only accepts <see cref="P:C1.Schedule.Appointment.Label"/> objects which are present in the C1ScheduleStorage.LabelStorage storage.</remarks>
        </member>
        <member name="P:C1.Schedule.Appointment.Resources">
            <summary>
            Gets or sets the <see cref="T:C1.Schedule.ResourceList"/> object which holds the set of 
            <see cref="T:C1.Schedule.Resource"/> objects for this appointment.
            An appointment may be associated with multiple resources.
            </summary>
            <remarks>This property only accepts <see cref="T:C1.Schedule.Resource"/> objects which are present in the C1ScheduleStorage.ResourceStorage storage.</remarks>
        </member>
        <member name="P:C1.Schedule.Appointment.Links">
            <summary>
            Gets or sets the <see cref="T:C1.Schedule.ContactList"/> object which holds the set 
            of <see cref="T:C1.Schedule.Contact"/> objects for this appointment.
            An appointment may be associated with multiple contacts.
            </summary>
            <remarks>This property only accepts <see cref="T:C1.Schedule.Contact"/> objects which are present in the C1ScheduleStorage.ContactStorage storage.</remarks>
        </member>
        <member name="P:C1.Schedule.Appointment.BusyStatus">
            <summary>
            Gets or sets the <see cref="T:C1.Schedule.Status"/> object indicating the busy status 
            of the user for the appointment.
            </summary>
            <remarks>This property only accepts <see cref="T:C1.Schedule.Status"/> objects which are present in the C1ScheduleStorage.StatusStorage storage.</remarks>
        </member>
        <member name="P:C1.Schedule.Appointment.Categories">
            <summary>
            Gets or sets the <see cref="T:C1.Schedule.CategoryList"/> object which holds the set 
            of categories assigned to the appointment.
            Categories may be associated with an appointment to effectively group appointments. 
            An appointment may be associated with multiple categories.
            </summary>
            <remarks>This property only accepts <see cref="T:C1.Schedule.Category"/> objects which are present in the C1ScheduleStorage.CategoryStorage storage.</remarks>
        </member>
        <member name="P:C1.Schedule.Appointment.Owner">
            <summary>
            Gets or sets the <see cref="T:C1.Schedule.Contact"/> object which owns current <see cref="T:C1.Schedule.Appointment"/> object.
            </summary>
            <remarks>This property only accepts <see cref="T:C1.Schedule.Contact"/> objects which are present in the C1ScheduleStorage.OwnerStorage storage.</remarks>
            <value>The default value is null.</value>
        </member>
        <member name="M:C1.Schedule.Appointment.BeginEdit">
            <summary>
            Prevents the <see cref="T:C1.Schedule.Appointment"/> object from being updated until 
            the <see cref="M:C1.Schedule.Appointment.EndEdit(System.Boolean)"/> method is called.
            </summary>
            <remarks>The <see cref="M:C1.Schedule.Appointment.BeginEdit"/> and <see cref="M:C1.Schedule.Appointment.EndEdit(System.Boolean)"/> methods 
            are designed to implement batch modifications. 
            This allows you to prevent generation of change notifications
            when changing multiple settings at the same time. 
            To do this enclose the code that changes the properties in calls to these methods.
            Each call to <see cref="M:C1.Schedule.Appointment.BeginEdit"/> must be paired with a call to <see cref="M:C1.Schedule.Appointment.EndEdit(System.Boolean)"/>. 
            To ensure that <see cref="M:C1.Schedule.Appointment.EndEdit(System.Boolean)"/> is always called even if an exception occurs, 
            wrap any calls to these methods in a try...finally statement.</remarks>
        </member>
        <member name="M:C1.Schedule.Appointment.EndEdit(System.Boolean)">
            <summary>
            Unlocks the <see cref="T:C1.Schedule.Appointment"/> object after a call 
            to the <see cref="M:C1.Schedule.Appointment.BeginEdit"/> method and causes an immediate update. 
            </summary>
            <param name="canRaiseChangeNotification">The <see cref="T:System.Boolean"/> value determining
            if change notifications can be generated when applying changes.</param>
        </member>
        <member name="M:C1.Schedule.Appointment.IsGroupMember(C1.Schedule.BaseObject,System.String)">
            <summary>
            Returns True if the current <see cref="T:C1.Schedule.Appointment"/> object is a member of a group which is specified by the
            groupOwner and groupBy parameters; False otherwise. 
            </summary>
            <param name="groupOwner">The <see cref="T:C1.Schedule.BaseObject"/> object determining the appointment group.</param>
            <param name="groupBy">The <see cref="T:System.String"/> value determining the type of grouping.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Schedule.Appointment.SetOwner(C1.Schedule.BaseObject,C1.Schedule.BaseObject,System.String)">
            <summary>
            Sets a new group owner for the current appointment
            </summary>
            <param name="newOwner">The new owner object.</param>
            <param name="oldOwner">The old owner object.</param>
            <param name="groupBy">The string defining owning control grouping.</param>
            <exception cref="T:System.ArgumentException">the type of owner object doesn't fit into specified grouping option.</exception>
        </member>
        <member name="M:C1.Schedule.Appointment.ClearRecurrencePattern">
            <summary>
            Removes the recurrence settings and restores 
            the <see cref="F:C1.Schedule.RecurrenceStateEnum.NotRecurring"/> state for an appointment.
            </summary>
        </member>
        <member name="M:C1.Schedule.Appointment.GetRecurrencePattern">
            <summary>
            Returns the <see cref="T:C1.Schedule.RecurrencePattern"/> object that represents 
            the recurrence attributes of an appointment. 
            If there is no existing recurrence pattern, a new 
            empty <see cref="T:C1.Schedule.RecurrencePattern"/> object is returned.
            </summary>
            <returns>The <see cref="T:C1.Schedule.RecurrencePattern"/> object.</returns>
        </member>
        <member name="M:C1.Schedule.Appointment.Copy">
            <summary>
            Creates the copy of the <see cref="T:C1.Schedule.Appointment"/> object.
            </summary>
            <returns>The new <see cref="T:C1.Schedule.Appointment"/> instance.</returns>
        </member>
        <member name="M:C1.Schedule.Appointment.CopyForPattern">
            <summary>
            Creates the copy of the <see cref="T:C1.Schedule.Appointment"/> object. Doesn't copy recurrence pattern.
            </summary>
            <returns>The new <see cref="T:C1.Schedule.Appointment"/> instance.</returns>
        </member>
        <member name="M:C1.Schedule.Appointment.CopyFrom(C1.Schedule.Appointment,System.Boolean)">
             <summary>
             Copies properties from the specified <see cref="T:C1.Schedule.Appointment"/> object to this one. 
             </summary>
             <param name="app">The <see cref="T:C1.Schedule.Appointment"/> instance to copy.</param>
             <param name="includeKeys">Specifies whether to copy internal keys.</param>
            <remarks><para>Set includeKeys to true if you want to receive exact copy 
            of the specified <see cref="T:C1.Schedule.Appointment"/> object.</para>
            <para>Set includeKeys to false in order to copy only descriptive <see cref="T:C1.Schedule.Appointment"/> 
            properties to other <see cref="T:C1.Schedule.Appointment"/> object (for example, 
            if you want to duplicate appointment from one day to another).</para></remarks>
        </member>
        <member name="M:C1.Schedule.Appointment.CopyFrom(C1.Schedule.Appointment,System.Boolean,System.Boolean)">
             <summary>
             Copies properties from the specified <see cref="T:C1.Schedule.Appointment"/> object to this one. 
             </summary>
             <param name="app">The <see cref="T:C1.Schedule.Appointment"/> instance to copy.</param>
             <param name="includeKeys">Specifies whether to copy internal keys.</param>
             <param name="includeRecurrenceInformation">Specifies whether to copy recurrence information if any.</param>
            <remarks><para>Set includeKeys to true if you want to receive exact copy 
            of the specified <see cref="T:C1.Schedule.Appointment"/> object.</para>
            <para>Set includeKeys to false in order to copy only descriptive <see cref="T:C1.Schedule.Appointment"/> 
            properties to other <see cref="T:C1.Schedule.Appointment"/> object (for example, 
            if you want to duplicate appointment from one day to another).</para>
            <para>Set includeRecurrenceInformation to false to exclude RecurrenceState, ParentRecurrence and RecurrencePattern information.</para>
            </remarks>
        </member>
        <member name="M:C1.Schedule.Appointment.Delete">
            <summary>
            Deletes an appointment and removes it from 
            the owning <see cref="T:C1.Schedule.AppointmentCollection"/> collection.
            </summary>
        </member>
        <member name="M:C1.Schedule.Appointment.GetTimeTillEvent">
            <summary>
            Returns a time term before the appointment start; a negative value means that 
            appointment is expired.
            </summary>
            <returns>A time term before the appointment starts; a negative value means 
            that the appointment has expired.</returns>
        </member>
        <member name="M:C1.Schedule.Appointment.SaveAs(System.String,C1.Schedule.FileFormatEnum)">
            <summary>
            Saves the appointment to the specified path in the format 
            of the specified file format. 
            </summary>
            <param name="path">Required string. The path in which to save the item.</param>
            <param name="fileFormat">The <see cref="T:C1.Schedule.FileFormatEnum"/> value indicating 
            the file format to save.</param>
        </member>
        <member name="M:C1.Schedule.Appointment.FromXml(System.Xml.XmlNode)">
            <summary>
            Reconstructs appointment from an <see cref="T:System.Xml.XmlNode"/>. 
            </summary>
            <param name="node">An <see cref="T:System.Xml.XmlNode"/> 
            which contains the <see cref="T:C1.Schedule.Appointment"/> data.</param>
            <returns>True if appointment has been changed.</returns>
        </member>
        <member name="M:C1.Schedule.Appointment.FromXml(System.Xml.XmlReader)">
            <summary>
            Reconstructs appointment from an <see cref="T:System.Xml.XmlReader"/>. 
            </summary>
            <param name="reader">An <see cref="T:System.Xml.XmlReader"/> 
            which contains the <see cref="T:C1.Schedule.Appointment"/> data.</param>
            <returns>True if appointment has been changed.</returns>
        </member>
        <member name="M:C1.Schedule.Appointment.ToXml(System.Xml.XmlWriter)">
            <summary>
            Creates an XML encoding of the appointment. 
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> 
            that will receive the object data.</param>
        </member>
        <member name="M:C1.Schedule.Appointment.GetAppointmentProperties">
            <summary>
            Returns XML encoding of appointment properties.
            </summary>
            <remarks>Use this property to get the same string as serialized value of appointment properties, which you get
            when set mapping for AppointmentProperties.</remarks>
            <returns>The <see cref="T:System.String"/> value containing XML encoding of appointment properties.</returns>
        </member>
        <member name="M:C1.Schedule.Appointment.SetAppointmentProperties(System.String)">
            <summary>
            Reconstructs appointment properties from the specified string.
            </summary>
            <param name="source">The <see cref="T:System.String"/> value containing XML encoding of appointment properties.</param>
            <returns>True if appointment has been changed.</returns>
        </member>
        <member name="M:C1.Schedule.Appointment.PropsFromXml(System.Xml.XmlNode)">
            <summary>
            Reconstructs appointment properties from an <see cref="T:System.Xml.XmlNode"/>. 
            </summary>
            <param name="node"></param>
            <returns>True if appointment has been changed.</returns>
        </member>
        <member name="M:C1.Schedule.Appointment.PropsFromXml(System.Xml.XmlReader)">
            <summary>
            Reconstructs appointment properties from an <see cref="T:System.Xml.XmlReader"/>. 
            </summary>
            <param name="reader"></param>
            <returns>True if appointment has been changed.</returns>
        </member>
        <member name="M:C1.Schedule.Appointment.PropsToXml(System.Xml.XmlWriter)">
            <summary>
            Creates an XML encoding of the appointment properties. 
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:C1.Schedule.Appointment.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Special constructor for deserialization.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/>.</param>
            <param name="context">The context information.</param>
        </member>
        <member name="M:C1.Schedule.Appointment.CancelEdit">
            <summary>
            Discards changes since the last <see cref="M:C1.Schedule.Appointment.BeginEdit"/> call.
            </summary>
        </member>
        <member name="M:C1.Schedule.Appointment.CopyPatternFrom(C1.Schedule.Appointment)">
            <summary>
            Copies RecurrencePattern from the specified Appointment
            </summary>
            <param name="app">The <see cref="T:C1.Schedule.Appointment"/> object to copy from.</param>
        </member>
        <member name="M:C1.Schedule.Appointment.GetFileName">
            <summary>
            Create string which can be used as a file name from appointment subject.
            </summary>
            <returns>The string which can be used as a file name.</returns>
        </member>
        <member name="M:C1.Schedule.Appointment.InvalidateProperties">
            <summary>
            Invalidates appointment properties.
            </summary>
            <remarks>Call this method when alive appointment has been added to the SchedulerStorage component in order 
            to ensure, that Owner, Label, Status, Categories, Contacts and Resources contain valid objects from associated storages.</remarks>
        </member>
        <member name="M:C1.Schedule.Appointment.SetDirty">
            <summary>
            Specifies that the current appointment has been changed and should invalidate properties.
            </summary>
        </member>
        <member name="M:C1.Schedule.Appointment.OnPropertyChanged(System.String)">
            <summary>
            Overrides default behavior.
            </summary>
            <param name="propertyName">The property name.</param>
        </member>
        <member name="M:C1.Schedule.Appointment.SatisfyAllDayEventConditions">
            <summary>
            Returns the <see cref="T:System.Boolean"/> value indicating whether according to the appointment times and duration the appointment is an all-day event.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Schedule.Appointment.CompareTo(System.Object)">
            <summary>
            Performs a comparison with another <see cref="T:C1.Schedule.Appointment"/> object based on the start time and subject.
            </summary>
            <param name="obj">The <see cref="T:C1.Schedule.Appointment"/> to compare.</param>
            <returns>The <see cref="T:System.Int32"/> value determining the comparison result.</returns>
            <exception cref="T:System.ArgumentException">obj is not the same type as this instance.</exception>
        </member>
        <member name="T:C1.Schedule.AppointmentCollection">
            <summary>
            The <see cref="T:C1.Schedule.AppointmentCollection"/> is a collection of all 
            <see cref="T:C1.Schedule.Appointment"/> objects in the C1Schedule component.
            </summary>
        </member>
        <member name="E:C1.Schedule.AppointmentCollection.AppointmentRecurrenceStateChanged">
            <summary>
            Occurs when RecurrenceState of an appointment is changed.
            </summary>
        </member>
        <member name="E:C1.Schedule.AppointmentCollection.AppointmentCustomAction">
            <summary>
            Occurs when a custom action of an appointment executes. 
            </summary>
        </member>
        <member name="E:C1.Schedule.AppointmentCollection.AppointmentAdded">
            <summary>
            Occurs when an appointment was added.
            </summary>
        </member>
        <member name="E:C1.Schedule.AppointmentCollection.AppointmentRemoved">
            <summary>
            Occurs when an appointment was removed.
            </summary>
        </member>
        <member name="E:C1.Schedule.AppointmentCollection.AppointmentChanged">
            <summary>
            Occurs when an appointment was changed.
            </summary>
        </member>
        <member name="P:C1.Schedule.AppointmentCollection.ParentStorage">
            <summary>
            Gets the reference to the owning <see cref="T:C1.Schedule.AppointmentStorage"/> object.
            </summary>
        </member>
        <member name="P:C1.Schedule.AppointmentCollection.Actions">
            <summary>
            Gets the reference to the associated <see cref="T:C1.Schedule.ActionCollection"/> object.
            </summary>
        </member>
        <member name="P:C1.Schedule.AppointmentCollection.Statuses">
            <summary>
            Gets the reference to the associated <see cref="T:C1.Schedule.StatusCollection"/> object.
            </summary>
        </member>
        <member name="P:C1.Schedule.AppointmentCollection.Contacts">
            <summary>
            Gets the reference to the associated <see cref="T:C1.Schedule.ContactCollection"/> object.
            </summary>
        </member>
        <member name="P:C1.Schedule.AppointmentCollection.Owners">
            <summary>
            Gets the reference to the associated <see cref="T:C1.Schedule.ContactCollection"/> object.
            </summary>
        </member>
        <member name="P:C1.Schedule.AppointmentCollection.Reminders">
            <summary>
            Gets the reference to the associated <see cref="T:C1.Schedule.ReminderCollection"/> object.
            </summary>
        </member>
        <member name="P:C1.Schedule.AppointmentCollection.Labels">
            <summary>
            Gets the reference to the associated <see cref="T:C1.Schedule.LabelCollection"/> object.
            </summary>
        </member>
        <member name="P:C1.Schedule.AppointmentCollection.Categories">
            <summary>
            Gets the reference to the associated <see cref="T:C1.Schedule.CategoryCollection"/> object.
            </summary>
        </member>
        <member name="P:C1.Schedule.AppointmentCollection.Resources">
            <summary>
            Gets the reference to the associated <see cref="T:C1.Schedule.ResourceCollection"/> object.
            </summary>
        </member>
        <member name="P:C1.Schedule.AppointmentCollection.CalendarInfo">
            <summary>
            Gets the reference to the associated <see cref="P:C1.Schedule.AppointmentCollection.CalendarInfo"/> object.
            </summary>
        </member>
        <member name="P:C1.Schedule.AppointmentCollection.Days">
            <summary>
            Gets the reference to the associated <see cref="T:C1.Schedule.DayCollection"/> object.
            </summary>
        </member>
        <member name="M:C1.Schedule.AppointmentCollection.Add">
            <summary>
            Creates the new <see cref="T:C1.Schedule.Appointment"/> object 
            with default settings and adds it to the collection.
            </summary>
            <returns>The <see cref="T:C1.Schedule.Appointment"/> object.</returns>
        </member>
        <member name="M:C1.Schedule.AppointmentCollection.Add(System.DateTime,System.DateTime)">
            <summary>
            Creates the new <see cref="T:C1.Schedule.Appointment"/> object 
            with specified parameters and adds it to the collection.
            </summary>
            <param name="start">The <see cref="T:System.DateTime"/> value which specifies 
            the start date and time of the appointment.</param>
            <param name="end">The <see cref="T:System.DateTime"/> value which specifies 
            the end date and time of the appointment.</param>
            <returns>The <see cref="T:C1.Schedule.Appointment"/> object.</returns>
        </member>
        <member name="M:C1.Schedule.AppointmentCollection.Add(System.DateTime,System.TimeSpan)">
            <summary>
            Creates the new <see cref="T:C1.Schedule.Appointment"/> object 
            with specified parameters and adds it to the collection.
            </summary>
            <param name="start">The <see cref="T:System.DateTime"/> value which specifies 
            the start date and time of the appointment.</param>
            <param name="duration">The <see cref="T:System.TimeSpan"/> value which specifies 
            the duration of the appointment.</param>
            <returns>The <see cref="T:C1.Schedule.Appointment"/> object.</returns>
        </member>
        <member name="M:C1.Schedule.AppointmentCollection.Add(System.DateTime,System.DateTime,System.String)">
            <summary>
            Creates the new <see cref="T:C1.Schedule.Appointment"/> object 
            with specified parameters and adds it to the collection.
            </summary>
            <param name="start">The <see cref="T:System.DateTime"/> value which specifies 
            the start date and time of the appointment.</param>
            <param name="end">The <see cref="T:System.DateTime"/> value which specifies 
            the end date and time of the appointment.</param>
            <param name="subject">The <see cref="T:System.String"/> value which contains 
            the subject of the appointment.</param>
            <returns>The <see cref="T:C1.Schedule.Appointment"/> object.</returns>
        </member>
        <member name="M:C1.Schedule.AppointmentCollection.Add(System.DateTime,System.TimeSpan,System.String)">
            <summary>
            Creates the new <see cref="T:C1.Schedule.Appointment"/> object 
            with specified parameters and adds it to the collection.
            </summary>
            <param name="start">The <see cref="T:System.DateTime"/> value which specifies 
            the start date and time of the appointment.</param>
            <param name="duration">The <see cref="T:System.TimeSpan"/> value which specifies 
            the duration of the appointment.</param>
            <param name="subject">The <see cref="T:System.String"/> value which contains 
            the subject of the appointment.</param>
            <returns>The <see cref="T:C1.Schedule.Appointment"/> object.</returns>
        </member>
        <member name="M:C1.Schedule.AppointmentCollection.GetOccurrence(C1.Schedule.Appointment,System.DateTime,C1.Schedule.CalendarInfo)">
            <summary>
            Returns a specific instance of the Appointment object on the specified date.
            </summary>
            <param name="pattern"></param>
            <param name="startDate"></param>
            <param name="info"></param>
            <returns></returns>
            <remarks>The GetOccurrence method generates an exception if no appointment 
            of that series exists on the specified date.</remarks>
        </member>
        <member name="M:C1.Schedule.AppointmentCollection.GetOccurrences(System.DateTime,System.DateTime)">
            <summary>
            Retrieves the <see cref="T:C1.Schedule.AppointmentList"/> object which contains 
            the full list of <see cref="T:C1.Schedule.Appointment"/> objects in the specified time interval. 
            </summary>
            <param name="start">The <see cref="T:System.DateTime"/> value which specifies 
            the start date and time of the interval.</param>
            <param name="end">The <see cref="T:System.DateTime"/> value which specifies 
            the end date and time of the interval.</param>
            <returns>The <see cref="T:C1.Schedule.AppointmentList"/> object.</returns>
            <remarks>This method will create instances of the <see cref="T:C1.Schedule.Appointment"/>
            object for recurring appointments if they haven't been created yet.
            </remarks>
        </member>
        <member name="M:C1.Schedule.AppointmentCollection.GetOccurrences(C1.Schedule.BaseObject,System.String,System.DateTime,System.DateTime,System.Boolean)">
            <summary>
            Retrieves the <see cref="T:C1.Schedule.AppointmentList"/> object which contains 
            the full list of <see cref="T:C1.Schedule.Appointment"/> objects in the specified time interval. 
            </summary>
            <param name="groupOwner">The <see cref="T:C1.Schedule.BaseObject"/> object determining the appointment group.</param>
            <param name="groupBy">The <see cref="T:System.String"/> value determining the type of grouping.</param>
            <param name="start">The <see cref="T:System.DateTime"/> value which specifies 
            the start date and time of the interval.</param>
            <param name="end">The <see cref="T:System.DateTime"/> value which specifies 
            the end date and time of the interval.</param>
            <param name="includePrivateAppointments">The <see cref="T:System.Boolean"/> value determining whether 
            to include private appointments.</param>
            <returns>The <see cref="T:C1.Schedule.AppointmentList"/> object.</returns>
            <remarks>This method will create instances of the <see cref="T:C1.Schedule.Appointment"/>
            object for recurring appointments if they haven't been created yet.
            </remarks>
        </member>
        <member name="M:C1.Schedule.AppointmentCollection.GetOccurrences(C1.Schedule.Appointment,System.DateTime,System.DateTime)">
            <summary>
            Retrieves the <see cref="T:C1.Schedule.AppointmentList"/> object which contains 
            the list of occurrences of the specified master appointment 
            in the specified time interval. 
            </summary>
            <param name="appointment">The <see cref="T:C1.Schedule.Appointment"/> object 
            representing the master appointment.</param>
            <param name="start">The <see cref="T:System.DateTime"/> value which specifies 
            the start date and time of the interval.</param>
            <param name="end">The <see cref="T:System.DateTime"/> value which specifies 
            the end date and time of the interval.</param>
            <returns>The <see cref="T:C1.Schedule.AppointmentList"/> object.</returns>
            <remarks>This method will create instances of the <see cref="T:C1.Schedule.Appointment"/>
            object for recurring appointments if they haven't been created yet.</remarks>
        </member>
        <member name="M:C1.Schedule.AppointmentCollection.RefreshData(System.Boolean)">
            <summary>
            Clears collection of days and fills them again honoring changes in system time, appointment collection or appointment properties. 
            </summary>
            <param name="full">If this parameter is true, also clears collections of actions and reminders.</param>
        </member>
        <member name="M:C1.Schedule.AppointmentCollection.RefreshData(System.DateTime,System.DateTime)">
            <summary>
            Refreshed data for all days in the specified interval. 
            </summary>
            <param name="start">The start date.</param>
            <param name="end">The end date.</param>
        </member>
        <member name="M:C1.Schedule.AppointmentCollection.GetConflicts(C1.Schedule.Appointment)">
            <summary>
            Retrieves the <see cref="T:C1.Schedule.AppointmentList"/> object which contains 
            the list of occurrences of <see cref="T:C1.Schedule.Appointment"/> objects 
            which are in conflict with the specified appointment.
            </summary>
            <param name="appointment">The <see cref="T:C1.Schedule.Appointment"/> object.</param>
            <returns>The <see cref="T:C1.Schedule.AppointmentList"/> object.</returns>
        </member>
        <member name="M:C1.Schedule.AppointmentCollection.ClearItems">
            <summary>
            Clears the collection.
            </summary>
        </member>
        <member name="M:C1.Schedule.AppointmentCollection.RemoveItem(System.Int32)">
            <summary>
            Overrides the default behavior.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:C1.Schedule.AppointmentCollection.InsertItem(System.Int32,C1.Schedule.Appointment)">
            <summary>
            Overrides the default behavior.
            </summary>
            <param name="index">The zero-based index of the item.</param>
            <param name="item">The <see cref="T:C1.Schedule.Appointment"/> object to insert.</param>
        </member>
        <member name="M:C1.Schedule.AppointmentCollection.SetItem(System.Int32,C1.Schedule.Appointment)">
            <summary>
            Overrides the default behavior.
            </summary>
            <param name="index">The zero-based index of the item.</param>
            <param name="item">The <see cref="T:C1.Schedule.Appointment"/> object to set.</param>
        </member>
        <member name="M:C1.Schedule.AppointmentCollection.AddRange(C1.Schedule.Appointment[])">
            <summary>
            Adds an array of <see cref="T:C1.Schedule.Appointment"/> objects to the collection.
            This methods clears collection before adding new items. 
            Don't use it if you want to save previously existed items.
            </summary>
            <param name="items">An array of <see cref="T:C1.Schedule.Appointment"/> objects.</param>
        </member>
        <member name="T:C1.Schedule.AppointmentList">
            <summary>
            The <see cref="T:C1.Schedule.AppointmentList"/> is a sortable collection of 
            <see cref="T:C1.Schedule.Appointment"/> objects.
            </summary>
            <remarks>The <see cref="T:C1.Schedule.AppointmentList"/> is not guaranteed to be sorted. 
            You must sort the <see cref="T:C1.Schedule.AppointmentList"/> before performing operations
            that require the <see cref="T:C1.Schedule.AppointmentList"/> to be sorted.</remarks>
        </member>
        <member name="M:C1.Schedule.AppointmentList.#ctor(C1.Schedule.AppointmentCollection)">
            <summary>
            Initializes the new instance of the <see cref="T:C1.Schedule.AppointmentList"/> class.
            </summary>
            <param name="owner">Reference to the owning <see cref="T:C1.Schedule.AppointmentCollection"/> object.</param>
        </member>
        <member name="M:C1.Schedule.AppointmentList.Sort">
            <summary>
            Sorts the elements in the entire AppointmentList using the default comparer
            (by the Appointment.Start value).
            </summary>
        </member>
        <member name="M:C1.Schedule.AppointmentList.Sort(System.Comparison{C1.Schedule.Appointment})">
            <summary>
            Sorts the elements in the entire AppointmentList using 
            the specified System.Comparison. 
            </summary>
            <param name="comparison">The <see cref="T:System.Comparison`1"/> 
            to use when comparing elements.</param>
        </member>
        <member name="M:C1.Schedule.AppointmentList.Sort(System.Collections.Generic.IComparer{C1.Schedule.Appointment})">
            <summary>
            Sorts the elements in the entire AppointmentList using 
            the specified comparer. 
            </summary>
            <param name="comparer">The IComparer{Appointment} implementation to use 
            when comparing elements, or a null reference (Nothing in Visual Basic) 
            to use the default comparer.</param>
        </member>
        <member name="M:C1.Schedule.AppointmentList.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{C1.Schedule.Appointment})">
            <summary>
            Sorts the elements in a range of elements in AppointmentList using 
            the specified comparer. 
            </summary>
            <param name="index">The zero-based starting index of the range to sort.</param>
            <param name="count">The length of the range to sort.</param>
            <param name="comparer">The IComparer{Appointment} implementation to use 
            when comparing elements, or a null reference (Nothing in Visual Basic) 
            to use the default comparer.</param>
        </member>
        <member name="M:C1.Schedule.AppointmentList.Clone">
            <summary>
            Creates a copy of the list by copying items to the new list.
            </summary>
            <returns></returns>
        </member>
        <member name="T:C1.Schedule.AppointmentUniqueComparer">
            <summary>
            Compares <see cref="T:C1.Schedule.Appointment"/> objects by their start time.
            </summary>
        </member>
        <member name="P:C1.Schedule.AppointmentUniqueComparer.Default">
            <summary>
            Returns an existing instance of <see cref="T:C1.Schedule.AppointmentUniqueComparer"/> class if any;
            or creates a new one.
            </summary>
        </member>
        <member name="M:C1.Schedule.AppointmentUniqueComparer.Compare(C1.Schedule.Appointment,C1.Schedule.Appointment)">
            <summary>
            Performs a comparison of two <see cref="T:C1.Schedule.Appointment"/> objects and returns 
            a value indicating whether the one <see cref="T:C1.Schedule.Appointment"/> starts earlier, 
            at the same time, or later than the other. 
            </summary>
            <param name="x">The first <see cref="T:C1.Schedule.Appointment"/> to compare.</param>
            <param name="y">The second <see cref="T:C1.Schedule.Appointment"/> to compare.</param>
            <returns>Less than zero - x occurs earlier than y.
            Zero - x and y occur at the same time.
            Greater than zero - x occurs later than y.</returns>
        </member>
        <member name="T:C1.Schedule.AppointmentComparer">
            <summary>
            Compares <see cref="T:C1.Schedule.Appointment"/> objects by their start time.
            </summary>
        </member>
        <member name="P:C1.Schedule.AppointmentComparer.Default">
            <summary>
            Returns an existing instance of <see cref="T:C1.Schedule.AppointmentComparer"/> class if any;
            or creates a new one.
            </summary>
        </member>
        <member name="M:C1.Schedule.AppointmentComparer.Compare(C1.Schedule.Appointment,C1.Schedule.Appointment)">
            <summary>
            Performs a comparison of two <see cref="T:C1.Schedule.Appointment"/> objects and returns 
            a value indicating whether the one <see cref="T:C1.Schedule.Appointment"/> starts earlier, 
            at the same time, or later than the other. 
            </summary>
            <param name="x">The first <see cref="T:C1.Schedule.Appointment"/> to compare.</param>
            <param name="y">The second <see cref="T:C1.Schedule.Appointment"/> to compare.</param>
            <returns>Less than zero - x occurs earlier than y.
            Zero - x and y occur at the same time.
            Greater than zero - x occurs later than y.</returns>
        </member>
        <member name="T:C1.Schedule.AppointmentEventArgs">
            <summary>
            The <see cref="T:C1.Schedule.AppointmentEventArgs"/> class describes event data for <see cref="P:C1.Schedule.AppointmentEventArgs.Appointment"/> events.
            </summary>
        </member>
        <member name="M:C1.Schedule.AppointmentEventArgs.#ctor(C1.Schedule.Appointment)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.AppointmentEventArgs"/>
            class with the specified appointment. 
            </summary>
            <param name="appointment">The <see cref="T:C1.Schedule.Appointment"/> object.</param>
        </member>
        <member name="P:C1.Schedule.AppointmentEventArgs.Appointment">
            <summary>
            Gets the appointment which the event was raised for. 
            </summary>
        </member>
        <member name="T:C1.Schedule.CancelAppointmentEventHandler">
            <summary>
            Delegate for handling the cancellable event involving a single 
            <see cref="T:C1.Schedule.Appointment"/> object. 
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:C1.Schedule.CancelAppointmentEventArgs"/> 
            that contains the event data.</param>
        </member>
        <member name="T:C1.Schedule.CancelAppointmentEventArgs">
            <summary>
            The <see cref="T:C1.Schedule.CancelAppointmentEventArgs"/> class describes event data 
            for cancellable <see cref="P:C1.Schedule.CancelAppointmentEventArgs.Appointment"/> events.
            </summary>
        </member>
        <member name="M:C1.Schedule.CancelAppointmentEventArgs.#ctor(C1.Schedule.Appointment)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.CancelAppointmentEventArgs"/>
            class with the specified appointment. 
            </summary>
            <param name="appointment">The <see cref="P:C1.Schedule.CancelAppointmentEventArgs.Appointment"/> object.</param>
        </member>
        <member name="P:C1.Schedule.CancelAppointmentEventArgs.Appointment">
            <summary>
            Gets the <see cref="P:C1.Schedule.CancelAppointmentEventArgs.Appointment"/> object which the event was raised for. 
            </summary>
        </member>
        <member name="T:C1.Schedule.BasePersistableObject">
            <summary>
            The <see cref="T:C1.Schedule.BasePersistableObject"/> is a base class for persistable objects.
            </summary>
        </member>
        <member name="M:C1.Schedule.BasePersistableObject.OnPropertyChanged(System.String)">
            <summary>
            Fires property change notification.
            </summary>
            <param name="propertyName">The property name.</param>
        </member>
        <member name="M:C1.Schedule.BasePersistableObject.#ctor">
            <summary>
            Creates new BasePersistableObject object.
            </summary>
        </member>
        <member name="P:C1.Schedule.BasePersistableObject.Key">
            <summary>
            Gets an array of objects representing the key of the <see cref="T:C1.Schedule.BasePersistableObject"/>.
            </summary>
            <remarks><para>In the current version, the array always contains a single object.
            It can be either an <see cref="T:System.Int32"/> or <see cref="T:System.Guid"/> value depending on
            which one is actually used for binding this data.
            For example, if you bind AppointmentStorage to the database and set
            IndexMapping, this property will return an <see cref="T:System.Int32"/> value.
            If you set IdMapping, this property will return a <see cref="T:System.Guid"/> value.</para>
            <para>In future versions working with compound keys might be implemented.
            In such case this property will return array of objects composing the key.</para></remarks>
        </member>
        <member name="P:C1.Schedule.BasePersistableObject.Id">
            <summary>
            Gets the unique id used for serialization purposes.
            </summary>
        </member>
        <member name="P:C1.Schedule.BasePersistableObject.Index">
            <summary>
            User can specify mapping either for Id property or for Index property
            (depending on his database structure or object model).
            In unbound mode or if user doesn't specify mapping for any of these properties,
            Index will contain index of the object in containing collection.
            </summary>
        </member>
        <member name="M:C1.Schedule.BasePersistableObject.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Special constructor for deserialization.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/>.</param>
            <param name="context">The context information.</param>
        </member>
        <member name="M:C1.Schedule.BasePersistableObject.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            A method called when serializing.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> 
            to populate with data.</param>
            <param name="context">The context information about the source or destination 
            of the serialization.</param>
        </member>
        <member name="M:C1.Schedule.BasePersistableObject.BeginEdit">
            <summary>
            Brings the object in edit mode.
            </summary>
            <remarks>
            A corresponding item from a data source will not be updated on this object's
            property changes while the object is in edit mode. Data synchronization will
            be performed when the <see cref="M:C1.Schedule.BasePersistableObject.EndEdit"/> method will be called.
            </remarks>
        </member>
        <member name="M:C1.Schedule.BasePersistableObject.EndEdit">
            <summary>
            Finishes edit mode started by the <see cref="M:C1.Schedule.BasePersistableObject.BeginEdit"/> method and
            updates a corresponding data source item.
            </summary>
        </member>
        <member name="M:C1.Schedule.BasePersistableObject.EndEdit(System.Boolean)">
            <summary>
            
            </summary>
            <param name="canRaiseChangeNotification"></param>
        </member>
        <member name="M:C1.Schedule.BasePersistableObject.CancelEdit">
            <summary>
            Discards changes since the last <see cref="M:C1.Schedule.BasePersistableObject.BeginEdit"/> call.
            </summary>
        </member>
        <member name="P:C1.Schedule.BasePersistableObject.IsEdit">
            <summary>
            Indicates whether the object is in edit mode, 
            which is started using the <see cref="M:C1.Schedule.BasePersistableObject.BeginEdit"/> method.
            </summary>
        </member>
        <member name="P:C1.Schedule.BasePersistableObject.BaseSourceItemMap">
            <summary>
            Keeps a reference to a data source item that this object is based on.
            A null value means that there is no base source item.
            </summary>
        </member>
        <member name="M:C1.Schedule.BasePersistableObject.SetBaseSourceItemMap(C1.Schedule.ItemsMapTableRow)">
            <summary>
            WARNING: don't call this method! This a special method that must be called
            from the BaseStorage.SetCollectionItemBaseItem method only!
            </summary>
            <param name="sourceItemMap"></param>
        </member>
        <member name="M:C1.Schedule.BasePersistableObject.FromXml(System.Xml.XmlNode)">
            <summary>
            Loads an object from the specified <see cref="T:System.Xml.XmlNode"/>.
            </summary>
            <param name="node">An <see cref="T:System.Xml.XmlNode"/> which contains the object data.</param>
            <returns>Returns true if object has been changed.</returns>
        </member>
        <member name="M:C1.Schedule.BasePersistableObject.FromXml(System.Xml.XmlReader)">
            <summary>
            Loads an object from the specified <see cref="T:System.Xml.XmlReader"/>.
            </summary>
            <param name="reader">An <see cref="T:System.Xml.XmlReader"/> which contains the object data.</param>
            <returns>Returns true if object has been changed.</returns>
        </member>
        <member name="M:C1.Schedule.BasePersistableObject.ToXml(System.Xml.XmlWriter)">
            <summary>
            Saves an object to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> that will receive 
            the object data.</param>
        </member>
        <member name="M:C1.Schedule.BasePersistableObject.FromXml(System.IO.Stream)">
            <summary>
            Loads an object from the specified <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> that contains the object data.</param>
            <returns>Returns true if object has been changed.</returns>
        </member>
        <member name="M:C1.Schedule.BasePersistableObject.ToXml(System.IO.Stream)">
            <summary>
            Saves an object to the specified <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> that contains the object data.</param>
        </member>
        <member name="T:C1.Schedule.BaseObject">
            <summary>
            The <see cref="T:C1.Schedule.BaseObject"/> is a base class for resources, labels, statuses, 
            categories and contacts. It implements base UI properties and persistence.
            </summary>
        </member>
        <member name="M:C1.Schedule.BaseObject.#ctor">
            <summary>
            Creates the new <see cref="T:C1.Schedule.BaseObject"/> object with default settings.
            </summary>
        </member>
        <member name="M:C1.Schedule.BaseObject.#ctor(System.String)">
            <summary>
            Creates the new <see cref="T:C1.Schedule.BaseObject"/> object with specified text.
            </summary>
            <param name="text">The <see cref="T:System.String"/> value.</param>
        </member>
        <member name="M:C1.Schedule.BaseObject.#ctor(System.String,System.String)">
            <summary>
            Creates the new <see cref="T:C1.Schedule.BaseObject"/> object with specified text and menu caption.
            </summary>
            <param name="text">The <see cref="T:System.String"/> value.</param>
            <param name="menuCaption">The <see cref="T:System.String"/> value.</param>
        </member>
        <member name="M:C1.Schedule.BaseObject.#ctor(System.Drawing.Color,System.String,System.String)">
            <summary>
            Creates the new <see cref="T:C1.Schedule.BaseObject"/> object with specified color, 
            text and menu caption.
            </summary>
            <param name="color">The <see cref="P:C1.Schedule.BaseObject.Color"/> value.</param>
            <param name="text">The <see cref="T:System.String"/> value.</param>
            <param name="menuCaption">The <see cref="T:System.String"/> value.</param>
        </member>
        <member name="M:C1.Schedule.BaseObject.#ctor(System.Drawing.Color,System.String,System.String,C1.Schedule.C1Brush)">
            <summary>
            Creates the new <see cref="T:C1.Schedule.BaseObject"/> object with specified parameters.
            </summary>
            <param name="color">The <see cref="P:C1.Schedule.BaseObject.Color"/> value.</param>
            <param name="text">The <see cref="T:System.String"/> value.</param>
            <param name="menuCaption">The <see cref="T:System.String"/> value.</param>
            <param name="brush">The <see cref="P:C1.Schedule.BaseObject.Brush"/> object.</param>
        </member>
        <member name="P:C1.Schedule.BaseObject.Color">
            <summary>
            Gets or sets the color of the user interface object.
            </summary>
        </member>
        <member name="P:C1.Schedule.BaseObject.Text">
            <summary>
            Gets or sets the text which identifies a user interface object. 
            </summary>
        </member>
        <member name="P:C1.Schedule.BaseObject.MenuCaption">
            <summary>
            Gets or sets the menu caption for the user interface object.
            </summary>
        </member>
        <member name="P:C1.Schedule.BaseObject.Brush">
            <summary>
            Gets or sets the brush used to fill the user interface object's image.
            </summary>
            <remarks>Supported persistence only for System.Drawing.Drawing2D.HatchBrush
            and System.Drawing.SolidBrush</remarks>
        </member>
        <member name="M:C1.Schedule.BaseObject.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Special constructor for deserialization.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/>.</param>
            <param name="context">The context information.</param>
        </member>
        <member name="M:C1.Schedule.BaseObject.FromXml(System.Xml.XmlNode)">
            <summary>
            Loads an object from the specified <see cref="T:System.Xml.XmlNode"/>.
            </summary>
            <param name="node">An <see cref="T:System.Xml.XmlNode"/> 
            which contains the object data.</param>
        </member>
        <member name="M:C1.Schedule.BaseObject.FromXml(System.Xml.XmlReader)">
            <summary>
            Loads an object from the specified <see cref="T:System.Xml.XmlReader"/>.
            </summary>
            <param name="reader">An <see cref="T:System.Xml.XmlReader"/> which contains the object data.</param>
            <returns>Returns true if object has been changed.</returns>
        </member>
        <member name="M:C1.Schedule.BaseObject.ToXml(System.Xml.XmlWriter)">
            <summary>
            Saves an object into specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> 
            that will receive the object data.</param>
        </member>
        <member name="M:C1.Schedule.BaseObject.ToString">
            <summary>
            Overrides the default behavior.
            </summary>
            <returns>The text which identifies a user interface object.</returns>
        </member>
        <member name="T:C1.Schedule.BaseCollection`1">
            <summary>
            The <see cref="T:C1.Schedule.BaseCollection`1"/> is a base generic class for all collections 
            in C1Schedule object model.
            </summary>
            <typeparam name="T">The type of the objects which will be stored in the collection.
            It should be derived from the <see cref="T:C1.Schedule.BasePersistableObject"/> class
            and have the default parameter-less constructor.</typeparam>
        </member>
        <member name="E:C1.Schedule.BaseCollection`1.ItemChanged">
            <summary>
            Occurs when one of collection items has been changed.
            </summary>
        </member>
        <member name="M:C1.Schedule.BaseCollection`1.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.BaseCollection`1"/> class.
            </summary>
            <param name="owner">The owning storage.</param>
        </member>
        <member name="M:C1.Schedule.BaseCollection`1.Add(`0)">
            <summary>
            Adds a new custom object to the collection.
            If the item already exists in the collection, its index is returned.
            </summary>
            <returns>Returns the index of newly added custom object.</returns>
        </member>
        <member name="M:C1.Schedule.BaseCollection`1.Contains(System.Int32)">
            <summary>
            Check if collection contains an item with specified index.
            </summary>
            <param name="index">The zero-based index of the item to locate.</param>
            <returns>True if the item is found in the collection; otherwise, false.</returns>
        </member>
        <member name="P:C1.Schedule.BaseCollection`1.Item(System.Guid)">
            <summary>
            Gets the element with the specified key if any. 
            </summary>
            <param name="key">The key of the element to get.</param>
            <returns>The element with the specified key. If an element with the specified key is not found, return null.</returns>
        </member>
        <member name="P:C1.Schedule.BaseCollection`1.OwnerInternal">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Schedule.BaseCollection`1.RefreshIndices">
            <summary>
            Call this method after removing items from the unbound storage.
            </summary>
        </member>
        <member name="M:C1.Schedule.BaseCollection`1.AddRange(`0[])">
            <summary>
            Adds an array of objects to the collection.
            This methods clears the collection before adding new items. 
            Don't use it if you want to keep preexisting items.
            </summary>
            <param name="items">An array of items.</param>
        </member>
        <member name="P:C1.Schedule.BaseCollection`1.SuppressedDataChanging">
            <summary>
            Gets or set the <see cref="T:System.Boolean"/> value specifying whether change events should not be fired.
            </summary>
        </member>
        <member name="M:C1.Schedule.BaseCollection`1.BeginUpdate">
            <summary>
            When overriden in derived class, starts batch operation.
            </summary>
        </member>
        <member name="M:C1.Schedule.BaseCollection`1.EndUpdate">
            <summary>
            When overriden in derived class, finishes batch operation.
            </summary>
        </member>
        <member name="M:C1.Schedule.BaseCollection`1.AddRange(System.Object[])">
            <summary>
            Adds an array of objects to the collection.
            This methods clears the collection before adding new items. 
            Don't use it if you want to keep preexisting items.
            </summary>
            <param name="items">An array of items.</param>
        </member>
        <member name="M:C1.Schedule.BaseCollection`1.InsertItem(System.Int32,`0)">
            <summary>
            Overrides default behavior of collection at inserting new items.
            </summary>
            <param name="index">The zero-based index of the item to insert.</param>
            <param name="item">The object to insert.</param>
        </member>
        <member name="M:C1.Schedule.BaseCollection`1.GetKeyForItem(`0)">
            <summary>
            Extracts the key from the specified element.
            </summary>
            <param name="item">The element from which to extract the key.</param>
            <returns>The key for the specified element.</returns>
        </member>
        <member name="M:C1.Schedule.BaseCollection`1.RemoveItem(System.Int32)">
            <summary>
            Overrides base class implementation.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="T:C1.Schedule.BaseList`1">
            <summary>
            The <see cref="T:C1.Schedule.BaseList`1"/> is a base generic class for all lists 
            in C1Schedule's object model.
            Only objects existing in the owning collection can be added to this list.
            </summary>
            <typeparam name="T">The type of the objects which will be stored in the list.
            It should be derived from the <see cref="T:C1.Schedule.BasePersistableObject"/> class.</typeparam>
        </member>
        <member name="F:C1.Schedule.BaseList`1._owner">
            <summary>
            
            </summary>
        </member>
        <member name="M:C1.Schedule.BaseList`1.IsEquals(C1.Schedule.BaseList{`0},C1.Schedule.BaseList{`0})">
            <summary>
            Compares 2 lists for their content equality.
            </summary>
            <param name="list1">The <see cref="T:C1.Schedule.BaseList`1"/> to compare.</param>
            <param name="list2">The <see cref="T:C1.Schedule.BaseList`1"/> to compare.</param>
            <returns>Returns true if both lists contain the same items.</returns>
        </member>
        <member name="M:C1.Schedule.BaseList`1.InsertItem(System.Int32,`0)">
            <summary>
            Overrides default behavior of Collection.
            Prevents from adding items non-existent in the parent collection.
            </summary>
            <param name="index">The zero-based index of the item to insert.</param>
            <param name="item">The object to insert.</param>
        </member>
        <member name="M:C1.Schedule.BaseList`1.SetItem(System.Int32,`0)">
            <summary>
            Overrides default behavior of Collection.
            Prevents from adding items non-existent in the parent collection.
            </summary>
            <param name="index">The zero-based index of the item.</param>
            <param name="item">The object to set.</param>
        </member>
        <member name="M:C1.Schedule.BaseList`1.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Schedule.BaseList`1.Owner">
            <summary>
            Gets the reference to the owning collection.
            </summary>
        </member>
        <member name="T:C1.Schedule.BaseCollectionEventArgs`1">
            <summary>
            Provides data for the <see cref="T:C1.Schedule.BaseCollection`1"/> events.
            </summary>
            <typeparam name="T">The <see cref="T:C1.Schedule.BasePersistableObject"/> object.</typeparam>
        </member>
        <member name="P:C1.Schedule.BaseCollectionEventArgs`1.Item">
            <summary>
            Returns reference to the changed item.
            </summary>
        </member>
        <member name="T:C1.Schedule.TimeScaleEnum">
            <summary>
            Determines the time interval which is used for 
            displaying time slots in the DayView.
            </summary>
        </member>
        <member name="F:C1.Schedule.TimeScaleEnum.FiveMinutes">
            <summary>
            5 minutes.
            </summary>
        </member>
        <member name="F:C1.Schedule.TimeScaleEnum.SixMinutes">
            <summary>
            6 minutes.
            </summary>
        </member>
        <member name="F:C1.Schedule.TimeScaleEnum.TenMinutes">
            <summary>
            10 minutes.
            </summary>
        </member>
        <member name="F:C1.Schedule.TimeScaleEnum.FifteenMinutes">
            <summary>
            15 minutes.
            </summary>
        </member>
        <member name="F:C1.Schedule.TimeScaleEnum.TwentyMinutes">
            <summary>
            20 minutes.
            </summary>
        </member>
        <member name="F:C1.Schedule.TimeScaleEnum.ThirtyMinutes">
            <summary>
            30 minutes.
            </summary>
        </member>
        <member name="F:C1.Schedule.TimeScaleEnum.OneHour">
            <summary>
            1 hour.
            </summary>
        </member>
        <member name="F:C1.Schedule.TimeScaleEnum.TwoHours">
            <summary>
            2 hours.
            </summary>
        </member>
        <member name="T:C1.Schedule.DayOfWeekConverter">
            <summary>
            Provides a type converter to convert <see cref="T:System.DayOfWeek"/> objects to and from various other representations.
            </summary>
        </member>
        <member name="F:C1.Schedule.DayOfWeekConverter.AllWeekDays">
            <summary>
            The array of all week days.
            </summary>
        </member>
        <member name="M:C1.Schedule.DayOfWeekConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.DayOfWeekConverter"/> class.
            </summary>
        </member>
        <member name="M:C1.Schedule.DayOfWeekConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Schedule.DayOfWeekConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:C1.Schedule.TimeScaleEnumConverter">
            <summary>
            Provides a type converter to convert <see cref="T:C1.Schedule.TimeScaleEnum"/> objects to and from various other representations.
            </summary>
        </member>
        <member name="M:C1.Schedule.TimeScaleEnumConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.TimeScaleEnumConverter"/> class.
            </summary>
        </member>
        <member name="M:C1.Schedule.TimeScaleEnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Schedule.TimeScaleEnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:C1.Schedule.CalendarInfo">
            <summary>
            The <see cref="T:C1.Schedule.CalendarInfo"/> class manages and exposes all date-related data. 
            </summary>
        </member>
        <member name="E:C1.Schedule.CalendarInfo.SelectedDaysChanged">
            <summary>
            Occurs when the range of selected days was changed.
            </summary>
        </member>
        <member name="E:C1.Schedule.CalendarInfo.PropertyChanged">
            <summary>
            Occurs when the property of <see cref="T:C1.Schedule.CalendarInfo"/> object was changed.
            </summary>
        </member>
        <member name="M:C1.Schedule.CalendarInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.CalendarInfo"/> component.
            </summary>
        </member>
        <member name="P:C1.Schedule.CalendarInfo.Culture">
            <summary>
            Gets or sets the <see cref="P:C1.Schedule.CalendarInfo.CultureInfo"/> object which 
            holds culture-specific information used by C1Schedule components.
            </summary>
        </member>
        <member name="P:C1.Schedule.CalendarInfo.CultureInfo">
            <summary>
            Gets or sets the <see cref="P:C1.Schedule.CalendarInfo.CultureInfo"/> object which 
            holds culture-specific information used by C1Schedule components.
            </summary>
        </member>
        <member name="P:C1.Schedule.CalendarInfo.DateFormatString">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value determining display format 
            of date values to use in appointments and built-in dialogs.
            </summary>
            <remarks>The actual representation depends on the value 
            of the <see cref="P:C1.Schedule.CalendarInfo.Culture"/> property.</remarks>
        </member>
        <member name="P:C1.Schedule.CalendarInfo.TimeFormatString">
            <summary>
            Gets or sets the <see cref="T:System.String"/> value determining display format 
            of time values to use in appointments and built-in dialogs.
            </summary>
            <remarks>The actual representation depends on the value 
            of the <see cref="P:C1.Schedule.CalendarInfo.Culture"/> property.</remarks>
        </member>
        <member name="P:C1.Schedule.CalendarInfo.WeekStart">
            <summary>
            Gets or sets the <see cref="T:System.DayOfWeek"/> value determining
            the first day of the week. Default is system settings.
            </summary>
        </member>
        <member name="M:C1.Schedule.CalendarInfo.GetFirstWeekDay(System.DateTime)">
            <summary>
            Returns the first day of week, containing specified date.
            </summary>
            <param name="day">The <see cref="T:System.DateTime"/> value.</param>
            <returns>The <see cref="T:System.DateTime"/> value of the week start day.</returns>
        </member>
        <member name="P:C1.Schedule.CalendarInfo.WorkDays">
            <summary>
            Gets or sets the <see cref="P:C1.Schedule.CalendarInfo.WorkDays"/> object containing the 
            set of working days in one week.
            </summary>
        </member>
        <member name="P:C1.Schedule.CalendarInfo.NoWorkingDays">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value determining whether
            the <see cref="T:C1.Schedule.CalendarInfo"/> object has any working days.
            </summary>
        </member>
        <member name="P:C1.Schedule.CalendarInfo.TimeScale">
            <summary>
            Gets or sets the <see cref="T:System.TimeSpan"/> value specifying the time interval 
            which is used for displaying time slots in the DayView.
            </summary>
            <remarks>The <see cref="P:C1.Schedule.CalendarInfo.TimeScale"/> property cannot be set to any 
            arbitrary value. When assigning a value to this property it is 
            automatically calculated so as to be equal to the nearest 
            <see cref="T:C1.Schedule.TimeScaleEnum"/> value or other appropriate interval.</remarks>
        </member>
        <member name="P:C1.Schedule.CalendarInfo.TimeInterval">
            <summary>
            Gets or sets the <see cref="T:C1.Schedule.TimeScaleEnum"/> value specifying the time interval 
            which is used for displaying time slots in the DayView.
            </summary>
        </member>
        <member name="P:C1.Schedule.CalendarInfo.StartDayTime">
            <summary>
            Gets or sets the <see cref="T:System.TimeSpan"/> value specifying the beginning 
            of the working time.
            </summary>
        </member>
        <member name="P:C1.Schedule.CalendarInfo.EndDayTime">
            <summary>
            Gets or sets the <see cref="T:System.TimeSpan"/> value specifying 
            the end of the working time.
            </summary>
        </member>
        <member name="P:C1.Schedule.CalendarInfo.FirstDate">
            <summary>
            Gets or sets the <see cref="T:System.DateTime"/> value specifying minimum date allowed. 
            </summary>
        </member>
        <member name="P:C1.Schedule.CalendarInfo.LastDate">
            <summary>
            Gets or sets the <see cref="T:System.DateTime"/> value specifying maximum date allowed. 
            </summary>
        </member>
        <member name="P:C1.Schedule.CalendarInfo.LastTime">
            <summary>
            Gets the <see cref="T:System.DateTime"/> value specifying maximum DateTime allowed. 
            </summary>
        </member>
        <member name="P:C1.Schedule.CalendarInfo.Holidays">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.List`1"/> object which holds
            the list of holidays (non-working days in addition to weekends).
            </summary>
        </member>
        <member name="P:C1.Schedule.CalendarInfo.WeekendExceptions">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.List`1"/> object which holds
            the list of weekend days which should be working.
            </summary>
        </member>
        <member name="P:C1.Schedule.CalendarInfo.DateTimeKind">
            <summary>
            Gets or sets <see cref="P:C1.Schedule.CalendarInfo.DateTimeKind"/> specifying DateTime kind
            used for saving <see cref="T:System.DateTime"/> values.
            </summary>
            <remarks>
            This property only have an influence on the process of saving data to
            the AppointmentStorage.DataSource object and on export operations.
            All properties of the <see cref="T:C1.Schedule.Appointment"/> and <see cref="T:C1.Schedule.RecurrencePattern"/>
            objects represent current system local time values.
            Set this property to DateTimeLind.Utc if you need to save
            data with universal time. In such case the data will be converted 
            to the local time and back at every read/write operation.
            </remarks>
        </member>
        <member name="M:C1.Schedule.CalendarInfo.GetWeekOfYear(System.DateTime)">
            <summary>
            returns week of year for the specified date according to the current culture settings
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Schedule.CalendarInfo.IsWorkingDay(System.DateTime)">
            <summary>
            Returns true if specified date is not weekend or holiday.
            </summary>
            <param name="day">The <see cref="T:System.DateTime"/> value to check.</param>
            <returns>True if specified date is not weekend or holiday; false - otherwise.</returns>
        </member>
        <member name="M:C1.Schedule.CalendarInfo.IsWorkingInterval(System.DateTime,System.DateTime)">
            <summary>
            Returns true if specified time interval is a working time.
            </summary>
            <remarks>It doesn't check for working days.</remarks>
            <param name="start">The <see cref="T:System.DateTime"/> value specifying the interval start time.</param>
            <param name="end">The <see cref="T:System.DateTime"/> value specifying the interval end time.</param>
            <returns>True if specified date is not weekend or holiday; false - otherwise.</returns>
        </member>
        <member name="M:C1.Schedule.CalendarInfo.CopyFrom(C1.Schedule.CalendarInfo)">
            <summary>
            Copies properties from the specified <see cref="T:C1.Schedule.CalendarInfo"/> object to this one. 
            </summary>
            <param name="info">The <see cref="T:C1.Schedule.CalendarInfo"/> instance to copy.</param>
        </member>
        <member name="M:C1.Schedule.CalendarInfo.GetDayOfWeekName(System.DayOfWeek)">
            <summary>
            Returns the culture-specific full name of the specified day of the week based on the current UI culture.
            </summary>
            <param name="day">The <see cref="T:System.DayOfWeek"/> value.</param>
            <returns>The culture-specific full name of the day of the week represented by dayofweek.</returns>
        </member>
        <member name="M:C1.Schedule.CalendarInfo.GetDayOfWeekName(System.DayOfWeek,System.Globalization.CultureInfo)">
            <summary>
            Returns the culture-specific full name of the specified day of the week based on the specified culture.
            </summary>
            <param name="day">The <see cref="T:System.DayOfWeek"/> value.</param>
            <param name="culture">The <see cref="P:C1.Schedule.CalendarInfo.CultureInfo"/> object.</param>
            <returns>The culture-specific full name of the day of the week represented by dayofweek.</returns>
        </member>
        <member name="M:C1.Schedule.CalendarInfo.GetMonthName(System.Int32)">
            <summary>
            Returns the culture-specific full name of the specified month based on the 
            current UI culture.
            </summary>
            <param name="month">The month number.</param>
            <returns>The culture-specific month name.</returns>
        </member>
        <member name="M:C1.Schedule.CalendarInfo.GetMonthName(System.Int32,System.Globalization.CultureInfo)">
            <summary>
            Returns the culture-specific full name of the specified month based on the 
            specified culture.
            </summary>
            <param name="month">The month number.</param>
            <param name="culture">The <see cref="P:C1.Schedule.CalendarInfo.CultureInfo"/> object.</param>
            <returns>The culture-specific month name.</returns>
        </member>
        <member name="M:C1.Schedule.CalendarInfo.GetInstanceName(C1.Schedule.WeekOfMonthEnum)">
            <summary>
            Returns the culture-specific full name of the specified instance based on the 
            current UI culture.
            </summary>
            <param name="instance">The <see cref="T:C1.Schedule.WeekOfMonthEnum"/> value.</param>
            <returns>The culture-specific full name of the specified instance.</returns>
        </member>
        <member name="M:C1.Schedule.CalendarInfo.GetInstanceName(C1.Schedule.WeekOfMonthEnum,System.Globalization.CultureInfo)">
            <summary>
            Returns the culture-specific full name of the specified instance based on the specified culture.
            </summary>
            <param name="instance">The <see cref="T:C1.Schedule.WeekOfMonthEnum"/> value.</param>
            <param name="culture">The <see cref="P:C1.Schedule.CalendarInfo.CultureInfo"/> object.</param>
            <returns>The culture-specific full name of the specified instance.</returns>
        </member>
        <member name="M:C1.Schedule.CalendarInfo.ParseTime(System.String)">
            <summary>
            Returns DateTime value with filled DateTimeKind property.
            DateTimeKind = DateTimeKind.Utc if string was saved using RFC1123Pattern. 
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="T:C1.Schedule.WorkDays">
            <summary>
            The <see cref="T:C1.Schedule.WorkDays"/> class is a list of working days for the single week.
            </summary>
        </member>
        <member name="M:C1.Schedule.WorkDays.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.WorkDays"/> class.
            </summary>
        </member>
        <member name="M:C1.Schedule.WorkDays.AddRange(System.DayOfWeek[])">
            <summary>
            Creates the new <see cref="T:C1.Schedule.WorkDays"/> object.
            </summary>
            <param name="items">The array of <see cref="T:System.DayOfWeek"/> objects.</param>
        </member>
        <member name="T:C1.Schedule.Category">
            <summary>
            The <see cref="T:C1.Schedule.Category"/> class represents the category which can be
            associated with the <see cref="T:C1.Schedule.Appointment"/> object. 
            </summary>
        </member>
        <member name="M:C1.Schedule.Category.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.Category"/> class with the specified key.
            </summary>
            <param name="key">The <see cref="T:System.Int32"/> value which should be used as category key.</param>
            <remarks>Use this constructor if your business logic requires setting custom key value.
            Make sure that you use the correct constructor overload (with integer or Guid key value) and that key value is unique.</remarks>
        </member>
        <member name="M:C1.Schedule.Category.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.Category"/> class with the specified key.
            </summary>
            <param name="key">The <see cref="T:System.Guid"/> value which should be used as category key.</param>
            <remarks>Use this constructor if your business logic requires setting custom key value.
            Make sure that you use the correct constructor overload (with integer or Guid key value) and that key value is unique.</remarks>
        </member>
        <member name="M:C1.Schedule.Category.#ctor">
            <summary>
            Creates the new <see cref="T:C1.Schedule.Category"/> object.
            </summary>
        </member>
        <member name="M:C1.Schedule.Category.#ctor(System.String)">
            <summary>
            Creates custom <see cref="T:C1.Schedule.Category"/> object with specified text.
            </summary>
            <param name="text">The text of category.</param>
        </member>
        <member name="M:C1.Schedule.Category.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Special constructor for deserialization.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/>.</param>
            <param name="context">The context information.</param>
        </member>
        <member name="T:C1.Schedule.CategoryCollection">
            <summary>
            The <see cref="T:C1.Schedule.CategoryCollection"/> is a collection of <see cref="T:C1.Schedule.Category"/> 
            objects which represents all available categories in C1Schedule object model.
            By default it contains the set of predefined categories. 
            </summary>
        </member>
        <member name="M:C1.Schedule.CategoryCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.CategoryCollection"/> class.
            </summary>
        </member>
        <member name="M:C1.Schedule.CategoryCollection.LoadDefaults">
            <summary>
            Restores the collection to its default state.
            </summary>
            <remarks>The <see cref="M:C1.Schedule.CategoryCollection.LoadDefaults"/> method removes all 
            custom categories from the collection and leaves only the standard ones.
            </remarks>
        </member>
        <member name="M:C1.Schedule.CategoryCollection.GetDefaults">
            <summary>
            Returns the list of predefined categories.
            </summary>
            <returns>The <see cref="T:System.Collections.Generic.List`1"/> object.</returns>
        </member>
        <member name="M:C1.Schedule.CategoryCollection.RefreshDefaults">
            <summary>
            Refreshes default values honoring current culture settings.
            </summary>
        </member>
        <member name="T:C1.Schedule.CategoryList">
            <summary>
            The <see cref="T:C1.Schedule.CategoryList"/> is a list of <see cref="T:C1.Schedule.Category"/> objects.
            Only objects existing in the owning <see cref="T:C1.Schedule.CategoryCollection"/> object 
            may be added to this list.
            Use the <see cref="T:C1.Schedule.CategoryList"/> to associate the set of <see cref="T:C1.Schedule.Category"/> objects 
            with an <see cref="T:C1.Schedule.Appointment"/> object.
            </summary>
        </member>
        <member name="M:C1.Schedule.CategoryList.#ctor(C1.Schedule.CategoryCollection)">
            <summary>
            Initializes the new instance of the <see cref="T:C1.Schedule.CategoryList"/> class.
            </summary>
            <param name="owner">The owning <see cref="T:C1.Schedule.CategoryCollection"/> object.</param>
        </member>
        <member name="M:C1.Schedule.CategoryList.#ctor(C1.Schedule.CategoryList)">
            <summary>
            Initializes a copy of the specified <see cref="T:C1.Schedule.CategoryList"/> object.
            </summary>
            <param name="list">The <see cref="T:C1.Schedule.CategoryList"/> object.</param>
        </member>
        <member name="P:C1.Schedule.CategoryList.Owner">
            <summary>
            Gets the reference to the owning <see cref="T:C1.Schedule.CategoryCollection"/> object.
            </summary>
        </member>
        <member name="T:C1.Schedule.Contact">
            <summary>
            The <see cref="T:C1.Schedule.Contact"/> class represents the person information.
            Not real class just sample for prototyping.
            </summary>
        </member>
        <member name="M:C1.Schedule.Contact.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.Contact"/> class with the specified key.
            </summary>
            <param name="key">The <see cref="T:System.Int32"/> value which should be used as contact key.</param>
            <remarks>Use this constructor if your business logic requires setting custom key value.
            Make sure that you use the correct constructor overload (with integer or Guid key value) and that key value is unique.</remarks>
        </member>
        <member name="M:C1.Schedule.Contact.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.Contact"/> class with the specified key.
            </summary>
            <param name="key">The <see cref="T:System.Guid"/> value which should be used as contact key.</param>
            <remarks>Use this constructor if your business logic requires setting custom key value.
            Make sure that you use the correct constructor overload (with integer or Guid key value) and that key value is unique.</remarks>
        </member>
        <member name="M:C1.Schedule.Contact.#ctor">
            <summary>
            Creates the new <see cref="T:C1.Schedule.Contact"/> object.
            </summary>
        </member>
        <member name="M:C1.Schedule.Contact.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Special constructor for deserialization.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/>.</param>
            <param name="context">The context information.</param>
        </member>
        <member name="T:C1.Schedule.ContactCollection">
            <summary>
            The <see cref="T:C1.Schedule.ContactCollection"/> is a collection of <see cref="T:C1.Schedule.Contact"/> 
            objects which represents all available contacts in C1Schedule object model.
            </summary>
        </member>
        <member name="M:C1.Schedule.ContactCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.ContactCollection"/> class.
            </summary>
        </member>
        <member name="T:C1.Schedule.ContactList">
            <summary>
            The <see cref="T:C1.Schedule.ContactList"/> is a list of <see cref="T:C1.Schedule.Contact"/> objects.
            Only objects existing in the owning <see cref="T:C1.Schedule.ContactCollection"/> object 
            may be added to this list.
            Use the <see cref="T:C1.Schedule.ContactList"/> to associate the set of <see cref="T:C1.Schedule.Contact"/> objects
            with an <see cref="T:C1.Schedule.Appointment"/> object.
            </summary>
        </member>
        <member name="M:C1.Schedule.ContactList.#ctor(C1.Schedule.ContactCollection)">
            <summary>
            Initializes the new instance of the <see cref="T:C1.Schedule.ContactList"/> class.
            </summary>
            <param name="owner">The owning <see cref="T:C1.Schedule.ContactCollection"/> object.</param>
        </member>
        <member name="M:C1.Schedule.ContactList.#ctor(C1.Schedule.ContactList)">
            <summary>
            Initializes a copy of the specified <see cref="T:C1.Schedule.ContactList"/> object.
            </summary>
            <param name="list">The <see cref="T:C1.Schedule.ContactList"/> object.</param>
        </member>
        <member name="P:C1.Schedule.ContactList.Owner">
            <summary>
            Gets the reference to the owning <see cref="T:C1.Schedule.ContactCollection"/> object.
            </summary>
        </member>
        <member name="T:C1.Schedule.Day">
            <summary>
            Represents one day with appointments. 
            </summary>
        </member>
        <member name="M:C1.Schedule.Day.#ctor(System.DateTime)">
            <summary>
            Creates new Day object.
            </summary>
        </member>
        <member name="P:C1.Schedule.Day.Date">
            <summary>
            Returns the date of the current day.
            </summary>
        </member>
        <member name="P:C1.Schedule.Day.HasActivity">
            <summary>
            Specifies whether the day has any appointments.
            </summary>
        </member>
        <member name="P:C1.Schedule.Day.Appointments">
            <summary>
            Returns the list of <see cref="T:C1.Schedule.Appointment"/> objects which occur during the current day.
            </summary>
        </member>
        <member name="M:C1.Schedule.Day.ToString">
            <inheritdoc/>
        </member>
        <member name="T:C1.Schedule.DayCollection">
            <summary>
            Collection of all days in the C1Schedule component.
            </summary>
        </member>
        <member name="E:C1.Schedule.DayCollection.BoldedDatesChanged">
            <summary>
            Occurs when the <see cref="P:C1.Schedule.DayCollection.BoldedDates"/> collection has been changed.
            </summary>
        </member>
        <member name="M:C1.Schedule.DayCollection.#ctor(C1.Schedule.CalendarInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.DayCollection"/> class.
            </summary>
        </member>
        <member name="P:C1.Schedule.DayCollection.BoldedDates">
            <summary>
            Returns collection of dates which have appointments.
            </summary>
        </member>
        <member name="M:C1.Schedule.DayCollection.FillDayCollection">
            <summary>
            Returns DayCollection for all dates from the FirstDate till the LastDate.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Schedule.DayCollection.FillDayCollection(System.DateTime,System.DateTime)">
            <summary>
            Returns DayCollection for all dates from the start till the end.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Schedule.DayCollection.GetFirstWeekDay(System.DateTime)">
            <summary>
            Returns the first day of week, containing specified date.
            </summary>
            <param name="day">The <see cref="T:System.DateTime"/> value.</param>
            <returns>The <see cref="T:System.DateTime"/> value of the week start day.</returns>
            <remarks>If the specified date hasn't been added to this collection yet, this method call will add it.</remarks>
        </member>
        <member name="M:C1.Schedule.DayCollection.GetLastWeekDay(System.DateTime)">
            <summary>
            Returns the last day of week, containing specified date.
            </summary>
            <param name="day">The <see cref="T:System.DateTime"/> value.</param>
            <returns>The <see cref="T:System.DateTime"/> value of the week end day.</returns>
            <remarks>If the specified date hasn't been added to this collection yet, this method call will add it.</remarks>
        </member>
        <member name="P:C1.Schedule.DayCollection.Item(System.DateTime)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Schedule.DayCollection.ClearItems">
            <inheritdoc/>
        </member>
        <member name="M:C1.Schedule.DayCollection.RemoveItem(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Schedule.DayCollection.GetKeyForItem(C1.Schedule.Day)">
            <summary>
            Extracts the key from the specified element.
            </summary>
            <param name="item">The element from which to extract the key.</param>
            <returns>The key for the specified element.</returns>
        </member>
        <member name="T:C1.Schedule.DateList">
            <summary>
            The <see cref="T:C1.Schedule.DateList"/> class is a wrapper for the 
            <see cref="T:System.Collections.Generic.List`1"/> instance.
            At addition of the new value, it cuts off the time part of the value
            and ensures that the value is not present in the list yet.
            </summary>
            <remarks>This class uses binary search for all operations.</remarks>
        </member>
        <member name="M:C1.Schedule.DateList.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:C1.Schedule.DateList"/> class.
            </summary>
        </member>
        <member name="M:C1.Schedule.DateList.Add(System.DateTime)">
            <summary>
            Adds new date to the list.
            </summary>
            <param name="item">The <see cref="T:System.DateTime"/> value to add.</param>
        </member>
        <member name="M:C1.Schedule.DateList.Clear">
            <summary>
            Clears all items from the wrapped list.
            </summary>
        </member>
        <member name="M:C1.Schedule.DateList.Remove(System.DateTime)">
            <summary>
            Removes specified item from the wrapped list.
            </summary>
            <param name="item">The <see cref="T:System.DateTime"/> value to remove.</param>
        </member>
        <member name="M:C1.Schedule.DateList.RemoveAt(System.Int32)">
            <summary>
            Removes item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item remove to.</param>
        </member>
        <member name="P:C1.Schedule.DateList.Count">
            <summary>
            Returns the number of items in the wrapped list.
            </summary>
        </member>
        <member name="P:C1.Schedule.DateList.Items">
            <summary>
            Returns the reference to the wrapped list.
            </summary>
        </member>
        <member name="M:C1.Schedule.DateList.Contains(System.DateTime)">
            <summary>
            Returns true if specified item exists in the wrapped list.
            </summary>
            <param name="item">An item to search for.</param>
            <returns>True if item exists in the wrapped list.</returns>
        </member>
        <member name="M:C1.Schedule.DateList.Contains(System.DateTime[])">
            <summary>
            Returns true if either of specified items exists in the wrapped list.
            </summary>
            <param name="days">An array of <see cref="T:System.DateTime"/> values to search for.</param>
            <returns>True if at least one of specified items exists in the wrapped list.</returns>
        </member>
        <member name="M:C1.Schedule.DateList.Contains(System.Collections.Generic.IList{System.DateTime})">
            <summary>
            Returns true if either of specified items exists in the wrapped list.
            </summary>
            <param name="days">A list of <see cref="T:System.DateTime"/> values to search for.</param>
            <returns>True if at least one of specified items exists in the wrapped list.</returns>
        </member>
        <member name="M:C1.Schedule.DateList.GetPreviousDate(System.DateTime)">
            <summary>
            Returns the first item that is less than specified one.
            </summary>
            <param name="item">An item to search for.</param>
            <returns>The first item that is less than specified one; 
            or DateTime.MinValue if such item is not found.</returns>
        </member>
        <member name="M:C1.Schedule.DateList.GetNextDate(System.DateTime)">
            <summary>
            Returns the first item that is greater than specified one.
            </summary>
            <param name="item">An item to search for.</param>
            <returns>The first item that is greater than specified one; 
            or DateTime.MaxValue if such item is not found.</returns>
        </member>
        <member name="T:C1.Schedule.C1BrushStyleEnum">
            <summary>
            Specifies the different patterns available for brushes.
            </summary>
        </member>
        <member name="F:C1.Schedule.C1BrushStyleEnum.Transparent">
            <summary>
            Represents transparent brush.
            </summary>
        </member>
        <member name="F:C1.Schedule.C1BrushStyleEnum.Solid">
            <summary>
            Represents solid brush.
            </summary>
        </member>
        <member name="F:C1.Schedule.C1BrushStyleEnum.BackwardDiagonal">
            <summary>
            A pattern of lines on a diagonal from upper right to lower left.
            </summary>
        </member>
        <member name="F:C1.Schedule.C1BrushStyleEnum.Cross">
            <summary>
            Specifies horizontal and vertical lines that cross.  
            </summary>
        </member>
        <member name="F:C1.Schedule.C1BrushStyleEnum.DiagonalCross">
            <summary>
            A pattern of crisscross diagonal lines. 
            </summary>
        </member>
        <member name="F:C1.Schedule.C1BrushStyleEnum.ForwardDiagonal">
            <summary>
            A pattern of lines on a diagonal from upper left to lower right. 
            </summary>
        </member>
        <member name="F:C1.Schedule.C1BrushStyleEnum.Horizontal">
            <summary>
            A pattern of horizontal lines. 
            </summary>
        </member>
        <member name="F:C1.Schedule.C1BrushStyleEnum.Vertical">
            <summary>
            A pattern of vertical lines. 
            </summary>
        </member>
        <member name="F:C1.Schedule.C1BrushStyleEnum.Wave">
            <summary>
            Specifies horizontal lines that are composed of tildes. 
            </summary>
        </member>
        <member name="F:C1.Schedule.C1BrushStyleEnum.ZigZag">
            <summary>
            Specifies horizontal lines that are composed of zigzags. 
            </summary>
        </member>
        <member name="F:C1.Schedule.C1BrushStyleEnum.Percent20">
            <summary>
             Specifies a 20-percent hatch. The ratio of foreground color to background color is 20:80.
            </summary>
        </member>
        <member name="T:C1.Schedule.C1Brush">
            <summary>
            The base wrapper class for brushes. Only for serialization/deserialization purposes.
            </summary>
        </member>
        <member name="M:C1.Schedule.C1Brush.#ctor">
            <summary>
            Creates the new <see cref="T:C1.Schedule.C1Brush"/> object.
            </summary>
        </member>
        <member name="P:C1.Schedule.C1Brush.ForeColor">
            <summary>
            Gets or sets the foreground color.
            </summary>
        </member>
        <member name="P:C1.Schedule.C1Brush.BackColor">
            <summary>
            Gets or sets the background color.
            </summary>
        </member>
        <member name="P:C1.Schedule.C1Brush.Style">
            <summary>
            Gets or sets the brush style.
            </summary>
        </member>
        <member name="M:C1.Schedule.C1Brush.OnPropertyChanged">
            <summary>
            This method is called on any property changes. Override it in derived classes for custom handling.
            </summary>
        </member>
        <member name="M:C1.Schedule.C1Brush.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Special constructor for de-serialization.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/>.</param>
            <param name="context">The context information.</param>
        </member>
        <member name="M:C1.Schedule.C1Brush.GetARGBstring(System.Drawing.Color)">
            <summary>
            Returns string representation of color in ARGB format.
            </summary>
            <param name="color">The <see cref="T:System.Drawing.Color"/>value.</param>
            <returns>The string representation of color in ARGB format</returns>
        </member>
        <member name="M:C1.Schedule.C1Brush.ParseARGBString(System.String)">
            <summary>
            Parses ARGB string and returns the <see cref="T:System.Drawing.Color"/> value.
            </summary>
            <param name="str">The string to parse.</param>
            <returns>The <see cref="T:System.Drawing.Color"/>value.</returns>
        </member>
        <member name="M:C1.Schedule.C1Brush.GetColor(System.UInt32)">
            <summary>
            Gets a <see cref="T:System.Drawing.Color"/> value based on its integer representation.
            The byte ordering in the <paramref name="color"/> is ARGB, for example
            the constant 0x01020304 represents the color with the following components:
            A = 0x01
            R = 0x02
            G = 0x03
            B = 0x04
            </summary>
            <param name="color">A value specifying the 32-bit ARGB value.</param>
            <returns>The <see cref="T:System.Drawing.Color"/>value.</returns>
        </member>
        <member name="T:C1.Schedule.Label">
            <summary>
            The <see cref="T:C1.Schedule.Label"/> class represents the label which can be
            associated with the <see cref="T:C1.Schedule.Appointment"/> object. 
            </summary>
        </member>
        <member name="M:C1.Schedule.Label.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.Label"/> class with the specified key.
            </summary>
            <param name="key">The <see cref="T:System.Int32"/> value which should be used as label key.</param>
            <remarks>Use this constructor if your business logic requires setting custom key value.
            Make sure that you use the correct constructor overload (with integer or Guid key value) and that key value is unique.</remarks>
        </member>
        <member name="M:C1.Schedule.Label.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.Label"/> class with the specified key.
            </summary>
            <param name="key">The <see cref="T:System.Guid"/> value which should be used as label key.</param>
            <remarks>Use this constructor if your business logic requires setting custom key value.
            Make sure that you use the correct constructor overload (with integer or Guid key value) and that key value is unique.</remarks>
        </member>
        <member name="M:C1.Schedule.Label.#ctor">
            <summary>
            Creates the new <see cref="T:C1.Schedule.Label"/> object with default parameters.
            </summary>
        </member>
        <member name="M:C1.Schedule.Label.#ctor(System.String)">
            <summary>
            Creates custom <see cref="T:C1.Schedule.Label"/> object with specified text.
            </summary>
            <param name="text">The text of the label.</param>
        </member>
        <member name="M:C1.Schedule.Label.#ctor(System.String,System.String)">
            <summary>
            Creates custom <see cref="T:C1.Schedule.Label"/> object with specified text and menu caption.
            </summary>
            <param name="text">The text of the label.</param>
            <param name="menuCaption">The menu caption for displaying label in dialogs.</param>
        </member>
        <member name="M:C1.Schedule.Label.#ctor(System.Drawing.Color,System.String,System.String)">
            <summary>
            Creates custom <see cref="T:C1.Schedule.Label"/> object with specified color, text and menu caption.
            </summary>
            <param name="color">The color of the label.</param>
            <param name="text">The text of the label.</param>
            <param name="menuCaption">The menu caption for displaying label in dialogs.</param>
        </member>
        <member name="M:C1.Schedule.Label.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Special constructor for deserialization.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/>.</param>
            <param name="context">The context information.</param>
        </member>
        <member name="T:C1.Schedule.LabelCollection">
            <summary>
            The <see cref="T:C1.Schedule.LabelCollection"/> is a collection of <see cref="T:C1.Schedule.Label"/> 
            objects which represents all available labels in C1Schedule object model.
            </summary> 
            <remarks>
            <para>By default it contains the following set of predefined labels:</para>
            <list type="bullet">
            <item><term></term><description>None</description></item>
            <item><term></term><description>Important</description></item>
            <item><term></term><description>Business</description></item>
            <item><term></term><description>Personal</description></item>
            <item><term></term><description>Vacation</description></item>
            <item><term></term><description>Must Attend</description></item>
            <item><term></term><description>Deadline</description></item>
            <item><term></term><description>Travel Required</description></item>
            <item><term></term><description>Needs Preparation</description></item>
            <item><term></term><description>Birthday</description></item>
            <item><term></term><description>Anniversary</description></item>
            <item><term></term><description>Phone Call</description></item>
            <para>It also allows adding of custom labels.</para>
            </list>
            </remarks>
        </member>
        <member name="F:C1.Schedule.LabelCollection.NoneLabelId">
            <summary>
            Defines Id of the None label.
            </summary>
        </member>
        <member name="M:C1.Schedule.LabelCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.LabelCollection"/> class.
            </summary>
        </member>
        <member name="M:C1.Schedule.LabelCollection.LoadDefaults">
            <summary>
            Restores the collection to its default state.
            </summary>
            <remarks>The <see cref="M:C1.Schedule.LabelCollection.LoadDefaults"/> method removes all 
            custom labels from the collection and leaves only the standard ones.
            </remarks>
        </member>
        <member name="M:C1.Schedule.LabelCollection.RefreshDefaults">
            <summary>
            Refreshes default values honoring current culture settings.
            </summary>
        </member>
        <member name="T:C1.Schedule.LabelList">
            <summary>
            The <see cref="T:C1.Schedule.LabelList"/> is a list of <see cref="T:C1.Schedule.Label"/> objects.
            Only objects existing in the owning <see cref="T:C1.Schedule.LabelCollection"/> object 
            may be added to this list.
            </summary>
        </member>
        <member name="T:C1.Schedule.RecurrenceTypeEnum">
            <summary>
            Determines the types of recurrent appointments.
            </summary>
        </member>
        <member name="F:C1.Schedule.RecurrenceTypeEnum.Daily">
            <summary>
            The recurring appointment reoccurs on a daily basis.
            </summary>
        </member>
        <member name="F:C1.Schedule.RecurrenceTypeEnum.Workdays">
            <summary>
            The recurring appointment reoccurs every working day.
            </summary>
        </member>
        <member name="F:C1.Schedule.RecurrenceTypeEnum.Monthly">
            <summary>
            The recurring appointment reoccurs on a monthly basis. 
            </summary>
        </member>
        <member name="F:C1.Schedule.RecurrenceTypeEnum.MonthlyNth">
            <summary>
            The recurring appointment reoccurs every N months. 
            </summary>
        </member>
        <member name="F:C1.Schedule.RecurrenceTypeEnum.Weekly">
            <summary>
            The recurring appointment reoccurs on a weekly basis.
            </summary>
        </member>
        <member name="F:C1.Schedule.RecurrenceTypeEnum.Yearly">
            <summary>
            The recurring appointment reoccurs on an yearly basis.
            </summary>
        </member>
        <member name="F:C1.Schedule.RecurrenceTypeEnum.YearlyNth">
            <summary>
            The recurring appointment reoccurs every N years.
            </summary>
        </member>
        <member name="T:C1.Schedule.WeekDaysEnum">
            <summary>
            Determines the set of days and groups of days for recurrence patterns. 
            </summary>
        </member>
        <member name="F:C1.Schedule.WeekDaysEnum.None">
            <summary>
            No specific value; the actual value is obtained from 
            the root <see cref="T:C1.Schedule.Appointment"/> object. 
            </summary>
        </member>
        <member name="F:C1.Schedule.WeekDaysEnum.Sunday">
            <summary>
            Specifies Sunday.
            </summary>
        </member>
        <member name="F:C1.Schedule.WeekDaysEnum.Monday">
            <summary>
            Specifies Monday.
            </summary>
        </member>
        <member name="F:C1.Schedule.WeekDaysEnum.Tuesday">
            <summary>
            Specifies Tuesday. 
            </summary>
        </member>
        <member name="F:C1.Schedule.WeekDaysEnum.Wednesday">
            <summary>
            Specifies Wednesday.
            </summary>
        </member>
        <member name="F:C1.Schedule.WeekDaysEnum.Thursday">
            <summary>
            Specifies Thursday.
            </summary>
        </member>
        <member name="F:C1.Schedule.WeekDaysEnum.Friday">
            <summary>
            Specifies Friday.
            </summary>
        </member>
        <member name="F:C1.Schedule.WeekDaysEnum.Saturday">
            <summary>
            Specifies Saturday.
            </summary>
        </member>
        <member name="F:C1.Schedule.WeekDaysEnum.WeekendDays">
            <summary>
            Specifies Saturday and Sunday (or what ever days according 
            to the settings of the C1Schedule).
            </summary>
        </member>
        <member name="F:C1.Schedule.WeekDaysEnum.WorkDays">
            <summary>
            Specifies work days (all days except weekend).
            </summary>
        </member>
        <member name="F:C1.Schedule.WeekDaysEnum.EveryDay">
            <summary>
            Specifies every day of the week.
            </summary>
        </member>
        <member name="T:C1.Schedule.WeekOfMonthEnum">
            <summary>
            Determines the week in a month in which the appointment will occur.
            </summary>
        </member>
        <member name="F:C1.Schedule.WeekOfMonthEnum.First">
            <summary>
            The recurring appointment will occur on the specified 
            day or days of the first week in the month. 
            </summary>
        </member>
        <member name="F:C1.Schedule.WeekOfMonthEnum.Second">
            <summary>
            The recurring appointment will occur on the specified 
            day or days of the second week in the month. 
            </summary>
        </member>
        <member name="F:C1.Schedule.WeekOfMonthEnum.Third">
            <summary>
            The recurring appointment will occur on the specified 
            day or days of the third week in the month. 
            </summary>
        </member>
        <member name="F:C1.Schedule.WeekOfMonthEnum.Fourth">
            <summary>
            The recurring appointment will occur on the specified 
            day or days of the fourth week in the month. 
            </summary>
        </member>
        <member name="F:C1.Schedule.WeekOfMonthEnum.Last">
            <summary>
            The recurring appointment will occur on the specified 
            day or days of the last week in the month. 
            </summary>
        </member>
        <member name="T:C1.Schedule.RecurrencePattern">
            <summary>
            The <see cref="T:C1.Schedule.RecurrencePattern"/> class contains information 
            that describes the recurrence pattern and range 
            of the associated <see cref="T:C1.Schedule.Appointment"/> object. 
            </summary>
        </member>
        <member name="M:C1.Schedule.RecurrencePattern.OnPropertyChanged(System.String)">
            <summary>
            
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="P:C1.Schedule.RecurrencePattern.Info">
            <summary>
            Gets or sets the <see cref="T:C1.Schedule.CalendarInfo"/> defining calendar settings.
            </summary>
        </member>
        <member name="P:C1.Schedule.RecurrencePattern.ParentAppointment">
            <summary>
            Gets the <see cref="T:C1.Schedule.Appointment"/> object which represents
            the master appointment for this <see cref="T:C1.Schedule.RecurrencePattern"/> object.
            </summary>
        </member>
        <member name="P:C1.Schedule.RecurrencePattern.Description">
            <summary>
            Gets the human-readable description of the <see cref="T:C1.Schedule.RecurrencePattern"/> object.
            </summary>
        </member>
        <member name="M:C1.Schedule.RecurrencePattern.GetDescription(System.Globalization.CultureInfo)">
            <summary>
            Gets the human-readable description of the <see cref="T:C1.Schedule.RecurrencePattern"/> object
            according to the specified culture.
            </summary>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> object used for getting calendar specific strings.</param>
            <returns>The <see cref="T:System.String"/> value described the <see cref="T:C1.Schedule.RecurrencePattern"/> object.</returns>
        </member>
        <member name="M:C1.Schedule.RecurrencePattern.GetDescription(C1.Schedule.CalendarInfo)">
            <summary>
            Gets the human-readable description of the <see cref="T:C1.Schedule.RecurrencePattern"/> object
            according to the specified <see cref="T:C1.Schedule.CalendarInfo"/> object.
            Use this method instead of <see cref="P:C1.Schedule.RecurrencePattern.Description"/> property if the <see cref="T:C1.Schedule.RecurrencePattern"/> 
            object does not belong to any <see cref="!:C1Schedule"/> control.
            </summary>
            <param name="calendarInfo">The <see cref="T:C1.Schedule.CalendarInfo"/> object used for getting calendar specific strings.</param>
            <returns>The <see cref="T:System.String"/> value described the <see cref="T:C1.Schedule.RecurrencePattern"/> object.</returns>
            <remarks>If the <see cref="T:C1.Schedule.RecurrencePattern"/> object does not belong to the <see cref="!:C1Schedule"/> control,
            its Description property will return the default description using current user culture and calendar settings.</remarks>
        </member>
        <member name="P:C1.Schedule.RecurrencePattern.RecurrenceType">
            <summary>
            Gets or sets the <see cref="T:C1.Schedule.RecurrenceTypeEnum"/> value
            determining the type of recurrence (daily, monthly, etc.).
            Default value is RecurrenceTypeEnum.Weekly.
            </summary>
        </member>
        <member name="P:C1.Schedule.RecurrencePattern.Interval">
             <summary>
             Gets or sets the <see cref="T:System.Int32"/> value specifying 
             the interval between occurrences of the recurrence. 
             The <see cref="P:C1.Schedule.RecurrencePattern.Interval"/> property works in conjunction with 
             the <see cref="P:C1.Schedule.RecurrencePattern.RecurrenceType"/> property to determine the cycle of the recurrence. 
             The maximum allowable value is 99 for weekly patterns and 999 for daily patterns.
             The default value is 1.
             </summary>
            <remarks>For example, if the <see cref="P:C1.Schedule.RecurrencePattern.RecurrenceType"/> is set 
             to <see cref="F:C1.Schedule.RecurrenceTypeEnum.Daily"/>, and the <see cref="P:C1.Schedule.RecurrencePattern.Interval"/> is set to 3, 
             the recurrence will occur every third day.</remarks> 
        </member>
        <member name="P:C1.Schedule.RecurrencePattern.EndTime">
            <summary>
            Gets or sets the <see cref="T:System.DateTime"/> value indicating 
            the end time for the given occurrence of the recurrence pattern. 
            </summary>
        </member>
        <member name="P:C1.Schedule.RecurrencePattern.StartTime">
            <summary>
            Gets or sets the <see cref="T:System.DateTime"/> value indicating 
            the start time for the given occurrence of the recurrence pattern. 
            </summary>
        </member>
        <member name="P:C1.Schedule.RecurrencePattern.Duration">
            <summary>
            Gets or sets the <see cref="T:System.TimeSpan"/> value indicating 
            the duration of each occurrence in the recurrence pattern.
            </summary>
        </member>
        <member name="P:C1.Schedule.RecurrencePattern.PatternStartDate">
            <summary>
            Gets or sets the <see cref="T:System.DateTime"/> value indicating 
            the start date of the recurrence pattern. 
            </summary>
        </member>
        <member name="P:C1.Schedule.RecurrencePattern.PatternEndDate">
            <summary>
            Gets or sets the <see cref="T:System.DateTime"/> value indicating 
            the end date of the recurrence pattern. 
            </summary>
            <remarks>This property is optional but must be coordinated 
            with other properties when setting up a recurrence pattern. 
            If this property or the <see cref="P:C1.Schedule.RecurrencePattern.Occurrences"/> property is set, 
            the pattern is considered to be finite, and the <see cref="P:C1.Schedule.RecurrencePattern.NoEndDate"/> 
            property is false. 
            If neither <see cref="P:C1.Schedule.RecurrencePattern.PatternEndDate"/> nor <see cref="P:C1.Schedule.RecurrencePattern.Occurrences"/> is set, 
            the pattern is considered infinite and <see cref="P:C1.Schedule.RecurrencePattern.NoEndDate"/> is true. 
            The <see cref="P:C1.Schedule.RecurrencePattern.Interval"/> property must be set before 
            setting <see cref="P:C1.Schedule.RecurrencePattern.PatternEndDate"/>.</remarks>
        </member>
        <member name="P:C1.Schedule.RecurrencePattern.Occurrences">
            <summary>
            Gets or sets the number of occurrences for the recurrence pattern.
            This property allows the definition of a recurrence pattern that 
            is only valid for the specified number of subsequent occurrences. 
            For example, you can set this property to 10 for a formal training 
            course that will be held on the next ten Thursday evenings.
            The default value is 0.
            </summary>
            <remarks>This property must be coordinated with other properties 
            when setting up a recurrence pattern. 
            If the <see cref="P:C1.Schedule.RecurrencePattern.PatternEndDate"/> property 
            or the <see cref="P:C1.Schedule.RecurrencePattern.Occurrences"/> property is set, the pattern 
            is considered to be finite and the <see cref="P:C1.Schedule.RecurrencePattern.NoEndDate"/> property is false. 
            If neither <see cref="P:C1.Schedule.RecurrencePattern.PatternEndDate"/> nor <see cref="P:C1.Schedule.RecurrencePattern.Occurrences"/> is set, 
            the pattern is considered infinite and <see cref="P:C1.Schedule.RecurrencePattern.NoEndDate"/> is true.</remarks>
        </member>
        <member name="P:C1.Schedule.RecurrencePattern.Instance">
            <summary>
            Get or sets the <see cref="T:C1.Schedule.WeekOfMonthEnum"/> value specifying 
            the count for which the recurrence pattern is valid for a given interval. 
            This property is only valid for recurrences of 
            the <see cref="F:C1.Schedule.RecurrenceTypeEnum.MonthlyNth"/> and 
            <see cref="F:C1.Schedule.RecurrenceTypeEnum.YearlyNth"/> types and allows the definition 
            of a recurrence pattern that is only valid for the Nth occurrence, 
            such as "the 2nd Sunday in March" pattern. 
            The default value is WeekOfMonthEnum.First.
            </summary>
        </member>
        <member name="P:C1.Schedule.RecurrencePattern.DayOfWeekMask">
            <summary>
            Gets or sets the <see cref="T:C1.Schedule.WeekDaysEnum"/> value representing the mask 
            for week days on which the recurring appointment occurs. 
            Monthly and yearly patterns are only valid for a single day. 
            Weekly patterns are only valid as the Or of the <see cref="P:C1.Schedule.RecurrencePattern.DayOfWeekMask"/>.
            The default value is 0.
            </summary>
            <remarks>
            When the <see cref="P:C1.Schedule.RecurrencePattern.RecurrenceType"/> property is set to 
              <see cref="F:C1.Schedule.RecurrenceTypeEnum.Daily"/>, the <see cref="P:C1.Schedule.RecurrencePattern.DayOfWeekMask"/> property 
              can only be set to <see cref="F:C1.Schedule.WeekDaysEnum.EveryDay"/>; setting the property 
              to any other value will result in an exception.
            When the <see cref="P:C1.Schedule.RecurrencePattern.RecurrenceType"/> property is set to 
              <see cref="F:C1.Schedule.RecurrenceTypeEnum.Workdays"/>, the <see cref="P:C1.Schedule.RecurrencePattern.DayOfWeekMask"/> property 
              can only be set to <see cref="F:C1.Schedule.WeekDaysEnum.WorkDays"/>; setting the property 
              to any other value will result in an exception.
            When the <see cref="P:C1.Schedule.RecurrencePattern.RecurrenceType"/> property is set to 
              <see cref="F:C1.Schedule.RecurrenceTypeEnum.Weekly"/>, the <see cref="P:C1.Schedule.RecurrencePattern.DayOfWeekMask"/> property 
              cannot be set to <see cref="F:C1.Schedule.WeekDaysEnum.None"/>; doing so will result 
              in an exception being thrown.
            When the <see cref="P:C1.Schedule.RecurrencePattern.RecurrenceType"/> property is set to 
              <see cref="F:C1.Schedule.RecurrenceTypeEnum.Monthly"/> or <see cref="F:C1.Schedule.RecurrenceTypeEnum.Yearly"/>
              the <see cref="P:C1.Schedule.RecurrencePattern.DayOfWeekMask"/> property is not applicable.</remarks>
        </member>
        <member name="P:C1.Schedule.RecurrencePattern.DayOfMonth">
            <summary>
            Gets or sets the number of the day in its respective month on which 
            each occurrence will occur. Applicable only when the <see cref="P:C1.Schedule.RecurrencePattern.RecurrenceType"/> 
            property is set to <see cref="F:C1.Schedule.RecurrenceTypeEnum.Monthly"/> 
            or <see cref="F:C1.Schedule.RecurrenceTypeEnum.Yearly"/>.
            The default value is 1.
            </summary>
        </member>
        <member name="P:C1.Schedule.RecurrencePattern.MonthOfYear">
            <summary>
            Gets or sets the value indicating which month of the year is valid 
            for the specified recurrence pattern. Can be a number from 1 to 12.
            This property is only valid for recurrence patterns whose <see cref="P:C1.Schedule.RecurrencePattern.RecurrenceType"/> 
            property is set to <see cref="F:C1.Schedule.RecurrenceTypeEnum.YearlyNth"/> 
            or <see cref="F:C1.Schedule.RecurrenceTypeEnum.Yearly"/>.
            The default value is 1.
            </summary>
        </member>
        <member name="P:C1.Schedule.RecurrencePattern.NoEndDate">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value indicating if
            the recurrence pattern is endless.
            The default value is True.
            </summary>
            <remarks>This property must be coordinated with other properties when 
            setting up a recurrence pattern. If the <see cref="P:C1.Schedule.RecurrencePattern.PatternEndDate"/> property 
            or the <see cref="P:C1.Schedule.RecurrencePattern.Occurrences"/> property is set, the pattern is considered 
            to be finite and the <see cref="P:C1.Schedule.RecurrencePattern.NoEndDate"/> property is false. 
            If neither <see cref="P:C1.Schedule.RecurrencePattern.PatternEndDate"/> nor <see cref="P:C1.Schedule.RecurrencePattern.Occurrences"/> is set, 
            the pattern is considered infinite and <see cref="P:C1.Schedule.RecurrencePattern.NoEndDate"/> is true.</remarks>
        </member>
        <member name="P:C1.Schedule.RecurrencePattern.Exceptions">
            <summary>
            Gets the <see cref="T:C1.Schedule.AppointmentList"/> object which holds the list 
            of <see cref="T:C1.Schedule.Appointment"/> objects that define the exceptions to that series 
            of appointments. <see cref="T:C1.Schedule.Appointment"/> objects are added to 
            the <see cref="P:C1.Schedule.RecurrencePattern.Exceptions"/> whenever a property in the corresponding 
            <see cref="T:C1.Schedule.Appointment"/> object is altered.
            </summary>
        </member>
        <member name="P:C1.Schedule.RecurrencePattern.RemovedOccurrences">
            <summary>
            Gets the <see cref="T:C1.Schedule.AppointmentList"/> object which holds the list 
            of <see cref="T:C1.Schedule.Appointment"/> objects removed from that series of appointments. 
            </summary>
        </member>
        <member name="M:C1.Schedule.RecurrencePattern.GetOccurrence(System.DateTime,C1.Schedule.CalendarInfo)">
            <summary>
            Returns a specific instance of the Appointment object on the specified date.
            </summary>
            <param name="startDate"></param>
            <param name="info">CalendarInfo</param>
            <returns></returns>
            <remarks>The GetOccurrence method generates an exception if no appointment 
            of that series exists on the specified date.</remarks>
        </member>
        <member name="M:C1.Schedule.RecurrencePattern.FromXml(System.Xml.XmlNode)">
            <summary>
            Reconstructs recurrence pattern properties from an <see cref="T:System.Xml.XmlNode"/>. 
            </summary>
            <param name="node"></param>
            <returns>True if pattern has been changed.</returns>
        </member>
        <member name="M:C1.Schedule.RecurrencePattern.FromXml(System.Xml.XmlReader)">
            <summary>
            Reconstructs recurrence pattern properties from an <see cref="T:System.Xml.XmlReader"/>. 
            </summary>
            <param name="reader"></param>
            <returns>True if pattern has been changed.</returns>
        </member>
        <member name="M:C1.Schedule.RecurrencePattern.ToXml(System.Xml.XmlWriter)">
            <summary>
            Creates an XML encoding of the recurrence pattern properties. 
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:C1.Schedule.RecurrencePattern.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Special constructor for deserialization.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/>.</param>
            <param name="context">The context information.</param>
        </member>
        <member name="M:C1.Schedule.RecurrencePattern.GetDaysOfWeek">
            <summary>
            Converts the <see cref="P:C1.Schedule.RecurrencePattern.DayOfWeekMask"/> property into the list of DayOfWeek constants.
            </summary>
            <returns>The <see cref="T:System.Collections.Generic.List`1"/> object.</returns>
        </member>
        <member name="M:C1.Schedule.RecurrencePattern.Copy">
            <summary>
            Creates the copy of the <see cref="T:C1.Schedule.RecurrencePattern"/> object.
            </summary>
            <returns>The new <see cref="T:C1.Schedule.RecurrencePattern"/> instance.</returns>
        </member>
        <member name="M:C1.Schedule.RecurrencePattern.SetDirty">
            <summary>
            Specifies that the current recurrence pattern has been changed and should invalidate properties.
            </summary>
        </member>
        <member name="M:C1.Schedule.RecurrencePattern.SetDirty(System.Boolean)">
            <summary>
            Specifies that the current recurrence pattern has been changed and should invalidate properties.
            </summary>
            <param name="cleanupExceptions">Specifies whether method should clean all information about exceptions and removed occurrences.</param>
        </member>
        <member name="T:C1.Schedule.Reminder">
            <summary>
            The <see cref="T:C1.Schedule.Reminder"/> class represents an object which allows users to keep track 
            of upcoming appointments by scheduling a pop-up dialog box to appear at a given time. 
            </summary>
        </member>
        <member name="M:C1.Schedule.Reminder.#ctor(C1.Schedule.Appointment)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.Reminder"/> class.
            </summary>
            <param name="owner"></param>
        </member>
        <member name="P:C1.Schedule.Reminder.ParentAppointment">
            <summary>
            Gets the owning <see cref="T:C1.Schedule.Appointment"/> object. 
            </summary>
        </member>
        <member name="P:C1.Schedule.Reminder.Caption">
            <summary>
            Gets the <see cref="T:System.String"/> value representing the window caption text 
            of the <see cref="T:C1.Schedule.Appointment"/> object which 
            the <see cref="T:C1.Schedule.Reminder"/> object is applied to.
            </summary>
        </member>
        <member name="P:C1.Schedule.Reminder.IsActive">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> value indicating that the <see cref="T:C1.Schedule.Reminder"/> object 
            is currently active (visible). 
            </summary>
        </member>
        <member name="P:C1.Schedule.Reminder.NextReminderDate">
            <summary>
            Gets the <see cref="T:System.DateTime"/> value indicating the next time the specified 
            reminder will occur. 
            </summary>
            <remarks>The <see cref="P:C1.Schedule.Reminder.NextReminderDate"/> property value changes every time 
            the object's <see cref="M:C1.Schedule.Reminder.Snooze(System.TimeSpan)"/> method is executed or when the user 
            clicks the Snooze button.</remarks>
        </member>
        <member name="P:C1.Schedule.Reminder.OriginalReminderDate">
            <summary>
            Gets the <see cref="T:System.DateTime"/> value specifying the original date and time 
            that the specified reminder is set to occur. 
            It is calculated using the following formula: 
            <see cref="P:C1.Schedule.Reminder.OriginalReminderDate"/> = <see cref="P:C1.Schedule.Appointment.Start"/> 
              - <see cref="P:C1.Schedule.Appointment.ReminderTimeBeforeStart"/>.
            </summary>
            <remarks>This value corresponds to the original date and time 
            value before the <see cref="M:C1.Schedule.Reminder.Snooze(System.TimeSpan)"/> method is executed or the user 
            clicks the Snooze button.</remarks>
        </member>
        <member name="M:C1.Schedule.Reminder.Snooze(System.TimeSpan)">
            <summary>
            The <see cref="M:C1.Schedule.Reminder.Snooze(System.TimeSpan)"/> method notifies the scheduler to defer the triggering 
            of a reminder by the specified interval.
            </summary>
            <param name="delay">The <see cref="T:System.TimeSpan"/>value specifying the interval
            of time to wait before displaying the reminder again.</param>
        </member>
        <member name="M:C1.Schedule.Reminder.Dismiss">
            <summary>
            Dismisses the current <see cref="T:C1.Schedule.Reminder"/> object.
            </summary>
        </member>
        <member name="M:C1.Schedule.Reminder.OnPropertyChanged(System.String)">
            <summary>
            
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="T:C1.Schedule.ReminderCollection">
            <summary>
            The <see cref="T:C1.Schedule.ReminderCollection"/> is a collection of all <see cref="T:C1.Schedule.Reminder"/> objects 
            that represents the reminders for all pending items.
            </summary>
            <remarks>Use the <see cref="P:C1.Schedule.C1ScheduleStorage.Reminders"/> property to get a reference  
            to the Reminders collection. 
            Reminders are created programmatically when a new <see cref="T:C1.Schedule.Appointment"/> object 
            is created with a reminder. For example, a reminder is created when 
            an <see cref="T:C1.Schedule.Appointment"/> object is created and the <see cref="P:C1.Schedule.Appointment.ReminderSet"/>
            property is set to true. 
            </remarks>
        </member>
        <member name="E:C1.Schedule.ReminderCollection.ReminderAdd">
            <summary>
            Occurs after a reminder is added.
            </summary>
        </member>
        <member name="E:C1.Schedule.ReminderCollection.ReminderChange">
            <summary>
            Occurs after a reminder has been modified.
            </summary>
        </member>
        <member name="E:C1.Schedule.ReminderCollection.ReminderFire">
            <summary>
            Occurs before the reminder is executed.
            </summary>
        </member>
        <member name="E:C1.Schedule.ReminderCollection.ReminderSnooze">
            <summary>
            Occurs when a reminder is dismissed using the Snooze button.
            </summary>
        </member>
        <member name="E:C1.Schedule.ReminderCollection.ReminderRemove">
            <summary>
            Occurs when a <see cref="T:C1.Schedule.Reminder"/>  object has been removed from the collection.
            </summary>
            <remarks>A reminder can be removed from the Reminders collection 
            by any of the following means:
            - The Reminders collection's Remove method. 
            - The Reminder object's Dismiss method. 
            - When the user clicks the Dismiss button. 
            - When a user turns off a meeting reminder from within the associated item.
            - When a user deletes an item that contains a reminder. </remarks>
        </member>
        <member name="M:C1.Schedule.ReminderCollection.#ctor">
            <summary>
            Initialize new <see cref="T:C1.Schedule.ReminderCollection"/> object.
            </summary>
        </member>
        <member name="M:C1.Schedule.ReminderCollection.UpdateAll">
            <summary>
            Updates all reminders. 
            </summary>
            <remarks>This method unregisters all wait handles and re-creates them again honoring changes in system time or parent appointment properties.</remarks>
        </member>
        <member name="M:C1.Schedule.ReminderCollection.InsertItem(System.Int32,C1.Schedule.Reminder)">
            <summary>
            Overrides default behavior.
            </summary>
            <param name="index">The zero-based index of the item.</param>
            <param name="item">The <see cref="T:C1.Schedule.Reminder"/> object to insert.</param>
        </member>
        <member name="M:C1.Schedule.ReminderCollection.RemoveItem(System.Int32)">
            <summary>
            Overrides default behavior.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:C1.Schedule.ReminderCollection.ClearItems">
            <summary>
            Overrides default behavior.
            </summary>
        </member>
        <member name="M:C1.Schedule.ReminderCollection.SetItem(System.Int32,C1.Schedule.Reminder)">
            <summary>
            Overrides default behavior.
            </summary>
            <param name="index">The zero-based index of the item.</param>
            <param name="item">The <see cref="T:C1.Schedule.Reminder"/> object to set.</param>
        </member>
        <member name="M:C1.Schedule.ReminderCollection.WaitProc(System.Object,System.Boolean)">
            <summary>
            Method to be called when it is time to show reminder.
            </summary>
            <param name="state"></param>
            <param name="timedOut"></param>
        </member>
        <member name="M:C1.Schedule.ReminderCollection.Dispose">
            <summary>
            Releases all unmanaged resources.
            </summary>
        </member>
        <member name="T:C1.Schedule.ReminderEventArgs">
            <summary>
            Describes event data for <see cref="P:C1.Schedule.ReminderEventArgs.Reminder"/> object events.
            </summary>
        </member>
        <member name="M:C1.Schedule.ReminderEventArgs.#ctor(C1.Schedule.Reminder)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.ReminderEventArgs"/> 
            class with the specified <see cref="P:C1.Schedule.ReminderEventArgs.Reminder"/> object. 
            </summary>
            <param name="reminder">The <see cref="P:C1.Schedule.ReminderEventArgs.Reminder"/> object.</param>
        </member>
        <member name="P:C1.Schedule.ReminderEventArgs.Reminder">
            <summary>
            Gets the reminder which the event was raised for. 
            </summary>
        </member>
        <member name="T:C1.Schedule.CancelReminderEventHandler">
            <summary>
            Delegate for handling the cancelable event involving a single <see cref="T:C1.Schedule.Reminder"/> object. 
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:C1.Schedule.CancelReminderEventArgs"/> 
            that contains the event data.</param>
        </member>
        <member name="T:C1.Schedule.CancelReminderEventArgs">
            <summary>
            Describes event data for cancelable Reminder events.
            </summary>
        </member>
        <member name="M:C1.Schedule.CancelReminderEventArgs.#ctor(C1.Schedule.Reminder)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.CancelReminderEventArgs"/>
            class with the specified <see cref="P:C1.Schedule.CancelReminderEventArgs.Reminder"/> object. 
            </summary>
            <param name="reminder">The <see cref="T:C1.Schedule.Reminder"/> object.</param>
        </member>
        <member name="P:C1.Schedule.CancelReminderEventArgs.Reminder">
            <summary>
            Gets the reminder which the event was raised for. 
            </summary>
        </member>
        <member name="P:C1.Schedule.CancelReminderEventArgs.Cancel">
            <summary>
            Set to true to cancel the operation.
            </summary>
        </member>
        <member name="T:C1.Schedule.Resource">
            <summary>
            The <see cref="T:C1.Schedule.Resource"/> class represents the resource which can be
            associated with the <see cref="T:C1.Schedule.Appointment"/> object. 
            </summary>
        </member>
        <member name="M:C1.Schedule.Resource.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.Resource"/> class with the specified key.
            </summary>
            <param name="key">The <see cref="T:System.Int32"/> value which should be used as resource key.</param>
            <remarks>Use this constructor if your business logic requires setting custom key value.
            Make sure that you use the correct constructor overload (with integer or Guid key value) and that key value is unique.</remarks>
        </member>
        <member name="M:C1.Schedule.Resource.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.Resource"/> class with the specified key.
            </summary>
            <param name="key">The <see cref="T:System.Guid"/> value which should be used as resource key.</param>
            <remarks>Use this constructor if your business logic requires setting custom key value.
            Make sure that you use the correct constructor overload (with integer or Guid key value) and that key value is unique.</remarks>
        </member>
        <member name="M:C1.Schedule.Resource.#ctor">
            <summary>
            Creates the new <see cref="T:C1.Schedule.Resource"/> object.
            </summary>
        </member>
        <member name="M:C1.Schedule.Resource.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Special constructor for deserialization.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/>.</param>
            <param name="context">The context information.</param>
        </member>
        <member name="T:C1.Schedule.ResourceCollection">
            <summary>
            The <see cref="T:C1.Schedule.ResourceCollection"/> is a collection of <see cref="T:C1.Schedule.Resource"/> 
            objects which represents all available resources in C1Schedule object model.
            </summary>
        </member>
        <member name="M:C1.Schedule.ResourceCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.ResourceCollection"/> class.
            </summary>
        </member>
        <member name="T:C1.Schedule.ResourceList">
            <summary>
            The <see cref="T:C1.Schedule.ResourceList"/> is a list of <see cref="T:C1.Schedule.Resource"/> objects.
            Only objects existing in the owning <see cref="T:C1.Schedule.ResourceCollection"/> object 
            may be added to this list.
            Use the <see cref="T:C1.Schedule.ResourceList"/> to associate the set of <see cref="T:C1.Schedule.Resource"/> objects 
            with an <see cref="T:C1.Schedule.Appointment"/> object.
            </summary>
        </member>
        <member name="M:C1.Schedule.ResourceList.#ctor(C1.Schedule.ResourceCollection)">
            <summary>
            Initializes the new instance of the <see cref="T:C1.Schedule.ResourceList"/> class.
            </summary>
            <param name="owner">The owning <see cref="T:C1.Schedule.ResourceCollection"/> object.</param>
        </member>
        <member name="M:C1.Schedule.ResourceList.#ctor(C1.Schedule.ResourceList)">
            <summary>
            Initializes a copy of the specified <see cref="T:C1.Schedule.ResourceList"/> object.
            </summary>
            <param name="list">The <see cref="T:C1.Schedule.ResourceList"/> object.</param>
        </member>
        <member name="P:C1.Schedule.ResourceList.Owner">
            <summary>
            Gets the reference to the owning <see cref="T:C1.Schedule.ResourceCollection"/> object.
            </summary>
        </member>
        <member name="T:C1.Schedule.StatusTypeEnum">
            <summary>
            Determines the type of status.
            </summary>
        </member>
        <member name="F:C1.Schedule.StatusTypeEnum.Free">
            <summary>
            This status means that a person is in the office and available to others. 
            </summary>
        </member>
        <member name="F:C1.Schedule.StatusTypeEnum.Tentative">
            <summary>
            This status means that a person is in the office and tentatively available to others.
            </summary>
        </member>
        <member name="F:C1.Schedule.StatusTypeEnum.Busy">
            <summary>
            This status means that a person is in the office but unavailable to others.
            </summary>
        </member>
        <member name="F:C1.Schedule.StatusTypeEnum.OutOfOffice">
            <summary>
            This status means that a person is out of the office and unavailable to others.
            </summary>
        </member>
        <member name="F:C1.Schedule.StatusTypeEnum.Custom">
            <summary>
            This status represents all custom statuses added to the StatusCollection.
            </summary>
        </member>
        <member name="F:C1.Schedule.StatusTypeEnum.WorkingElsewhere">
            <summary>
            This status means that a person is working elsewhere.
            </summary>
        </member>
        <member name="T:C1.Schedule.Status">
            <summary>
            The <see cref="T:C1.Schedule.Status"/> class represents an availability status 
            for the <see cref="T:C1.Schedule.Appointment"/> object. 
            </summary>
        </member>
        <member name="M:C1.Schedule.Status.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.Status"/> class with the specified key.
            </summary>
            <param name="key">The <see cref="T:System.Int32"/> value which should be used as status key.</param>
            <remarks>Use this constructor if your business logic requires setting custom key value.
            Make sure that you use the correct constructor overload (with integer or Guid key value) and that key value is unique.</remarks>
        </member>
        <member name="M:C1.Schedule.Status.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.Status"/> class with the specified key.
            </summary>
            <param name="key">The <see cref="T:System.Guid"/> value which should be used as status key.</param>
            <remarks>Use this constructor if your business logic requires setting custom key value.
            Make sure that you use the correct constructor overload (with integer or Guid key value) and that key value is unique.</remarks>
        </member>
        <member name="M:C1.Schedule.Status.#ctor">
            <summary>
            Creates the new custom <see cref="T:C1.Schedule.Status"/> object with default parameters.
            </summary>
        </member>
        <member name="M:C1.Schedule.Status.#ctor(C1.Schedule.StatusTypeEnum)">
            <summary>
            Creates a new instance of the <see cref="T:C1.Schedule.Status"/> class 
            and initializes it with the specified type. 
            </summary>
            <param name="type">The <see cref="T:C1.Schedule.StatusTypeEnum"/> value.</param>
        </member>
        <member name="M:C1.Schedule.Status.#ctor(C1.Schedule.StatusTypeEnum,System.Globalization.CultureInfo)">
            <summary>
            Creates a new instance of the <see cref="T:C1.Schedule.Status"/> class 
            and initializes it with the specified type. 
            </summary>
            <param name="type">The <see cref="T:C1.Schedule.StatusTypeEnum"/> value.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> value.</param>
        </member>
        <member name="M:C1.Schedule.Status.#ctor(System.String)">
            <summary>
            Creates a new instance of the custom <see cref="T:C1.Schedule.Status"/> object with the specified text.
            </summary>
            <param name="text">The <see cref="T:System.String"/> value.</param>
        </member>
        <member name="M:C1.Schedule.Status.#ctor(System.String,System.String)">
            <summary>
            Creates the new custom <see cref="T:C1.Schedule.Status"/> object with specified text and menu caption.
            </summary>
            <param name="text">The <see cref="T:System.String"/> value.</param>
            <param name="menuCaption">The menu caption for displaying status in dialogs.</param>
        </member>
        <member name="M:C1.Schedule.Status.#ctor(System.Drawing.Color,System.String,System.String)">
            <summary>
            Creates the new custom <see cref="T:C1.Schedule.Status"/> object with specified color, 
            text and menu caption.
            </summary>
            <param name="color">The color which will be used for displaying status.</param>
            <param name="text">The <see cref="T:System.String"/> value.</param>
            <param name="menuCaption">The menu caption for displaying status in dialogs.</param>
        </member>
        <member name="M:C1.Schedule.Status.#ctor(System.Drawing.Color,System.String,System.String,C1.Schedule.C1Brush)">
            <summary>
            Creates the new custom <see cref="T:C1.Schedule.Status"/> object with specified parameters.
            </summary>
            <param name="color">The color which will be used for displaying status.</param>
            <param name="text">The <see cref="T:System.String"/> value.</param>
            <param name="menuCaption">The menu caption for displaying status in dialogs.</param>
            <param name="brush">The brush which will be used for displaying status.</param>
        </member>
        <member name="M:C1.Schedule.Status.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Special constructor for deserialization.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/>.</param>
            <param name="context">The context information.</param>
        </member>
        <member name="P:C1.Schedule.Status.StatusType">
            <summary>
            Gets the <see cref="T:C1.Schedule.StatusTypeEnum"/> value determining the type of the status. 
            </summary>
        </member>
        <member name="T:C1.Schedule.StatusCollection">
            <summary>
            The <see cref="T:C1.Schedule.StatusCollection"/> is a collection of <see cref="T:C1.Schedule.Status"/> 
            objects which represents all available statuses in C1Schedule object model.
            By default it contains the set of predefined statuses. 
            </summary>
        </member>
        <member name="M:C1.Schedule.StatusCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Schedule.StatusCollection"/> class.
            </summary>
        </member>
        <member name="M:C1.Schedule.StatusCollection.LoadDefaults">
            <summary>
            Restores the collection to its default state.
            </summary>
            <remarks>The <see cref="M:C1.Schedule.StatusCollection.LoadDefaults"/> method removes all the custom 
            appointment statuses from the collection and leaves only the standard ones.
            </remarks>
        </member>
        <member name="M:C1.Schedule.StatusCollection.RefreshDefaults">
            <summary>
            Refreshes default values honoring current culture settings.
            </summary>
        </member>
        <member name="P:C1.Schedule.StatusCollection.Item(C1.Schedule.StatusTypeEnum)">
            <summary>
            Gets the <see cref="T:C1.Schedule.Status"/> object specified by the appointment status type. 
            For custom statuses returns the first occurrence.
            If there is no such <see cref="T:C1.Schedule.Status"/> object in the collection, returns null.
            </summary>
            <param name="type">The <see cref="T:C1.Schedule.StatusTypeEnum"/> value.</param>
            <returns>The <see cref="T:C1.Schedule.Status"/> object.</returns>
        </member>
        <member name="T:C1.Schedule.StatusList">
            <summary>
            The <see cref="T:C1.Schedule.StatusList"/> is a list of <see cref="T:C1.Schedule.Status"/> objects.
            Only objects existing in the owning <see cref="T:C1.Schedule.StatusCollection"/> object 
            may be added to this list.
            </summary>
        </member>
        <member name="T:C1.Schedule.TimeZoneInfo">
            <summary>
            The <see cref="T:C1.Schedule.TimeZoneInfo"/> class determines time zone properties.
            It can be used for conversion to/from utc times and local times and respect DST.
            </summary>
        </member>
        <member name="P:C1.Schedule.TimeZoneInfo.TimeZones">
            <summary>
            Gets a list of all time zones defined in the local system.
            </summary>
        </member>
        <member name="P:C1.Schedule.TimeZoneInfo.TimeZoneNames">
            <summary>
            Gets a string array of display time zone names supported in the local system.
            </summary>
        </member>
        <member name="P:C1.Schedule.TimeZoneInfo.CurrentTimeZone">
            <summary>
            Gets the current time zone information.
            </summary>
        </member>
        <member name="P:C1.Schedule.TimeZoneInfo.StandardName">
            <summary>
            The time zone's name during 'standard' time (i.e. not daylight savings).
            </summary>
        </member>
        <member name="P:C1.Schedule.TimeZoneInfo.DaylightName">
            <summary>
            The time zone's name during daylight savings time (DST).
            </summary>
        </member>
        <member name="P:C1.Schedule.TimeZoneInfo.DisplayName">
            <summary>
            The time zone's display name (e.g. '(GMT-05:00) Eastern Time (US and Canada)').
            </summary>
        </member>
        <member name="P:C1.Schedule.TimeZoneInfo.StandardOffset">
            <summary>
            Gets the standard offset from UTC as a TimeSpan.
            </summary>
        </member>
        <member name="M:C1.Schedule.TimeZoneInfo.ToString">
            <summary>
            Gets display name of this time zone instance.
            </summary>
            <returns>Time zone standard name.</returns>
        </member>
        <member name="M:C1.Schedule.TimeZoneInfo.GetTimeZone(System.String)">
            <summary>
            Returns a TimeZoneInfo instance for the time zone with supplied name.
            </summary>
            <remarks>This method searches by standard, daylight and display names.</remarks>
            <param name="name">A name of the time zone to search for.</param>
            <returns>TimeZoneInfo instance if any; null otherwise.</returns>
        </member>
        <member name="M:C1.Schedule.TimeZoneInfo.ToLocalTime(System.DateTime)">
            <summary>
            Converts the value of the utc time to a local time in this time zone.
            </summary>
            <param name="dateTime">The UTC time to convert.</param>
            <returns>The local time.</returns>
            <exception cref="T:System.ArgumentException">The Kind property of dateTime is Local.</exception>
        </member>
        <member name="M:C1.Schedule.TimeZoneInfo.ToUniversalTime(System.DateTime)">
            <summary>
            Converts the value of the local time to UTC time.
            Note that there may be different possible interpretations at the daylight time boundaries.
            </summary>
            <param name="datetime">The local time to convert.</param>
            <returns>The UTC DateTime.</returns>
            <exception cref="T:System.ArgumentException">dateTime.Kind is Utc and current time zone does not equal Utc
            -or- dateTime.Kind is Local and curernt time zome does not equal Local
            -or- dateTime value represents invalid time.</exception>
        </member>
        <member name="M:C1.Schedule.TimeZoneInfo.CopyFrom(C1.Schedule.TimeZoneInfo)">
            <summary>
            Copies a time zone info form the specified <see cref="T:C1.Schedule.TimeZoneInfo"/> object into the current instance.
            </summary>
            <param name="info"></param>
        </member>
        <member name="T:C1.ScheduleCore.Resources.Categories">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Categories.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Categories.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Categories.Business">
            <summary>
              Looks up a localized string similar to ビジネス.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Categories.Competition">
            <summary>
              Looks up a localized string similar to 会社関係 (競合相手).
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Categories.Favorites">
            <summary>
              Looks up a localized string similar to お気に入 り.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Categories.Gifts">
            <summary>
              Looks up a localized string similar to プレゼント/ギフト.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Categories.Goals">
            <summary>
              Looks up a localized string similar to ゴール/目標.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Categories.Holiday">
            <summary>
              Looks up a localized string similar to 祝日.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Categories.HolidayCards">
            <summary>
              Looks up a localized string similar to 年賀状/暑中見舞い.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Categories.HotContacts">
            <summary>
              Looks up a localized string similar to 会社関係 (取引先).
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Categories.Ideas">
            <summary>
              Looks up a localized string similar to アイデア/ヒント.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Categories.International">
            <summary>
              Looks up a localized string similar to インターナショナル.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Categories.KeyCustomer">
            <summary>
              Looks up a localized string similar to 顧客.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Categories.Miscellanneous">
            <summary>
              Looks up a localized string similar to その他.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Categories.Personal">
            <summary>
              Looks up a localized string similar to 個人用.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Categories.PhoneCalls">
            <summary>
              Looks up a localized string similar to 通話記録.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Categories.Status">
            <summary>
              Looks up a localized string similar to 進捗状況.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Categories.Strategies">
            <summary>
              Looks up a localized string similar to 戦略.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Categories.Suppliers">
            <summary>
              Looks up a localized string similar to 業者.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Categories.Time">
            <summary>
              Looks up a localized string similar to 時間/経費.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Categories.VIP">
            <summary>
              Looks up a localized string similar to VIP.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Categories.Waiting">
            <summary>
              Looks up a localized string similar to 待機中.
            </summary>
        </member>
        <member name="T:C1.ScheduleCore.Resources.Exceptions">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Exceptions.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Exceptions.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Exceptions.DateOutOfRange">
            <summary>
              Looks up a localized string similar to The valid value is between {0} and {1}..
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Exceptions.FormatNotSupported">
            <summary>
              Looks up a localized string similar to 書式 {0} はサポートされていません。.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Exceptions.ImportError">
            <summary>
              Looks up a localized string similar to データのインポートに失敗しました。ファイルの書式が間違っているか、ファイルが壊れています。.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Exceptions.InvalidVCALInformation">
            <summary>
              Looks up a localized string similar to 有効な VCALENDAR 情報ではありません。.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Exceptions.MappingRequired">
            <summary>
              Looks up a localized string similar to {0} に必要な MappingName は指定されていません。.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Exceptions.MethodNotSupported">
            <summary>
              Looks up a localized string similar to このメソッドは、このオペレーシングシステムではサポートされていません。.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Exceptions.MinMaxDateValidationFailed">
            <summary>
              Looks up a localized string similar to The MaxDate value should be greater than MinDate value..
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Exceptions.NoFileOpenPermission">
            <summary>
              Looks up a localized string similar to ファイルを開くための権限がありません。.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Exceptions.NoFileSavePermission">
            <summary>
              Looks up a localized string similar to ファイルを保存するための権限がありません。.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Exceptions.NotAllInforImported">
            <summary>
              Looks up a localized string similar to データは無効であるため、すべての情報をインポートできませんでした。.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Exceptions.StartEndValidationFailed">
            <summary>
              Looks up a localized string similar to 開始値より大きい値を指定してください。.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Exceptions.XmlImportError">
            <summary>
              Looks up a localized string similar to C1Schedule ノードが見つかりません。.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Exceptions.InvalidNumber">
            <summary>
              Looks up a localized string similar to 無効な文字か、{0}.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Exceptions.NumberIsOutOfRange">
            <summary>
              Looks up a localized string similar to {0}の範囲で入力してください.
            </summary>
        </member>
        <member name="T:C1.ScheduleCore.Resources.Labels">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Labels.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Labels.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Labels.Anniversary">
            <summary>
              Looks up a localized string similar to 記念日.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Labels.Birthday">
            <summary>
              Looks up a localized string similar to 誕生日.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Labels.Business">
            <summary>
              Looks up a localized string similar to ビジネス.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Labels.Deadline">
            <summary>
              Looks up a localized string similar to 期日.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Labels.Important">
            <summary>
              Looks up a localized string similar to 重要.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Labels.MustAttend">
            <summary>
              Looks up a localized string similar to 要出席.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Labels.NeedsPreparation">
            <summary>
              Looks up a localized string similar to 要準備.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Labels.None">
            <summary>
              Looks up a localized string similar to なし.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Labels.Personal">
            <summary>
              Looks up a localized string similar to 個人用.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Labels.PhoneCall">
            <summary>
              Looks up a localized string similar to 通話記録.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Labels.TravelRequired">
            <summary>
              Looks up a localized string similar to 出張あり.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Labels.Vacation">
            <summary>
              Looks up a localized string similar to 休暇.
            </summary>
        </member>
        <member name="T:C1.ScheduleCore.Resources.MiscStrings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.MiscStrings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.MiscStrings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.MiscStrings.Daily">
            <summary>
              Looks up a localized string similar to 毎日.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.MiscStrings.Day">
            <summary>
              Looks up a localized string similar to 日.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.MiscStrings.EveryNDay">
            <summary>
              Looks up a localized string similar to {0} 日ごと.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.MiscStrings.EveryNMonth">
            <summary>
              Looks up a localized string similar to {0} か月ごとの {1} 日.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.MiscStrings.EveryNMonthOnTheNWeekday">
            <summary>
              Looks up a localized string similar to {0}か月ごとの{1}{2}.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.MiscStrings.EveryNWeek">
            <summary>
              Looks up a localized string similar to {0} 週間ごとの {1}.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.MiscStrings.First">
            <summary>
              Looks up a localized string similar to 第1.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.MiscStrings.Fourth">
            <summary>
              Looks up a localized string similar to 第4.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.MiscStrings.IncorrectPattern">
            <summary>
              Looks up a localized string similar to 定期的なパターンが正しくありません.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.MiscStrings.Last">
            <summary>
              Looks up a localized string similar to 最終.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.MiscStrings.Monthly">
            <summary>
              Looks up a localized string similar to 1 月ごとの {0} 日.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.MiscStrings.MonthlyOnTheNWeekday">
            <summary>
              Looks up a localized string similar to 1 か月ごとの{0}{1}.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.MiscStrings.NextAppointment">
            <summary>
              Looks up a localized string similar to 次の予定へ.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.MiscStrings.MoreAppointments">
            <summary>
              Looks up a localized string similar to 他の予定を表示するには、このボタンをクリックしてください。.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.MiscStrings.OnWorkingDays">
            <summary>
              Looks up a localized string similar to 稼働日.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.MiscStrings.PreviousAppointment">
            <summary>
              Looks up a localized string similar to 前の予定へ.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.MiscStrings.Second">
            <summary>
              Looks up a localized string similar to 第2.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.MiscStrings.Since">
            <summary>
              Looks up a localized string similar to 、{1} から {2}。{0} から開始.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.MiscStrings.SinceNTimes">
            <summary>
              Looks up a localized string similar to 、{1} から {2}。{0} から開始。{3} 回.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.MiscStrings.SinceUntil">
            <summary>
              Looks up a localized string similar to 、{2} から {3}。{0} から {1} まで有効.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.MiscStrings.Third">
            <summary>
              Looks up a localized string similar to 第3.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.MiscStrings.Weekday">
            <summary>
              Looks up a localized string similar to 平日.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.MiscStrings.Weekend">
            <summary>
              Looks up a localized string similar to 週末.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.MiscStrings.Weekly">
            <summary>
              Looks up a localized string similar to {0} ごと.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.MiscStrings.Yearly">
            <summary>
              Looks up a localized string similar to 毎年 {1} {0} 日.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.MiscStrings.YearlyNth">
            <summary>
              Looks up a localized string similar to 毎年{2}の{0}{1}.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.MiscStrings.Today">
            <summary>
              Looks up a localized string similar to Today.
            </summary>
        </member>
        <member name="T:C1.ScheduleCore.Resources.Statuses">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Statuses.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Statuses.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Statuses.Busy">
            <summary>
              Looks up a localized string similar to 予定あり.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Statuses.Free">
            <summary>
              Looks up a localized string similar to 空き時間.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Statuses.OutOfOffice">
            <summary>
              Looks up a localized string similar to 外出中.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Statuses.Tentative">
            <summary>
              Looks up a localized string similar to 仮の予定.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.Statuses.WorkingElsewhere">
            <summary>
              Looks up a localized string similar to 他の場所で作業中.
            </summary>
        </member>
        <member name="T:C1.ScheduleCore.Resources.TimeStrings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.TimeStrings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.TimeStrings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.TimeStrings.day">
            <summary>
              Looks up a localized string similar to 日.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.TimeStrings.days">
            <summary>
              Looks up a localized string similar to 日.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.TimeStrings.hour">
            <summary>
              Looks up a localized string similar to 時間.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.TimeStrings.hours">
            <summary>
              Looks up a localized string similar to 時間.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.TimeStrings.minute">
            <summary>
              Looks up a localized string similar to 分.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.TimeStrings.minutes">
            <summary>
              Looks up a localized string similar to 分.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.TimeStrings.NDays">
            <summary>
              Looks up a localized string similar to {0} 日.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.TimeStrings.NHours">
            <summary>
              Looks up a localized string similar to {0} 時間.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.TimeStrings.NMinutes">
            <summary>
              Looks up a localized string similar to {0} 分.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.TimeStrings.NWeeks">
            <summary>
              Looks up a localized string similar to {0} 週.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.TimeStrings.OneDay">
            <summary>
              Looks up a localized string similar to 1 日.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.TimeStrings.OneHour">
            <summary>
              Looks up a localized string similar to 1 時間.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.TimeStrings.OneMinute">
            <summary>
              Looks up a localized string similar to 1 分.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.TimeStrings.OneWeek">
            <summary>
              Looks up a localized string similar to 1 週.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.TimeStrings.week">
            <summary>
              Looks up a localized string similar to 週.
            </summary>
        </member>
        <member name="P:C1.ScheduleCore.Resources.TimeStrings.weeks">
            <summary>
              Looks up a localized string similar to 週.
            </summary>
        </member>
        <member name="T:C1.Util.Licensing.C1LicensedControlAttribute">
            <summary>
            Marks a control class that must depend on C1 license
            </summary>
        </member>
        <member name="M:C1.Util.Licensing.C1LicensedControlAttribute.#ctor">
            <summary>
            Constructs an entity of C1LicensedControlAttribute
            </summary>
        </member>
        <member name="T:C1.Util.Licensing.LicenseManager">
            <summary>
            Allows the users to set a license in the <see cref="P:Key"/> property.
            </summary>
            <remarks>
            See http://www.goxuni.com/licensing for more information.
            </remarks>
        </member>
        <member name="M:C1.Util.Licensing.LicenseManager.Validate">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="T:C1.Util.Licensing.C1AllowedCallerAttribute">
            <summary>
            Attribute used to specify assemblies that can use this product without a license.
            </summary>
        </member>
    </members>
</doc>
